   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"sdcard.c"
  23              	.Ltext0:
  24              		.file 1 "../src/sdcard.c"
 19535              		.align	1
 19536              		.thumb
 19537              		.thumb_func
 19539              	convert_from_bytes_to_power_of_two:
 19540              	.LFB56:
   1:../src/sdcard.c **** /******************** (C) COPYRIGHT 2010 STMicroelectronics ********************
   2:../src/sdcard.c **** * File Name          : sdcard.c
   3:../src/sdcard.c **** * Author             : MCD Application Team
   4:../src/sdcard.c **** * Version            : V3.1.1
   5:../src/sdcard.c **** * Date               : 04/07/2010
   6:../src/sdcard.c **** * Description        : This file provides all the SD Card driver firmware
   7:../src/sdcard.c **** *                      functions.
   8:../src/sdcard.c **** ********************************************************************************
   9:../src/sdcard.c **** * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  10:../src/sdcard.c **** * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
  11:../src/sdcard.c **** * AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
  12:../src/sdcard.c **** * INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
  13:../src/sdcard.c **** * CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
  14:../src/sdcard.c **** * INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  15:../src/sdcard.c **** *******************************************************************************/
  16:../src/sdcard.c **** 
  17:../src/sdcard.c **** /* Includes ------------------------------------------------------------------*/
  18:../src/sdcard.c **** 
  19:../src/sdcard.c **** #include "sdcard.h"
  20:../src/sdcard.c **** 
  21:../src/sdcard.c **** 
  22:../src/sdcard.c **** /* Private typedef -----------------------------------------------------------*/
  23:../src/sdcard.c **** /* Private define ------------------------------------------------------------*/
  24:../src/sdcard.c **** #define NULL 0
  25:../src/sdcard.c **** #define SDIO_STATIC_FLAGS               ((uint32_t)0x000005FF)
  26:../src/sdcard.c **** #define SDIO_CMD0TIMEOUT                ((uint32_t)0x00002710)
  27:../src/sdcard.c **** #define SDIO_FIFO_Address               ((uint32_t)0x40018080)
  28:../src/sdcard.c **** 
  29:../src/sdcard.c **** /* Mask for errors Card Status R1 (OCR Register) */
  30:../src/sdcard.c **** #define SD_OCR_ADDR_OUT_OF_RANGE        ((uint32_t)0x80000000)
  31:../src/sdcard.c **** #define SD_OCR_ADDR_MISALIGNED          ((uint32_t)0x40000000)
  32:../src/sdcard.c **** #define SD_OCR_BLOCK_LEN_ERR            ((uint32_t)0x20000000)
  33:../src/sdcard.c **** #define SD_OCR_ERASE_SEQ_ERR            ((uint32_t)0x10000000)
  34:../src/sdcard.c **** #define SD_OCR_BAD_ERASE_PARAM          ((uint32_t)0x08000000)
  35:../src/sdcard.c **** #define SD_OCR_WRITE_PROT_VIOLATION     ((uint32_t)0x04000000)
  36:../src/sdcard.c **** #define SD_OCR_LOCK_UNLOCK_FAILED       ((uint32_t)0x01000000)
  37:../src/sdcard.c **** #define SD_OCR_COM_CRC_FAILED           ((uint32_t)0x00800000)
  38:../src/sdcard.c **** #define SD_OCR_ILLEGAL_CMD              ((uint32_t)0x00400000)
  39:../src/sdcard.c **** #define SD_OCR_CARD_ECC_FAILED          ((uint32_t)0x00200000)
  40:../src/sdcard.c **** #define SD_OCR_CC_ERROR                 ((uint32_t)0x00100000)
  41:../src/sdcard.c **** #define SD_OCR_GENERAL_UNKNOWN_ERROR    ((uint32_t)0x00080000)
  42:../src/sdcard.c **** #define SD_OCR_STREAM_READ_UNDERRUN     ((uint32_t)0x00040000)
  43:../src/sdcard.c **** #define SD_OCR_STREAM_WRITE_OVERRUN     ((uint32_t)0x00020000)
  44:../src/sdcard.c **** #define SD_OCR_CID_CSD_OVERWRIETE       ((uint32_t)0x00010000)
  45:../src/sdcard.c **** #define SD_OCR_WP_ERASE_SKIP            ((uint32_t)0x00008000)
  46:../src/sdcard.c **** #define SD_OCR_CARD_ECC_DISABLED        ((uint32_t)0x00004000)
  47:../src/sdcard.c **** #define SD_OCR_ERASE_RESET              ((uint32_t)0x00002000)
  48:../src/sdcard.c **** #define SD_OCR_AKE_SEQ_ERROR            ((uint32_t)0x00000008)
  49:../src/sdcard.c **** #define SD_OCR_ERRORBITS                ((uint32_t)0xFDFFE008)
  50:../src/sdcard.c **** 
  51:../src/sdcard.c **** /* Masks for R6 Response */
  52:../src/sdcard.c **** #define SD_R6_GENERAL_UNKNOWN_ERROR     ((uint32_t)0x00002000)
  53:../src/sdcard.c **** #define SD_R6_ILLEGAL_CMD               ((uint32_t)0x00004000)
  54:../src/sdcard.c **** #define SD_R6_COM_CRC_FAILED            ((uint32_t)0x00008000)
  55:../src/sdcard.c **** 
  56:../src/sdcard.c **** #define SD_VOLTAGE_WINDOW_SD            ((uint32_t)0x80100000)
  57:../src/sdcard.c **** #define SD_HIGH_CAPACITY                ((uint32_t)0x40000000)
  58:../src/sdcard.c **** #define SD_STD_CAPACITY                 ((uint32_t)0x00000000)
  59:../src/sdcard.c **** #define SD_CHECK_PATTERN                ((uint32_t)0x000001AA)
  60:../src/sdcard.c **** 
  61:../src/sdcard.c **** #define SD_MAX_VOLT_TRIAL               ((uint32_t)0x0000FFFF)
  62:../src/sdcard.c **** #define SD_ALLZERO                      ((uint32_t)0x00000000)
  63:../src/sdcard.c **** 
  64:../src/sdcard.c **** #define SD_WIDE_BUS_SUPPORT             ((uint32_t)0x00040000)
  65:../src/sdcard.c **** #define SD_SINGLE_BUS_SUPPORT           ((uint32_t)0x00010000)
  66:../src/sdcard.c **** #define SD_CARD_LOCKED                  ((uint32_t)0x02000000)
  67:../src/sdcard.c **** #define SD_CARD_PROGRAMMING             ((uint32_t)0x00000007)
  68:../src/sdcard.c **** #define SD_CARD_RECEIVING               ((uint32_t)0x00000006)
  69:../src/sdcard.c **** #define SD_DATATIMEOUT                  ((uint32_t)0x000FFFFF)
  70:../src/sdcard.c **** #define SD_0TO7BITS                     ((uint32_t)0x000000FF)
  71:../src/sdcard.c **** #define SD_8TO15BITS                    ((uint32_t)0x0000FF00)
  72:../src/sdcard.c **** #define SD_16TO23BITS                   ((uint32_t)0x00FF0000)
  73:../src/sdcard.c **** #define SD_24TO31BITS                   ((uint32_t)0xFF000000)
  74:../src/sdcard.c **** #define SD_MAX_DATA_LENGTH              ((uint32_t)0x01FFFFFF)
  75:../src/sdcard.c **** 
  76:../src/sdcard.c **** #define SD_HALFFIFO                     ((uint32_t)0x00000008)
  77:../src/sdcard.c **** #define SD_HALFFIFOBYTES                ((uint32_t)0x00000020)
  78:../src/sdcard.c **** 
  79:../src/sdcard.c **** /* Command Class Supported */
  80:../src/sdcard.c **** #define SD_CCCC_LOCK_UNLOCK             ((uint32_t)0x00000080)
  81:../src/sdcard.c **** #define SD_CCCC_WRITE_PROT              ((uint32_t)0x00000040)
  82:../src/sdcard.c **** #define SD_CCCC_ERASE                   ((uint32_t)0x00000020)
  83:../src/sdcard.c **** 
  84:../src/sdcard.c **** /* Following commands are SD Card Specific commands.
  85:../src/sdcard.c ****    SDIO_APP_CMD should be sent before sending these commands. */
  86:../src/sdcard.c **** #define SDIO_SEND_IF_COND               ((uint32_t)0x00000008)
  87:../src/sdcard.c **** 
  88:../src/sdcard.c **** #define SDIO_INIT_CLK_DIV                  ((uint8_t)0xB2)
  89:../src/sdcard.c **** #define SDIO_TRANSFER_CLK_DIV              ((uint8_t)0x1) 
  90:../src/sdcard.c **** 
  91:../src/sdcard.c **** /* Private macro -------------------------------------------------------------*/
  92:../src/sdcard.c **** /* Private variables ---------------------------------------------------------*/
  93:../src/sdcard.c **** static uint32_t CardType =  SDIO_STD_CAPACITY_SD_CARD_V1_1;
  94:../src/sdcard.c **** static uint32_t CSD_Tab[4], CID_Tab[4], RCA = 0;
  95:../src/sdcard.c **** static uint32_t DeviceMode = SD_POLLING_MODE;
  96:../src/sdcard.c **** static uint32_t TotalNumberOfBytes = 0, StopCondition = 0;
  97:../src/sdcard.c **** uint32_t *SrcBuffer, *DestBuffer;
  98:../src/sdcard.c **** __IO SD_Error TransferError = SD_OK;
  99:../src/sdcard.c **** __IO uint32_t TransferEnd = 0;
 100:../src/sdcard.c **** __IO uint32_t NumberOfBytes = 0;
 101:../src/sdcard.c **** SDIO_InitTypeDef SDIO_InitStructure;
 102:../src/sdcard.c **** SDIO_CmdInitTypeDef SDIO_CmdInitStructure;
 103:../src/sdcard.c **** SDIO_DataInitTypeDef SDIO_DataInitStructure;
 104:../src/sdcard.c **** 
 105:../src/sdcard.c **** /* Private function prototypes -----------------------------------------------*/
 106:../src/sdcard.c **** static SD_Error CmdError(void);
 107:../src/sdcard.c **** static SD_Error CmdResp1Error(uint8_t cmd);
 108:../src/sdcard.c **** static SD_Error CmdResp7Error(void);
 109:../src/sdcard.c **** static SD_Error CmdResp3Error(void);
 110:../src/sdcard.c **** static SD_Error CmdResp2Error(void);
 111:../src/sdcard.c **** static SD_Error CmdResp6Error(uint8_t cmd, uint16_t *prca);
 112:../src/sdcard.c **** static SD_Error SDEnWideBus(FunctionalState NewState);
 113:../src/sdcard.c **** static SD_Error IsCardProgramming(uint8_t *pstatus);
 114:../src/sdcard.c **** static SD_Error FindSCR(uint16_t rca, uint32_t *pscr);
 115:../src/sdcard.c **** static uint8_t convert_from_bytes_to_power_of_two(uint16_t NumberOfBytes);
 116:../src/sdcard.c **** static void GPIO_Configuration(void);
 117:../src/sdcard.c **** static void DMA_TxConfiguration(uint32_t *BufferSRC, uint32_t BufferSize);
 118:../src/sdcard.c **** static void DMA_RxConfiguration(uint32_t *BufferDST, uint32_t BufferSize);
 119:../src/sdcard.c **** 
 120:../src/sdcard.c **** /* Private functions ---------------------------------------------------------*/
 121:../src/sdcard.c **** 
 122:../src/sdcard.c **** /*******************************************************************************
 123:../src/sdcard.c **** * Function Name  : SD_Init
 124:../src/sdcard.c **** * Description    : Initializes the SD Card and put it into StandBy State (Ready 
 125:../src/sdcard.c **** *                  for data transfer).
 126:../src/sdcard.c **** * Input          : None
 127:../src/sdcard.c **** * Output         : None
 128:../src/sdcard.c **** * Return         : SD_Error: SD Card Error code.
 129:../src/sdcard.c **** *******************************************************************************/
 130:../src/sdcard.c **** SD_Error SD_Init(void)
 131:../src/sdcard.c **** {
 132:../src/sdcard.c ****   SD_Error errorstatus = SD_OK;
 133:../src/sdcard.c **** 
 134:../src/sdcard.c ****   /* Configure SDIO interface GPIO */
 135:../src/sdcard.c ****   GPIO_Configuration();
 136:../src/sdcard.c **** 
 137:../src/sdcard.c ****   /* Enable the SDIO AHB Clock */
 138:../src/sdcard.c ****   RCC_AHBPeriphClockCmd(RCC_AHBPeriph_SDIO, ENABLE);
 139:../src/sdcard.c **** 
 140:../src/sdcard.c ****   /* Enable the DMA2 Clock */
 141:../src/sdcard.c ****   RCC_AHBPeriphClockCmd(RCC_AHBPeriph_DMA2, ENABLE);
 142:../src/sdcard.c **** 
 143:../src/sdcard.c ****   SDIO_DeInit();
 144:../src/sdcard.c **** 
 145:../src/sdcard.c ****   errorstatus = SD_PowerON();
 146:../src/sdcard.c **** 
 147:../src/sdcard.c ****   if (errorstatus != SD_OK)
 148:../src/sdcard.c ****   {
 149:../src/sdcard.c ****     /* CMD Response TimeOut (wait for CMDSENT flag) */
 150:../src/sdcard.c ****     return(errorstatus);
 151:../src/sdcard.c ****   }
 152:../src/sdcard.c **** 
 153:../src/sdcard.c ****   errorstatus = SD_InitializeCards();
 154:../src/sdcard.c **** 
 155:../src/sdcard.c ****   if (errorstatus != SD_OK)
 156:../src/sdcard.c ****   {
 157:../src/sdcard.c ****     /* CMD Response TimeOut (wait for CMDSENT flag) */
 158:../src/sdcard.c ****     return(errorstatus);
 159:../src/sdcard.c ****   }
 160:../src/sdcard.c **** 
 161:../src/sdcard.c ****   /* Configure the SDIO peripheral */
 162:../src/sdcard.c ****   /* HCLK = 72 MHz, SDIOCLK = 72 MHz, SDIO_CK = HCLK/(2 + 1) = 24 MHz */  
 163:../src/sdcard.c ****   SDIO_InitStructure.SDIO_ClockDiv = SDIO_TRANSFER_CLK_DIV; 
 164:../src/sdcard.c ****   SDIO_InitStructure.SDIO_ClockEdge = SDIO_ClockEdge_Rising;
 165:../src/sdcard.c ****   SDIO_InitStructure.SDIO_ClockBypass = SDIO_ClockBypass_Disable;
 166:../src/sdcard.c ****   SDIO_InitStructure.SDIO_ClockPowerSave = SDIO_ClockPowerSave_Disable;
 167:../src/sdcard.c ****   SDIO_InitStructure.SDIO_BusWide = SDIO_BusWide_1b;
 168:../src/sdcard.c ****   SDIO_InitStructure.SDIO_HardwareFlowControl = SDIO_HardwareFlowControl_Disable;
 169:../src/sdcard.c ****   SDIO_Init(&SDIO_InitStructure);
 170:../src/sdcard.c **** 
 171:../src/sdcard.c ****   return(errorstatus);
 172:../src/sdcard.c **** }
 173:../src/sdcard.c **** 
 174:../src/sdcard.c **** /*******************************************************************************
 175:../src/sdcard.c **** * Function Name  : SD_PowerON
 176:../src/sdcard.c **** * Description    : Enquires cards about their operating voltage and configures 
 177:../src/sdcard.c **** *                  clock controls.
 178:../src/sdcard.c **** * Input          : None
 179:../src/sdcard.c **** * Output         : None
 180:../src/sdcard.c **** * Return         : SD_Error: SD Card Error code.
 181:../src/sdcard.c **** *******************************************************************************/
 182:../src/sdcard.c **** SD_Error SD_PowerON(void)
 183:../src/sdcard.c **** {
 184:../src/sdcard.c ****   SD_Error errorstatus = SD_OK;
 185:../src/sdcard.c ****   uint32_t response = 0, count = 0;
 186:../src/sdcard.c ****   bool validvoltage = FALSE;
 187:../src/sdcard.c ****   uint32_t SDType = SD_STD_CAPACITY;
 188:../src/sdcard.c **** 
 189:../src/sdcard.c ****   /* Power ON Sequence -------------------------------------------------------*/
 190:../src/sdcard.c ****   /* Configure the SDIO peripheral */
 191:../src/sdcard.c ****   SDIO_InitStructure.SDIO_ClockDiv = SDIO_INIT_CLK_DIV; /* HCLK = 72MHz, SDIOCLK = 72MHz, SDIO_CK =
 192:../src/sdcard.c ****   SDIO_InitStructure.SDIO_ClockEdge = SDIO_ClockEdge_Rising;
 193:../src/sdcard.c ****   SDIO_InitStructure.SDIO_ClockBypass = SDIO_ClockBypass_Disable;
 194:../src/sdcard.c ****   SDIO_InitStructure.SDIO_ClockPowerSave = SDIO_ClockPowerSave_Disable;
 195:../src/sdcard.c ****   SDIO_InitStructure.SDIO_BusWide = SDIO_BusWide_1b;
 196:../src/sdcard.c ****   SDIO_InitStructure.SDIO_HardwareFlowControl = SDIO_HardwareFlowControl_Disable;
 197:../src/sdcard.c ****   SDIO_Init(&SDIO_InitStructure);
 198:../src/sdcard.c **** 
 199:../src/sdcard.c ****   /* Set Power State to ON */
 200:../src/sdcard.c ****   SDIO_SetPowerState(SDIO_PowerState_ON);
 201:../src/sdcard.c **** 
 202:../src/sdcard.c ****   /* Enable SDIO Clock */
 203:../src/sdcard.c ****   SDIO_ClockCmd(ENABLE);
 204:../src/sdcard.c **** 
 205:../src/sdcard.c ****   /* CMD0: GO_IDLE_STATE -------------------------------------------------------*/
 206:../src/sdcard.c ****   /* No CMD response required */
 207:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = 0x0;
 208:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_GO_IDLE_STATE;
 209:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_No;
 210:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 211:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 212:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 213:../src/sdcard.c **** 
 214:../src/sdcard.c ****   errorstatus = CmdError();
 215:../src/sdcard.c **** 
 216:../src/sdcard.c ****   if (errorstatus != SD_OK)
 217:../src/sdcard.c ****   {
 218:../src/sdcard.c ****     /* CMD Response TimeOut (wait for CMDSENT flag) */
 219:../src/sdcard.c ****     return(errorstatus);
 220:../src/sdcard.c ****   }
 221:../src/sdcard.c **** 
 222:../src/sdcard.c ****   /* CMD8: SEND_IF_COND --------------------------------------------------------*/
 223:../src/sdcard.c ****   /* Send CMD8 to verify SD card interface operating condition */
 224:../src/sdcard.c ****   /* Argument: - [31:12]: Reserved (shall be set to '0')
 225:../src/sdcard.c ****                - [11:8]: Supply Voltage (VHS) 0x1 (Range: 2.7-3.6 V)
 226:../src/sdcard.c ****                - [7:0]: Check Pattern (recommended 0xAA) */
 227:../src/sdcard.c ****   /* CMD Response: R7 */
 228:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = SD_CHECK_PATTERN;
 229:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SEND_IF_COND;
 230:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 231:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 232:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 233:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 234:../src/sdcard.c **** 
 235:../src/sdcard.c ****   errorstatus = CmdResp7Error();
 236:../src/sdcard.c **** 
 237:../src/sdcard.c ****   if (errorstatus == SD_OK)
 238:../src/sdcard.c ****   {
 239:../src/sdcard.c ****     CardType = SDIO_STD_CAPACITY_SD_CARD_V2_0; /* SD Card 2.0 */
 240:../src/sdcard.c ****     SDType = SD_HIGH_CAPACITY;
 241:../src/sdcard.c ****   }
 242:../src/sdcard.c ****   else
 243:../src/sdcard.c ****   {
 244:../src/sdcard.c ****     /* CMD55 */
 245:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = 0x00;
 246:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_APP_CMD;
 247:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 248:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 249:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 250:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
 251:../src/sdcard.c ****     errorstatus = CmdResp1Error(SDIO_APP_CMD);
 252:../src/sdcard.c ****   }
 253:../src/sdcard.c ****   /* CMD55 */
 254:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = 0x00;
 255:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_APP_CMD;
 256:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 257:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 258:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 259:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 260:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_APP_CMD);
 261:../src/sdcard.c **** 
 262:../src/sdcard.c ****   /* If errorstatus is Command TimeOut, it is a MMC card */
 263:../src/sdcard.c ****   /* If errorstatus is SD_OK it is a SD card: SD card 2.0 (voltage range mismatch)
 264:../src/sdcard.c ****      or SD card 1.x */
 265:../src/sdcard.c ****   if (errorstatus == SD_OK)
 266:../src/sdcard.c ****   {
 267:../src/sdcard.c ****     /* SD CARD */
 268:../src/sdcard.c ****     /* Send ACMD41 SD_APP_OP_COND with Argument 0x80100000 */
 269:../src/sdcard.c ****     while ((!validvoltage) && (count < SD_MAX_VOLT_TRIAL))
 270:../src/sdcard.c ****     {
 271:../src/sdcard.c **** 
 272:../src/sdcard.c ****       /* SEND CMD55 APP_CMD with RCA as 0 */
 273:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Argument = 0x00;
 274:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_APP_CMD;
 275:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 276:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 277:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 278:../src/sdcard.c ****       SDIO_SendCommand(&SDIO_CmdInitStructure);
 279:../src/sdcard.c **** 
 280:../src/sdcard.c ****       errorstatus = CmdResp1Error(SDIO_APP_CMD);
 281:../src/sdcard.c **** 
 282:../src/sdcard.c ****       if (errorstatus != SD_OK)
 283:../src/sdcard.c ****       {
 284:../src/sdcard.c ****         return(errorstatus);
 285:../src/sdcard.c ****       }
 286:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Argument = SD_VOLTAGE_WINDOW_SD | SDType;
 287:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SD_APP_OP_COND;
 288:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 289:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 290:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 291:../src/sdcard.c ****       SDIO_SendCommand(&SDIO_CmdInitStructure);
 292:../src/sdcard.c **** 
 293:../src/sdcard.c ****       errorstatus = CmdResp3Error();
 294:../src/sdcard.c ****       if (errorstatus != SD_OK)
 295:../src/sdcard.c ****       {
 296:../src/sdcard.c ****         return(errorstatus);
 297:../src/sdcard.c ****       }
 298:../src/sdcard.c **** 
 299:../src/sdcard.c ****       response = SDIO_GetResponse(SDIO_RESP1);
 300:../src/sdcard.c ****       validvoltage = (bool) (((response >> 31) == 1) ? 1 : 0);
 301:../src/sdcard.c ****       count++;
 302:../src/sdcard.c ****     }
 303:../src/sdcard.c ****     if (count >= SD_MAX_VOLT_TRIAL)
 304:../src/sdcard.c ****     {
 305:../src/sdcard.c ****       errorstatus = SD_INVALID_VOLTRANGE;
 306:../src/sdcard.c ****       return(errorstatus);
 307:../src/sdcard.c ****     }
 308:../src/sdcard.c **** 
 309:../src/sdcard.c ****     if (response &= SD_HIGH_CAPACITY)
 310:../src/sdcard.c ****     {
 311:../src/sdcard.c ****       CardType = SDIO_HIGH_CAPACITY_SD_CARD;
 312:../src/sdcard.c ****     }
 313:../src/sdcard.c **** 
 314:../src/sdcard.c ****   }/* else MMC Card */
 315:../src/sdcard.c **** 
 316:../src/sdcard.c ****   return(errorstatus);
 317:../src/sdcard.c **** }
 318:../src/sdcard.c **** 
 319:../src/sdcard.c **** /*******************************************************************************
 320:../src/sdcard.c **** * Function Name  : SD_PowerOFF
 321:../src/sdcard.c **** * Description    : Turns the SDIO output signals off.
 322:../src/sdcard.c **** * Input          : None
 323:../src/sdcard.c **** * Output         : None
 324:../src/sdcard.c **** * Return         : SD_Error: SD Card Error code.
 325:../src/sdcard.c **** *******************************************************************************/
 326:../src/sdcard.c **** SD_Error SD_PowerOFF(void)
 327:../src/sdcard.c **** {
 328:../src/sdcard.c ****   SD_Error errorstatus = SD_OK;
 329:../src/sdcard.c **** 
 330:../src/sdcard.c ****   /* Set Power State to OFF */
 331:../src/sdcard.c ****   SDIO_SetPowerState(SDIO_PowerState_OFF);
 332:../src/sdcard.c **** 
 333:../src/sdcard.c ****   return(errorstatus);
 334:../src/sdcard.c **** }
 335:../src/sdcard.c **** 
 336:../src/sdcard.c **** /*******************************************************************************
 337:../src/sdcard.c **** * Function Name  : SD_InitializeCards
 338:../src/sdcard.c **** * Description    : Intialises all cards or single card as the case may be. 
 339:../src/sdcard.c **** *                  Card(s) come into standby state.
 340:../src/sdcard.c **** * Input          : None
 341:../src/sdcard.c **** * Output         : None
 342:../src/sdcard.c **** * Return         : SD_Error: SD Card Error code.
 343:../src/sdcard.c **** *******************************************************************************/
 344:../src/sdcard.c **** SD_Error SD_InitializeCards(void)
 345:../src/sdcard.c **** {
 346:../src/sdcard.c ****   SD_Error errorstatus = SD_OK;
 347:../src/sdcard.c ****   uint16_t rca = 0x01;
 348:../src/sdcard.c **** 
 349:../src/sdcard.c ****   if (SDIO_GetPowerState() == SDIO_PowerState_OFF)
 350:../src/sdcard.c ****   {
 351:../src/sdcard.c ****     errorstatus = SD_REQUEST_NOT_APPLICABLE;
 352:../src/sdcard.c ****     return(errorstatus);
 353:../src/sdcard.c ****   }
 354:../src/sdcard.c **** 
 355:../src/sdcard.c ****   if (SDIO_SECURE_DIGITAL_IO_CARD != CardType)
 356:../src/sdcard.c ****   {
 357:../src/sdcard.c ****     /* Send CMD2 ALL_SEND_CID */
 358:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = 0x0;
 359:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_ALL_SEND_CID;
 360:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Long;
 361:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 362:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 363:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
 364:../src/sdcard.c **** 
 365:../src/sdcard.c ****     errorstatus = CmdResp2Error();
 366:../src/sdcard.c **** 
 367:../src/sdcard.c ****     if (SD_OK != errorstatus)
 368:../src/sdcard.c ****     {
 369:../src/sdcard.c ****       return(errorstatus);
 370:../src/sdcard.c ****     }
 371:../src/sdcard.c **** 
 372:../src/sdcard.c ****     CID_Tab[0] = SDIO_GetResponse(SDIO_RESP1);
 373:../src/sdcard.c ****     CID_Tab[1] = SDIO_GetResponse(SDIO_RESP2);
 374:../src/sdcard.c ****     CID_Tab[2] = SDIO_GetResponse(SDIO_RESP3);
 375:../src/sdcard.c ****     CID_Tab[3] = SDIO_GetResponse(SDIO_RESP4);
 376:../src/sdcard.c ****   }
 377:../src/sdcard.c ****   if ((SDIO_STD_CAPACITY_SD_CARD_V1_1 == CardType) ||  (SDIO_STD_CAPACITY_SD_CARD_V2_0 == CardType)
 378:../src/sdcard.c ****       ||  (SDIO_HIGH_CAPACITY_SD_CARD == CardType))
 379:../src/sdcard.c ****   {
 380:../src/sdcard.c ****     /* Send CMD3 SET_REL_ADDR with argument 0 */
 381:../src/sdcard.c ****     /* SD Card publishes its RCA. */
 382:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = 0x00;
 383:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SET_REL_ADDR;
 384:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 385:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 386:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 387:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
 388:../src/sdcard.c **** 
 389:../src/sdcard.c ****     errorstatus = CmdResp6Error(SDIO_SET_REL_ADDR, &rca);
 390:../src/sdcard.c **** 
 391:../src/sdcard.c ****     if (SD_OK != errorstatus)
 392:../src/sdcard.c ****     {
 393:../src/sdcard.c ****       return(errorstatus);
 394:../src/sdcard.c ****     }
 395:../src/sdcard.c ****   }
 396:../src/sdcard.c **** 
 397:../src/sdcard.c ****   if (SDIO_SECURE_DIGITAL_IO_CARD != CardType)
 398:../src/sdcard.c ****   {
 399:../src/sdcard.c ****     RCA = rca;
 400:../src/sdcard.c **** 
 401:../src/sdcard.c ****     /* Send CMD9 SEND_CSD with argument as card's RCA */
 402:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = (uint32_t)(rca << 16);
 403:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SEND_CSD;
 404:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Long;
 405:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 406:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 407:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
 408:../src/sdcard.c **** 
 409:../src/sdcard.c ****     errorstatus = CmdResp2Error();
 410:../src/sdcard.c **** 
 411:../src/sdcard.c ****     if (SD_OK != errorstatus)
 412:../src/sdcard.c ****     {
 413:../src/sdcard.c ****       return(errorstatus);
 414:../src/sdcard.c ****     }
 415:../src/sdcard.c **** 
 416:../src/sdcard.c ****     CSD_Tab[0] = SDIO_GetResponse(SDIO_RESP1);
 417:../src/sdcard.c ****     CSD_Tab[1] = SDIO_GetResponse(SDIO_RESP2);
 418:../src/sdcard.c ****     CSD_Tab[2] = SDIO_GetResponse(SDIO_RESP3);
 419:../src/sdcard.c ****     CSD_Tab[3] = SDIO_GetResponse(SDIO_RESP4);
 420:../src/sdcard.c ****   }
 421:../src/sdcard.c **** 
 422:../src/sdcard.c ****   errorstatus = SD_OK; /* All cards get intialized */
 423:../src/sdcard.c **** 
 424:../src/sdcard.c ****   return(errorstatus);
 425:../src/sdcard.c **** }
 426:../src/sdcard.c **** 
 427:../src/sdcard.c **** /*******************************************************************************
 428:../src/sdcard.c **** * Function Name  : SD_GetCardInfo
 429:../src/sdcard.c **** * Description    : Returns information about specific card.
 430:../src/sdcard.c **** * Input          : cardinfo : pointer to a SD_CardInfo structure 
 431:../src/sdcard.c **** *                  that contains all SD card information.
 432:../src/sdcard.c **** * Output         : None
 433:../src/sdcard.c **** * Return         : SD_Error: SD Card Error code.
 434:../src/sdcard.c **** *******************************************************************************/
 435:../src/sdcard.c **** SD_Error SD_GetCardInfo(SD_CardInfo *cardinfo)
 436:../src/sdcard.c **** {
 437:../src/sdcard.c ****   SD_Error errorstatus = SD_OK;
 438:../src/sdcard.c ****   uint8_t tmp = 0;
 439:../src/sdcard.c **** 
 440:../src/sdcard.c ****   cardinfo->CardType = (uint8_t)CardType;
 441:../src/sdcard.c ****   cardinfo->RCA = (uint16_t)RCA;
 442:../src/sdcard.c **** 
 443:../src/sdcard.c ****   /* Byte 0 */
 444:../src/sdcard.c ****   tmp = (uint8_t)((CSD_Tab[0] & 0xFF000000) >> 24);
 445:../src/sdcard.c ****   cardinfo->SD_csd.CSDStruct = (tmp & 0xC0) >> 6;
 446:../src/sdcard.c ****   cardinfo->SD_csd.SysSpecVersion = (tmp & 0x3C) >> 2;
 447:../src/sdcard.c ****   cardinfo->SD_csd.Reserved1 = tmp & 0x03;
 448:../src/sdcard.c **** 
 449:../src/sdcard.c ****   /* Byte 1 */
 450:../src/sdcard.c ****   tmp = (uint8_t)((CSD_Tab[0] & 0x00FF0000) >> 16);
 451:../src/sdcard.c ****   cardinfo->SD_csd.TAAC = tmp;
 452:../src/sdcard.c **** 
 453:../src/sdcard.c ****   /* Byte 2 */
 454:../src/sdcard.c ****   tmp = (uint8_t)((CSD_Tab[0] & 0x0000FF00) >> 8);
 455:../src/sdcard.c ****   cardinfo->SD_csd.NSAC = tmp;
 456:../src/sdcard.c **** 
 457:../src/sdcard.c ****   /* Byte 3 */
 458:../src/sdcard.c ****   tmp = (uint8_t)(CSD_Tab[0] & 0x000000FF);
 459:../src/sdcard.c ****   cardinfo->SD_csd.MaxBusClkFrec = tmp;
 460:../src/sdcard.c **** 
 461:../src/sdcard.c ****   /* Byte 4 */
 462:../src/sdcard.c ****   tmp = (uint8_t)((CSD_Tab[1] & 0xFF000000) >> 24);
 463:../src/sdcard.c ****   cardinfo->SD_csd.CardComdClasses = tmp << 4;
 464:../src/sdcard.c **** 
 465:../src/sdcard.c ****   /* Byte 5 */
 466:../src/sdcard.c ****   tmp = (uint8_t)((CSD_Tab[1] & 0x00FF0000) >> 16);
 467:../src/sdcard.c ****   cardinfo->SD_csd.CardComdClasses |= (tmp & 0xF0) >> 4;
 468:../src/sdcard.c ****   cardinfo->SD_csd.RdBlockLen = tmp & 0x0F;
 469:../src/sdcard.c **** 
 470:../src/sdcard.c ****   /* Byte 6 */
 471:../src/sdcard.c ****   tmp = (uint8_t)((CSD_Tab[1] & 0x0000FF00) >> 8);
 472:../src/sdcard.c ****   cardinfo->SD_csd.PartBlockRead = (tmp & 0x80) >> 7;
 473:../src/sdcard.c ****   cardinfo->SD_csd.WrBlockMisalign = (tmp & 0x40) >> 6;
 474:../src/sdcard.c ****   cardinfo->SD_csd.RdBlockMisalign = (tmp & 0x20) >> 5;
 475:../src/sdcard.c ****   cardinfo->SD_csd.DSRImpl = (tmp & 0x10) >> 4;
 476:../src/sdcard.c ****   cardinfo->SD_csd.Reserved2 = 0; /* Reserved */
 477:../src/sdcard.c **** 
 478:../src/sdcard.c ****   if ((CardType == SDIO_STD_CAPACITY_SD_CARD_V1_1) || (CardType == SDIO_STD_CAPACITY_SD_CARD_V2_0))
 479:../src/sdcard.c ****   {
 480:../src/sdcard.c ****     cardinfo->SD_csd.DeviceSize = (tmp & 0x03) << 10;
 481:../src/sdcard.c **** 
 482:../src/sdcard.c ****     /* Byte 7 */
 483:../src/sdcard.c ****     tmp = (uint8_t)(CSD_Tab[1] & 0x000000FF);
 484:../src/sdcard.c ****     cardinfo->SD_csd.DeviceSize |= (tmp) << 2;
 485:../src/sdcard.c **** 
 486:../src/sdcard.c ****     /* Byte 8 */
 487:../src/sdcard.c ****     tmp = (uint8_t)((CSD_Tab[2] & 0xFF000000) >> 24);
 488:../src/sdcard.c ****     cardinfo->SD_csd.DeviceSize |= (tmp & 0xC0) >> 6;
 489:../src/sdcard.c **** 
 490:../src/sdcard.c ****     cardinfo->SD_csd.MaxRdCurrentVDDMin = (tmp & 0x38) >> 3;
 491:../src/sdcard.c ****     cardinfo->SD_csd.MaxRdCurrentVDDMax = (tmp & 0x07);
 492:../src/sdcard.c **** 
 493:../src/sdcard.c ****     /* Byte 9 */
 494:../src/sdcard.c ****     tmp = (uint8_t)((CSD_Tab[2] & 0x00FF0000) >> 16);
 495:../src/sdcard.c ****     cardinfo->SD_csd.MaxWrCurrentVDDMin = (tmp & 0xE0) >> 5;
 496:../src/sdcard.c ****     cardinfo->SD_csd.MaxWrCurrentVDDMax = (tmp & 0x1C) >> 2;
 497:../src/sdcard.c ****     cardinfo->SD_csd.DeviceSizeMul = (tmp & 0x03) << 1;
 498:../src/sdcard.c ****     /* Byte 10 */
 499:../src/sdcard.c ****     tmp = (uint8_t)((CSD_Tab[2] & 0x0000FF00) >> 8);
 500:../src/sdcard.c ****     cardinfo->SD_csd.DeviceSizeMul |= (tmp & 0x80) >> 7;
 501:../src/sdcard.c ****     
 502:../src/sdcard.c ****     cardinfo->CardCapacity = (cardinfo->SD_csd.DeviceSize + 1) ;
 503:../src/sdcard.c ****     cardinfo->CardCapacity *= (1 << (cardinfo->SD_csd.DeviceSizeMul + 2));
 504:../src/sdcard.c ****     cardinfo->CardBlockSize = 1 << (cardinfo->SD_csd.RdBlockLen);
 505:../src/sdcard.c ****     cardinfo->CardCapacity *= cardinfo->CardBlockSize;
 506:../src/sdcard.c ****   }
 507:../src/sdcard.c ****   else if (CardType == SDIO_HIGH_CAPACITY_SD_CARD)
 508:../src/sdcard.c ****   {
 509:../src/sdcard.c ****     /* Byte 7 */
 510:../src/sdcard.c ****     tmp = (uint8_t)(CSD_Tab[1] & 0x000000FF);
 511:../src/sdcard.c ****     cardinfo->SD_csd.DeviceSize = (tmp & 0x3F) << 16;
 512:../src/sdcard.c **** 
 513:../src/sdcard.c ****     /* Byte 8 */
 514:../src/sdcard.c ****     tmp = (uint8_t)((CSD_Tab[2] & 0xFF000000) >> 24);
 515:../src/sdcard.c **** 
 516:../src/sdcard.c ****     cardinfo->SD_csd.DeviceSize |= (tmp << 8);
 517:../src/sdcard.c **** 
 518:../src/sdcard.c ****     /* Byte 9 */
 519:../src/sdcard.c ****     tmp = (uint8_t)((CSD_Tab[2] & 0x00FF0000) >> 16);
 520:../src/sdcard.c **** 
 521:../src/sdcard.c ****     cardinfo->SD_csd.DeviceSize |= (tmp);
 522:../src/sdcard.c **** 
 523:../src/sdcard.c ****     /* Byte 10 */
 524:../src/sdcard.c ****     tmp = (uint8_t)((CSD_Tab[2] & 0x0000FF00) >> 8);
 525:../src/sdcard.c ****     
 526:../src/sdcard.c ****     cardinfo->CardCapacity = (cardinfo->SD_csd.DeviceSize + 1) * 512 * 1024;
 527:../src/sdcard.c ****     cardinfo->CardBlockSize = 512;    
 528:../src/sdcard.c ****   }
 529:../src/sdcard.c **** 
 530:../src/sdcard.c **** 
 531:../src/sdcard.c ****   cardinfo->SD_csd.EraseGrSize = (tmp & 0x40) >> 6;
 532:../src/sdcard.c ****   cardinfo->SD_csd.EraseGrMul = (tmp & 0x3F) << 1;
 533:../src/sdcard.c **** 
 534:../src/sdcard.c ****   /* Byte 11 */
 535:../src/sdcard.c ****   tmp = (uint8_t)(CSD_Tab[2] & 0x000000FF);
 536:../src/sdcard.c ****   cardinfo->SD_csd.EraseGrMul |= (tmp & 0x80) >> 7;
 537:../src/sdcard.c ****   cardinfo->SD_csd.WrProtectGrSize = (tmp & 0x7F);
 538:../src/sdcard.c **** 
 539:../src/sdcard.c ****   /* Byte 12 */
 540:../src/sdcard.c ****   tmp = (uint8_t)((CSD_Tab[3] & 0xFF000000) >> 24);
 541:../src/sdcard.c ****   cardinfo->SD_csd.WrProtectGrEnable = (tmp & 0x80) >> 7;
 542:../src/sdcard.c ****   cardinfo->SD_csd.ManDeflECC = (tmp & 0x60) >> 5;
 543:../src/sdcard.c ****   cardinfo->SD_csd.WrSpeedFact = (tmp & 0x1C) >> 2;
 544:../src/sdcard.c ****   cardinfo->SD_csd.MaxWrBlockLen = (tmp & 0x03) << 2;
 545:../src/sdcard.c **** 
 546:../src/sdcard.c ****   /* Byte 13 */
 547:../src/sdcard.c ****   tmp = (uint8_t)((CSD_Tab[3] & 0x00FF0000) >> 16);
 548:../src/sdcard.c ****   cardinfo->SD_csd.MaxWrBlockLen |= (tmp & 0xC0) >> 6;
 549:../src/sdcard.c ****   cardinfo->SD_csd.WriteBlockPaPartial = (tmp & 0x20) >> 5;
 550:../src/sdcard.c ****   cardinfo->SD_csd.Reserved3 = 0;
 551:../src/sdcard.c ****   cardinfo->SD_csd.ContentProtectAppli = (tmp & 0x01);
 552:../src/sdcard.c **** 
 553:../src/sdcard.c ****   /* Byte 14 */
 554:../src/sdcard.c ****   tmp = (uint8_t)((CSD_Tab[3] & 0x0000FF00) >> 8);
 555:../src/sdcard.c ****   cardinfo->SD_csd.FileFormatGrouop = (tmp & 0x80) >> 7;
 556:../src/sdcard.c ****   cardinfo->SD_csd.CopyFlag = (tmp & 0x40) >> 6;
 557:../src/sdcard.c ****   cardinfo->SD_csd.PermWrProtect = (tmp & 0x20) >> 5;
 558:../src/sdcard.c ****   cardinfo->SD_csd.TempWrProtect = (tmp & 0x10) >> 4;
 559:../src/sdcard.c ****   cardinfo->SD_csd.FileFormat = (tmp & 0x0C) >> 2;
 560:../src/sdcard.c ****   cardinfo->SD_csd.ECC = (tmp & 0x03);
 561:../src/sdcard.c **** 
 562:../src/sdcard.c ****   /* Byte 15 */
 563:../src/sdcard.c ****   tmp = (uint8_t)(CSD_Tab[3] & 0x000000FF);
 564:../src/sdcard.c ****   cardinfo->SD_csd.CSD_CRC = (tmp & 0xFE) >> 1;
 565:../src/sdcard.c ****   cardinfo->SD_csd.Reserved4 = 1;
 566:../src/sdcard.c **** 
 567:../src/sdcard.c **** 
 568:../src/sdcard.c ****   /* Byte 0 */
 569:../src/sdcard.c ****   tmp = (uint8_t)((CID_Tab[0] & 0xFF000000) >> 24);
 570:../src/sdcard.c ****   cardinfo->SD_cid.ManufacturerID = tmp;
 571:../src/sdcard.c **** 
 572:../src/sdcard.c ****   /* Byte 1 */
 573:../src/sdcard.c ****   tmp = (uint8_t)((CID_Tab[0] & 0x00FF0000) >> 16);
 574:../src/sdcard.c ****   cardinfo->SD_cid.OEM_AppliID = tmp << 8;
 575:../src/sdcard.c **** 
 576:../src/sdcard.c ****   /* Byte 2 */
 577:../src/sdcard.c ****   tmp = (uint8_t)((CID_Tab[0] & 0x000000FF00) >> 8);
 578:../src/sdcard.c ****   cardinfo->SD_cid.OEM_AppliID |= tmp;
 579:../src/sdcard.c **** 
 580:../src/sdcard.c ****   /* Byte 3 */
 581:../src/sdcard.c ****   tmp = (uint8_t)(CID_Tab[0] & 0x000000FF);
 582:../src/sdcard.c ****   cardinfo->SD_cid.ProdName1 = tmp << 24;
 583:../src/sdcard.c **** 
 584:../src/sdcard.c ****   /* Byte 4 */
 585:../src/sdcard.c ****   tmp = (uint8_t)((CID_Tab[1] & 0xFF000000) >> 24);
 586:../src/sdcard.c ****   cardinfo->SD_cid.ProdName1 |= tmp << 16;
 587:../src/sdcard.c **** 
 588:../src/sdcard.c ****   /* Byte 5 */
 589:../src/sdcard.c ****   tmp = (uint8_t)((CID_Tab[1] & 0x00FF0000) >> 16);
 590:../src/sdcard.c ****   cardinfo->SD_cid.ProdName1 |= tmp << 8;
 591:../src/sdcard.c **** 
 592:../src/sdcard.c ****   /* Byte 6 */
 593:../src/sdcard.c ****   tmp = (uint8_t)((CID_Tab[1] & 0x0000FF00) >> 8);
 594:../src/sdcard.c ****   cardinfo->SD_cid.ProdName1 |= tmp;
 595:../src/sdcard.c **** 
 596:../src/sdcard.c ****   /* Byte 7 */
 597:../src/sdcard.c ****   tmp = (uint8_t)(CID_Tab[1] & 0x000000FF);
 598:../src/sdcard.c ****   cardinfo->SD_cid.ProdName2 = tmp;
 599:../src/sdcard.c **** 
 600:../src/sdcard.c ****   /* Byte 8 */
 601:../src/sdcard.c ****   tmp = (uint8_t)((CID_Tab[2] & 0xFF000000) >> 24);
 602:../src/sdcard.c ****   cardinfo->SD_cid.ProdRev = tmp;
 603:../src/sdcard.c **** 
 604:../src/sdcard.c ****   /* Byte 9 */
 605:../src/sdcard.c ****   tmp = (uint8_t)((CID_Tab[2] & 0x00FF0000) >> 16);
 606:../src/sdcard.c ****   cardinfo->SD_cid.ProdSN = tmp << 24;
 607:../src/sdcard.c **** 
 608:../src/sdcard.c ****   /* Byte 10 */
 609:../src/sdcard.c ****   tmp = (uint8_t)((CID_Tab[2] & 0x0000FF00) >> 8);
 610:../src/sdcard.c ****   cardinfo->SD_cid.ProdSN |= tmp << 16;
 611:../src/sdcard.c **** 
 612:../src/sdcard.c ****   /* Byte 11 */
 613:../src/sdcard.c ****   tmp = (uint8_t)(CID_Tab[2] & 0x000000FF);
 614:../src/sdcard.c ****   cardinfo->SD_cid.ProdSN |= tmp << 8;
 615:../src/sdcard.c **** 
 616:../src/sdcard.c ****   /* Byte 12 */
 617:../src/sdcard.c ****   tmp = (uint8_t)((CID_Tab[3] & 0xFF000000) >> 24);
 618:../src/sdcard.c ****   cardinfo->SD_cid.ProdSN |= tmp;
 619:../src/sdcard.c **** 
 620:../src/sdcard.c ****   /* Byte 13 */
 621:../src/sdcard.c ****   tmp = (uint8_t)((CID_Tab[3] & 0x00FF0000) >> 16);
 622:../src/sdcard.c ****   cardinfo->SD_cid.Reserved1 |= (tmp & 0xF0) >> 4;
 623:../src/sdcard.c ****   cardinfo->SD_cid.ManufactDate = (tmp & 0x0F) << 8;
 624:../src/sdcard.c **** 
 625:../src/sdcard.c ****   /* Byte 14 */
 626:../src/sdcard.c ****   tmp = (uint8_t)((CID_Tab[3] & 0x0000FF00) >> 8);
 627:../src/sdcard.c ****   cardinfo->SD_cid.ManufactDate |= tmp;
 628:../src/sdcard.c **** 
 629:../src/sdcard.c ****   /* Byte 15 */
 630:../src/sdcard.c ****   tmp = (uint8_t)(CID_Tab[3] & 0x000000FF);
 631:../src/sdcard.c ****   cardinfo->SD_cid.CID_CRC = (tmp & 0xFE) >> 1;
 632:../src/sdcard.c ****   cardinfo->SD_cid.Reserved2 = 1;
 633:../src/sdcard.c ****   
 634:../src/sdcard.c ****   return(errorstatus);
 635:../src/sdcard.c **** }
 636:../src/sdcard.c **** 
 637:../src/sdcard.c **** /*******************************************************************************
 638:../src/sdcard.c **** * Function Name  : SD_EnableWideBusOperation
 639:../src/sdcard.c **** * Description    : Enables wide bus opeartion for the requeseted card if 
 640:../src/sdcard.c **** *                  supported by card.
 641:../src/sdcard.c **** * Input          : WideMode: Specifies the SD card wide bus mode. 
 642:../src/sdcard.c **** *                     This parameter can be one of the following values:
 643:../src/sdcard.c **** *                       - SDIO_BusWide_8b: 8-bit data transfer (Only for MMC)
 644:../src/sdcard.c **** *                       - SDIO_BusWide_4b: 4-bit data transfer
 645:../src/sdcard.c **** *                       - SDIO_BusWide_1b: 1-bit data transfer
 646:../src/sdcard.c **** * Output         : None
 647:../src/sdcard.c **** * Return         : SD_Error: SD Card Error code.
 648:../src/sdcard.c **** *******************************************************************************/
 649:../src/sdcard.c **** SD_Error SD_EnableWideBusOperation(uint32_t WideMode)
 650:../src/sdcard.c **** {
 651:../src/sdcard.c ****   SD_Error errorstatus = SD_OK;
 652:../src/sdcard.c **** 
 653:../src/sdcard.c ****   /* MMC Card doesn't support this feature */
 654:../src/sdcard.c ****   if (SDIO_MULTIMEDIA_CARD == CardType)
 655:../src/sdcard.c ****   {
 656:../src/sdcard.c ****     errorstatus = SD_UNSUPPORTED_FEATURE;
 657:../src/sdcard.c ****     return(errorstatus);
 658:../src/sdcard.c ****   }
 659:../src/sdcard.c ****   else if ((SDIO_STD_CAPACITY_SD_CARD_V1_1 == CardType) || (SDIO_STD_CAPACITY_SD_CARD_V2_0 == CardT
 660:../src/sdcard.c ****   {
 661:../src/sdcard.c ****     if (SDIO_BusWide_8b == WideMode)
 662:../src/sdcard.c ****     {
 663:../src/sdcard.c ****       errorstatus = SD_UNSUPPORTED_FEATURE;
 664:../src/sdcard.c ****       return(errorstatus);
 665:../src/sdcard.c ****     }
 666:../src/sdcard.c ****     else if (SDIO_BusWide_4b == WideMode)
 667:../src/sdcard.c ****     {
 668:../src/sdcard.c ****       errorstatus = SDEnWideBus(ENABLE);
 669:../src/sdcard.c **** 
 670:../src/sdcard.c ****       if (SD_OK == errorstatus)
 671:../src/sdcard.c ****       {
 672:../src/sdcard.c ****         /* Configure the SDIO peripheral */
 673:../src/sdcard.c ****         SDIO_InitStructure.SDIO_ClockDiv = SDIO_TRANSFER_CLK_DIV; 
 674:../src/sdcard.c ****         SDIO_InitStructure.SDIO_ClockEdge = SDIO_ClockEdge_Rising;
 675:../src/sdcard.c ****         SDIO_InitStructure.SDIO_ClockBypass = SDIO_ClockBypass_Disable;
 676:../src/sdcard.c ****         SDIO_InitStructure.SDIO_ClockPowerSave = SDIO_ClockPowerSave_Disable;
 677:../src/sdcard.c ****         SDIO_InitStructure.SDIO_BusWide = SDIO_BusWide_4b;
 678:../src/sdcard.c ****         SDIO_InitStructure.SDIO_HardwareFlowControl = SDIO_HardwareFlowControl_Disable;
 679:../src/sdcard.c ****         SDIO_Init(&SDIO_InitStructure);
 680:../src/sdcard.c ****       }
 681:../src/sdcard.c ****     }
 682:../src/sdcard.c ****     else
 683:../src/sdcard.c ****     {
 684:../src/sdcard.c ****       errorstatus = SDEnWideBus(DISABLE);
 685:../src/sdcard.c **** 
 686:../src/sdcard.c ****       if (SD_OK == errorstatus)
 687:../src/sdcard.c ****       {
 688:../src/sdcard.c ****         /* Configure the SDIO peripheral */
 689:../src/sdcard.c ****         SDIO_InitStructure.SDIO_ClockDiv = SDIO_TRANSFER_CLK_DIV; 
 690:../src/sdcard.c ****         SDIO_InitStructure.SDIO_ClockEdge = SDIO_ClockEdge_Rising;
 691:../src/sdcard.c ****         SDIO_InitStructure.SDIO_ClockBypass = SDIO_ClockBypass_Disable;
 692:../src/sdcard.c ****         SDIO_InitStructure.SDIO_ClockPowerSave = SDIO_ClockPowerSave_Disable;
 693:../src/sdcard.c ****         SDIO_InitStructure.SDIO_BusWide = SDIO_BusWide_1b;
 694:../src/sdcard.c ****         SDIO_InitStructure.SDIO_HardwareFlowControl = SDIO_HardwareFlowControl_Disable;
 695:../src/sdcard.c ****         SDIO_Init(&SDIO_InitStructure);
 696:../src/sdcard.c ****       }
 697:../src/sdcard.c ****     }
 698:../src/sdcard.c ****   }
 699:../src/sdcard.c **** 
 700:../src/sdcard.c ****   return(errorstatus);
 701:../src/sdcard.c **** }
 702:../src/sdcard.c **** 
 703:../src/sdcard.c **** /*******************************************************************************
 704:../src/sdcard.c **** * Function Name  : SD_SetDeviceMode
 705:../src/sdcard.c **** * Description    : Sets device mode whether to operate in Polling, Interrupt or
 706:../src/sdcard.c **** *                  DMA mode.
 707:../src/sdcard.c **** * Input          : Mode: Specifies the Data Transfer mode.
 708:../src/sdcard.c **** *                     This parameter can be one of the following values:
 709:../src/sdcard.c **** *                       - SD_DMA_MODE: Data transfer using DMA.
 710:../src/sdcard.c **** *                       - SD_INTERRUPT_MODE: Data transfer using interrupts.
 711:../src/sdcard.c **** *                       - SD_POLLING_MODE: Data transfer using flags.
 712:../src/sdcard.c **** * Output         : None
 713:../src/sdcard.c **** * Return         : SD_Error: SD Card Error code.
 714:../src/sdcard.c **** *******************************************************************************/
 715:../src/sdcard.c **** SD_Error SD_SetDeviceMode(uint32_t Mode)
 716:../src/sdcard.c **** {
 717:../src/sdcard.c ****   SD_Error errorstatus = SD_OK;
 718:../src/sdcard.c **** 
 719:../src/sdcard.c ****   if ((Mode == SD_DMA_MODE) || (Mode == SD_INTERRUPT_MODE) || (Mode == SD_POLLING_MODE))
 720:../src/sdcard.c ****   {
 721:../src/sdcard.c ****     DeviceMode = Mode;
 722:../src/sdcard.c ****   }
 723:../src/sdcard.c ****   else
 724:../src/sdcard.c ****   {
 725:../src/sdcard.c ****     errorstatus = SD_INVALID_PARAMETER;
 726:../src/sdcard.c ****   }
 727:../src/sdcard.c ****   return(errorstatus);
 728:../src/sdcard.c **** 
 729:../src/sdcard.c **** }
 730:../src/sdcard.c **** 
 731:../src/sdcard.c **** /*******************************************************************************
 732:../src/sdcard.c **** * Function Name  : SD_SelectDeselect
 733:../src/sdcard.c **** * Description    : Selects od Deselects the corresponding card.
 734:../src/sdcard.c **** * Input          : addr: Address of the Card to be selected.
 735:../src/sdcard.c **** * Output         : None
 736:../src/sdcard.c **** * Return         : SD_Error: SD Card Error code.
 737:../src/sdcard.c **** *******************************************************************************/
 738:../src/sdcard.c **** SD_Error SD_SelectDeselect(uint32_t addr)
 739:../src/sdcard.c **** {
 740:../src/sdcard.c ****   SD_Error errorstatus = SD_OK;
 741:../src/sdcard.c **** 
 742:../src/sdcard.c ****   /* Send CMD7 SDIO_SEL_DESEL_CARD */
 743:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument =  addr;
 744:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SEL_DESEL_CARD;
 745:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 746:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 747:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 748:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 749:../src/sdcard.c **** 
 750:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_SEL_DESEL_CARD);
 751:../src/sdcard.c **** 
 752:../src/sdcard.c ****   return(errorstatus);
 753:../src/sdcard.c **** }
 754:../src/sdcard.c **** 
 755:../src/sdcard.c **** /*******************************************************************************
 756:../src/sdcard.c **** * Function Name  : SD_ReadBlock
 757:../src/sdcard.c **** * Description    : Allows to read one block from a specified address in a card.
 758:../src/sdcard.c **** * Input          : - addr: Address from where data are to be read.
 759:../src/sdcard.c **** *                  - readbuff: pointer to the buffer that will contain the 
 760:../src/sdcard.c **** *                    received data
 761:../src/sdcard.c **** *                  - blocksize: the SD card Data block size.
 762:../src/sdcard.c **** * Output         : None
 763:../src/sdcard.c **** * Return         : SD_Error: SD Card Error code.
 764:../src/sdcard.c **** *******************************************************************************/
 765:../src/sdcard.c **** SD_Error SD_ReadBlock(uint32_t addr, uint32_t *readbuff, uint16_t BlockSize)
 766:../src/sdcard.c **** {
 767:../src/sdcard.c ****   SD_Error errorstatus = SD_OK;
 768:../src/sdcard.c ****   uint32_t count = 0, *tempbuff = readbuff;
 769:../src/sdcard.c ****   uint8_t power = 0;
 770:../src/sdcard.c **** 
 771:../src/sdcard.c ****   if (NULL == readbuff)
 772:../src/sdcard.c ****   {
 773:../src/sdcard.c ****     errorstatus = SD_INVALID_PARAMETER;
 774:../src/sdcard.c ****     return(errorstatus);
 775:../src/sdcard.c ****   }
 776:../src/sdcard.c **** 
 777:../src/sdcard.c ****   TransferError = SD_OK;
 778:../src/sdcard.c ****   TransferEnd = 0;
 779:../src/sdcard.c ****   TotalNumberOfBytes = 0;
 780:../src/sdcard.c **** 
 781:../src/sdcard.c ****   /* Clear all DPSM configuration */
 782:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
 783:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataLength = 0;
 784:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataBlockSize = SDIO_DataBlockSize_1b;
 785:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferDir = SDIO_TransferDir_ToCard;
 786:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferMode = SDIO_TransferMode_Block;
 787:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DPSM = SDIO_DPSM_Disable;
 788:../src/sdcard.c ****   SDIO_DataConfig(&SDIO_DataInitStructure);
 789:../src/sdcard.c ****   SDIO_DMACmd(DISABLE);
 790:../src/sdcard.c **** 
 791:../src/sdcard.c ****   if (SDIO_GetResponse(SDIO_RESP1) & SD_CARD_LOCKED)
 792:../src/sdcard.c ****   {
 793:../src/sdcard.c ****     errorstatus = SD_LOCK_UNLOCK_FAILED;
 794:../src/sdcard.c ****     return(errorstatus);
 795:../src/sdcard.c ****   }
 796:../src/sdcard.c ****   
 797:../src/sdcard.c ****   if (CardType == SDIO_HIGH_CAPACITY_SD_CARD)
 798:../src/sdcard.c ****   {
 799:../src/sdcard.c ****     BlockSize = 512;
 800:../src/sdcard.c ****     addr /= 512;
 801:../src/sdcard.c ****   }
 802:../src/sdcard.c ****   if ((BlockSize > 0) && (BlockSize <= 2048) && ((BlockSize & (BlockSize - 1)) == 0))
 803:../src/sdcard.c ****   {
 804:../src/sdcard.c ****     power = convert_from_bytes_to_power_of_two(BlockSize);
 805:../src/sdcard.c **** 
 806:../src/sdcard.c ****     /* Set Block Size for Card */
 807:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) BlockSize;
 808:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SET_BLOCKLEN;
 809:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 810:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 811:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 812:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
 813:../src/sdcard.c **** 
 814:../src/sdcard.c ****     errorstatus = CmdResp1Error(SDIO_SET_BLOCKLEN);
 815:../src/sdcard.c **** 
 816:../src/sdcard.c ****     if (SD_OK != errorstatus)
 817:../src/sdcard.c ****     {
 818:../src/sdcard.c ****       return(errorstatus);
 819:../src/sdcard.c ****     }
 820:../src/sdcard.c ****   }
 821:../src/sdcard.c ****   else
 822:../src/sdcard.c ****   {
 823:../src/sdcard.c ****     errorstatus = SD_INVALID_PARAMETER;
 824:../src/sdcard.c ****     return(errorstatus);
 825:../src/sdcard.c ****   }
 826:../src/sdcard.c **** 
 827:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
 828:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataLength = BlockSize;
 829:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataBlockSize = (uint32_t) power << 4;
 830:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferDir = SDIO_TransferDir_ToSDIO;
 831:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferMode = SDIO_TransferMode_Block;
 832:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DPSM = SDIO_DPSM_Enable;
 833:../src/sdcard.c ****   SDIO_DataConfig(&SDIO_DataInitStructure);
 834:../src/sdcard.c **** 
 835:../src/sdcard.c ****   TotalNumberOfBytes = BlockSize;
 836:../src/sdcard.c ****   StopCondition = 0;
 837:../src/sdcard.c ****   DestBuffer = readbuff;
 838:../src/sdcard.c **** 
 839:../src/sdcard.c ****   /* Send CMD17 READ_SINGLE_BLOCK */
 840:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = (uint32_t)addr;
 841:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_READ_SINGLE_BLOCK;
 842:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 843:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 844:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 845:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 846:../src/sdcard.c **** 
 847:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_READ_SINGLE_BLOCK);
 848:../src/sdcard.c **** 
 849:../src/sdcard.c ****   if (errorstatus != SD_OK)
 850:../src/sdcard.c ****   {
 851:../src/sdcard.c ****     return(errorstatus);
 852:../src/sdcard.c ****   }
 853:../src/sdcard.c ****   /* In case of single block transfer, no need of stop transfer at all.*/
 854:../src/sdcard.c ****   if (DeviceMode == SD_POLLING_MODE)
 855:../src/sdcard.c ****   {
 856:../src/sdcard.c ****     /* Polling mode */
 857:../src/sdcard.c ****     while (!(SDIO->STA &(SDIO_FLAG_RXOVERR | SDIO_FLAG_DCRCFAIL | SDIO_FLAG_DTIMEOUT | SDIO_FLAG_DB
 858:../src/sdcard.c ****     {
 859:../src/sdcard.c ****       if (SDIO_GetFlagStatus(SDIO_FLAG_RXFIFOHF) != RESET)
 860:../src/sdcard.c ****       {
 861:../src/sdcard.c ****         for (count = 0; count < 8; count++)
 862:../src/sdcard.c ****         {
 863:../src/sdcard.c ****           *(tempbuff + count) = SDIO_ReadData();
 864:../src/sdcard.c ****         }
 865:../src/sdcard.c ****         tempbuff += 8;
 866:../src/sdcard.c ****       }
 867:../src/sdcard.c ****     }
 868:../src/sdcard.c **** 
 869:../src/sdcard.c ****     if (SDIO_GetFlagStatus(SDIO_FLAG_DTIMEOUT) != RESET)
 870:../src/sdcard.c ****     {
 871:../src/sdcard.c ****       SDIO_ClearFlag(SDIO_FLAG_DTIMEOUT);
 872:../src/sdcard.c ****       errorstatus = SD_DATA_TIMEOUT;
 873:../src/sdcard.c ****       return(errorstatus);
 874:../src/sdcard.c ****     }
 875:../src/sdcard.c ****     else if (SDIO_GetFlagStatus(SDIO_FLAG_DCRCFAIL) != RESET)
 876:../src/sdcard.c ****     {
 877:../src/sdcard.c ****       SDIO_ClearFlag(SDIO_FLAG_DCRCFAIL);
 878:../src/sdcard.c ****       errorstatus = SD_DATA_CRC_FAIL;
 879:../src/sdcard.c ****       return(errorstatus);
 880:../src/sdcard.c ****     }
 881:../src/sdcard.c ****     else if (SDIO_GetFlagStatus(SDIO_FLAG_RXOVERR) != RESET)
 882:../src/sdcard.c ****     {
 883:../src/sdcard.c ****       SDIO_ClearFlag(SDIO_FLAG_RXOVERR);
 884:../src/sdcard.c ****       errorstatus = SD_RX_OVERRUN;
 885:../src/sdcard.c ****       return(errorstatus);
 886:../src/sdcard.c ****     }
 887:../src/sdcard.c ****     else if (SDIO_GetFlagStatus(SDIO_FLAG_STBITERR) != RESET)
 888:../src/sdcard.c ****     {
 889:../src/sdcard.c ****       SDIO_ClearFlag(SDIO_FLAG_STBITERR);
 890:../src/sdcard.c ****       errorstatus = SD_START_BIT_ERR;
 891:../src/sdcard.c ****       return(errorstatus);
 892:../src/sdcard.c ****     }
 893:../src/sdcard.c ****     while (SDIO_GetFlagStatus(SDIO_FLAG_RXDAVL) != RESET)
 894:../src/sdcard.c ****     {
 895:../src/sdcard.c ****       *tempbuff = SDIO_ReadData();
 896:../src/sdcard.c ****       tempbuff++;
 897:../src/sdcard.c ****     }
 898:../src/sdcard.c **** 
 899:../src/sdcard.c ****     /* Clear all the static flags */
 900:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_STATIC_FLAGS);
 901:../src/sdcard.c ****   }
 902:../src/sdcard.c ****   else if (DeviceMode == SD_INTERRUPT_MODE)
 903:../src/sdcard.c ****   {
 904:../src/sdcard.c ****     SDIO_ITConfig(SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_DATAEND | SDIO_IT_RXOVERR | SDIO_IT
 905:../src/sdcard.c ****     while ((TransferEnd == 0) && (TransferError == SD_OK))
 906:../src/sdcard.c ****     {}
 907:../src/sdcard.c ****     if (TransferError != SD_OK)
 908:../src/sdcard.c ****     {
 909:../src/sdcard.c ****       return(TransferError);
 910:../src/sdcard.c ****     }
 911:../src/sdcard.c ****   }
 912:../src/sdcard.c ****   else if (DeviceMode == SD_DMA_MODE)
 913:../src/sdcard.c ****   {
 914:../src/sdcard.c ****     SDIO_ITConfig(SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_DATAEND | SDIO_IT_RXOVERR | SDIO_IT
 915:../src/sdcard.c ****     SDIO_DMACmd(ENABLE);
 916:../src/sdcard.c ****     //SDIO->DCTRL |= 0b1000;
 917:../src/sdcard.c ****     DMA_RxConfiguration(readbuff, BlockSize);
 918:../src/sdcard.c ****     while (DMA_GetFlagStatus(DMA2_FLAG_TC4) == RESET)
 919:../src/sdcard.c ****     {}
 920:../src/sdcard.c ****   }
 921:../src/sdcard.c ****   return(errorstatus);
 922:../src/sdcard.c **** }
 923:../src/sdcard.c **** 
 924:../src/sdcard.c **** /*******************************************************************************
 925:../src/sdcard.c **** * Function Name  : SD_ReadMultiBlocks
 926:../src/sdcard.c **** * Description    : Allows to read blocks from a specified address  in a card.
 927:../src/sdcard.c **** * Input          : - addr: Address from where data are to be read.
 928:../src/sdcard.c **** *                  - readbuff: pointer to the buffer that will contain the 
 929:../src/sdcard.c **** *                    received data.
 930:../src/sdcard.c **** *                  - BlockSize: the SD card Data block size.
 931:../src/sdcard.c **** *                  - NumberOfBlocks: number of blocks to be read.
 932:../src/sdcard.c **** * Output         : None
 933:../src/sdcard.c **** * Return         : SD_Error: SD Card Error code.
 934:../src/sdcard.c **** *******************************************************************************/
 935:../src/sdcard.c **** SD_Error SD_ReadMultiBlocks(uint32_t addr, uint32_t *readbuff, uint16_t BlockSize, uint32_t NumberO
 936:../src/sdcard.c **** {
 937:../src/sdcard.c ****   SD_Error errorstatus = SD_OK;
 938:../src/sdcard.c ****   uint32_t count = 0, *tempbuff = readbuff;
 939:../src/sdcard.c ****   uint8_t power = 0;
 940:../src/sdcard.c **** 
 941:../src/sdcard.c ****   if (NULL == readbuff)
 942:../src/sdcard.c ****   {
 943:../src/sdcard.c ****     errorstatus = SD_INVALID_PARAMETER;
 944:../src/sdcard.c ****     return(errorstatus);
 945:../src/sdcard.c ****   }
 946:../src/sdcard.c **** 
 947:../src/sdcard.c ****   TransferError = SD_OK;
 948:../src/sdcard.c ****   TransferEnd = 0;
 949:../src/sdcard.c ****   TotalNumberOfBytes = 0;
 950:../src/sdcard.c **** 
 951:../src/sdcard.c ****   /* Clear all DPSM configuration */
 952:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
 953:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataLength = 0;
 954:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataBlockSize = SDIO_DataBlockSize_1b;
 955:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferDir = SDIO_TransferDir_ToCard;
 956:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferMode = SDIO_TransferMode_Block;
 957:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DPSM = SDIO_DPSM_Disable;
 958:../src/sdcard.c ****   SDIO_DataConfig(&SDIO_DataInitStructure);
 959:../src/sdcard.c ****   SDIO_DMACmd(DISABLE);
 960:../src/sdcard.c **** 
 961:../src/sdcard.c ****   if (SDIO_GetResponse(SDIO_RESP1) & SD_CARD_LOCKED)
 962:../src/sdcard.c ****   {
 963:../src/sdcard.c ****     errorstatus = SD_LOCK_UNLOCK_FAILED;
 964:../src/sdcard.c ****     return(errorstatus);
 965:../src/sdcard.c ****   }
 966:../src/sdcard.c **** 
 967:../src/sdcard.c ****   if (CardType == SDIO_HIGH_CAPACITY_SD_CARD)
 968:../src/sdcard.c ****   {
 969:../src/sdcard.c ****     BlockSize = 512;
 970:../src/sdcard.c ****     addr /= 512;
 971:../src/sdcard.c ****   }
 972:../src/sdcard.c ****   
 973:../src/sdcard.c ****   if ((BlockSize > 0) && (BlockSize <= 2048) && (0 == (BlockSize & (BlockSize - 1))))
 974:../src/sdcard.c ****   {
 975:../src/sdcard.c ****     power = convert_from_bytes_to_power_of_two(BlockSize);
 976:../src/sdcard.c **** 
 977:../src/sdcard.c ****     /* Set Block Size for Card */
 978:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) BlockSize;
 979:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SET_BLOCKLEN;
 980:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 981:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 982:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 983:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
 984:../src/sdcard.c **** 
 985:../src/sdcard.c ****     errorstatus = CmdResp1Error(SDIO_SET_BLOCKLEN);
 986:../src/sdcard.c **** 
 987:../src/sdcard.c ****     if (SD_OK != errorstatus)
 988:../src/sdcard.c ****     {
 989:../src/sdcard.c ****       return(errorstatus);
 990:../src/sdcard.c ****     }
 991:../src/sdcard.c ****   }
 992:../src/sdcard.c ****   else
 993:../src/sdcard.c ****   {
 994:../src/sdcard.c ****     errorstatus = SD_INVALID_PARAMETER;
 995:../src/sdcard.c ****     return(errorstatus);
 996:../src/sdcard.c ****   }
 997:../src/sdcard.c **** 
 998:../src/sdcard.c ****   if (NumberOfBlocks > 1)
 999:../src/sdcard.c ****   {
1000:../src/sdcard.c ****     /* Common to all modes */
1001:../src/sdcard.c ****     if (NumberOfBlocks * BlockSize > SD_MAX_DATA_LENGTH)
1002:../src/sdcard.c ****     {
1003:../src/sdcard.c ****       errorstatus = SD_INVALID_PARAMETER;
1004:../src/sdcard.c ****       return(errorstatus);
1005:../src/sdcard.c ****     }
1006:../src/sdcard.c **** 
1007:../src/sdcard.c ****     TotalNumberOfBytes = NumberOfBlocks * BlockSize;
1008:../src/sdcard.c ****     StopCondition = 1;
1009:../src/sdcard.c ****     DestBuffer = readbuff;
1010:../src/sdcard.c **** 
1011:../src/sdcard.c ****     SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
1012:../src/sdcard.c ****     SDIO_DataInitStructure.SDIO_DataLength = NumberOfBlocks * BlockSize;
1013:../src/sdcard.c ****     SDIO_DataInitStructure.SDIO_DataBlockSize = (uint32_t) power << 4;
1014:../src/sdcard.c ****     SDIO_DataInitStructure.SDIO_TransferDir = SDIO_TransferDir_ToSDIO;
1015:../src/sdcard.c ****     SDIO_DataInitStructure.SDIO_TransferMode = SDIO_TransferMode_Block;
1016:../src/sdcard.c ****     SDIO_DataInitStructure.SDIO_DPSM = SDIO_DPSM_Enable;
1017:../src/sdcard.c ****     SDIO_DataConfig(&SDIO_DataInitStructure);
1018:../src/sdcard.c **** 
1019:../src/sdcard.c ****     /* Send CMD18 READ_MULT_BLOCK with argument data address */
1020:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = (uint32_t)addr;
1021:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_READ_MULT_BLOCK;
1022:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
1023:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
1024:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
1025:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
1026:../src/sdcard.c **** 
1027:../src/sdcard.c ****     errorstatus = CmdResp1Error(SDIO_READ_MULT_BLOCK);
1028:../src/sdcard.c **** 
1029:../src/sdcard.c ****     if (errorstatus != SD_OK)
1030:../src/sdcard.c ****     {
1031:../src/sdcard.c ****       return(errorstatus);
1032:../src/sdcard.c ****     }
1033:../src/sdcard.c **** 
1034:../src/sdcard.c ****     if (DeviceMode == SD_POLLING_MODE)
1035:../src/sdcard.c ****     {
1036:../src/sdcard.c ****       /* Polling mode */
1037:../src/sdcard.c ****       while (!(SDIO->STA &(SDIO_FLAG_RXOVERR | SDIO_FLAG_DCRCFAIL | SDIO_FLAG_DATAEND | SDIO_FLAG_D
1038:../src/sdcard.c ****       {
1039:../src/sdcard.c ****         if (SDIO_GetFlagStatus(SDIO_FLAG_RXFIFOHF) != RESET)
1040:../src/sdcard.c ****         {
1041:../src/sdcard.c ****           for (count = 0; count < SD_HALFFIFO; count++)
1042:../src/sdcard.c ****           {
1043:../src/sdcard.c ****             *(tempbuff + count) = SDIO_ReadData();
1044:../src/sdcard.c ****           }
1045:../src/sdcard.c ****           tempbuff += SD_HALFFIFO;
1046:../src/sdcard.c ****         }
1047:../src/sdcard.c ****       }
1048:../src/sdcard.c **** 
1049:../src/sdcard.c ****       if (SDIO_GetFlagStatus(SDIO_FLAG_DTIMEOUT) != RESET)
1050:../src/sdcard.c ****       {
1051:../src/sdcard.c ****         SDIO_ClearFlag(SDIO_FLAG_DTIMEOUT);
1052:../src/sdcard.c ****         errorstatus = SD_DATA_TIMEOUT;
1053:../src/sdcard.c ****         return(errorstatus);
1054:../src/sdcard.c ****       }
1055:../src/sdcard.c ****       else if (SDIO_GetFlagStatus(SDIO_FLAG_DCRCFAIL) != RESET)
1056:../src/sdcard.c ****       {
1057:../src/sdcard.c ****         SDIO_ClearFlag(SDIO_FLAG_DCRCFAIL);
1058:../src/sdcard.c ****         errorstatus = SD_DATA_CRC_FAIL;
1059:../src/sdcard.c ****         return(errorstatus);
1060:../src/sdcard.c ****       }
1061:../src/sdcard.c ****       else if (SDIO_GetFlagStatus(SDIO_FLAG_RXOVERR) != RESET)
1062:../src/sdcard.c ****       {
1063:../src/sdcard.c ****         SDIO_ClearFlag(SDIO_FLAG_RXOVERR);
1064:../src/sdcard.c ****         errorstatus = SD_RX_OVERRUN;
1065:../src/sdcard.c ****         return(errorstatus);
1066:../src/sdcard.c ****       }
1067:../src/sdcard.c ****       else if (SDIO_GetFlagStatus(SDIO_FLAG_STBITERR) != RESET)
1068:../src/sdcard.c ****       {
1069:../src/sdcard.c ****         SDIO_ClearFlag(SDIO_FLAG_STBITERR);
1070:../src/sdcard.c ****         errorstatus = SD_START_BIT_ERR;
1071:../src/sdcard.c ****         return(errorstatus);
1072:../src/sdcard.c ****       }
1073:../src/sdcard.c ****       while (SDIO_GetFlagStatus(SDIO_FLAG_RXDAVL) != RESET)
1074:../src/sdcard.c ****       {
1075:../src/sdcard.c ****         *tempbuff = SDIO_ReadData();
1076:../src/sdcard.c ****         tempbuff++;
1077:../src/sdcard.c ****       }
1078:../src/sdcard.c **** 
1079:../src/sdcard.c ****       if (SDIO_GetFlagStatus(SDIO_FLAG_DATAEND) != RESET)
1080:../src/sdcard.c ****       {
1081:../src/sdcard.c ****         /* In Case Of SD-CARD Send Command STOP_TRANSMISSION */
1082:../src/sdcard.c ****         if ((SDIO_STD_CAPACITY_SD_CARD_V1_1 == CardType) || (SDIO_HIGH_CAPACITY_SD_CARD == CardType
1083:../src/sdcard.c ****         {
1084:../src/sdcard.c ****           /* Send CMD12 STOP_TRANSMISSION */
1085:../src/sdcard.c ****           SDIO_CmdInitStructure.SDIO_Argument = 0x0;
1086:../src/sdcard.c ****           SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_STOP_TRANSMISSION;
1087:../src/sdcard.c ****           SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
1088:../src/sdcard.c ****           SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
1089:../src/sdcard.c ****           SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
1090:../src/sdcard.c ****           SDIO_SendCommand(&SDIO_CmdInitStructure);
1091:../src/sdcard.c **** 
1092:../src/sdcard.c ****           errorstatus = CmdResp1Error(SDIO_STOP_TRANSMISSION);
1093:../src/sdcard.c **** 
1094:../src/sdcard.c ****           if (errorstatus != SD_OK)
1095:../src/sdcard.c ****           {
1096:../src/sdcard.c ****             return(errorstatus);
1097:../src/sdcard.c ****           }
1098:../src/sdcard.c ****         }
1099:../src/sdcard.c ****       }
1100:../src/sdcard.c ****       /* Clear all the static flags */
1101:../src/sdcard.c ****       SDIO_ClearFlag(SDIO_STATIC_FLAGS);
1102:../src/sdcard.c ****     }
1103:../src/sdcard.c ****     else if (DeviceMode == SD_INTERRUPT_MODE)
1104:../src/sdcard.c ****     {
1105:../src/sdcard.c ****       SDIO_ITConfig(SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_DATAEND | SDIO_IT_RXOVERR | SDIO_
1106:../src/sdcard.c ****       while ((TransferEnd == 0) && (TransferError == SD_OK))
1107:../src/sdcard.c ****       {}
1108:../src/sdcard.c ****       if (TransferError != SD_OK)
1109:../src/sdcard.c ****       {
1110:../src/sdcard.c ****         return(TransferError);
1111:../src/sdcard.c ****       }
1112:../src/sdcard.c ****     }
1113:../src/sdcard.c ****     else if (DeviceMode == SD_DMA_MODE)
1114:../src/sdcard.c ****     {
1115:../src/sdcard.c ****       SDIO_ITConfig(SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_DATAEND | SDIO_IT_RXOVERR | SDIO_
1116:../src/sdcard.c ****       SDIO_DMACmd(ENABLE);
1117:../src/sdcard.c ****       DMA_RxConfiguration(readbuff, (NumberOfBlocks * BlockSize));
1118:../src/sdcard.c ****       while (DMA_GetFlagStatus(DMA2_FLAG_TC4) == RESET)
1119:../src/sdcard.c ****       {}
1120:../src/sdcard.c ****       while ((TransferEnd == 0) && (TransferError == SD_OK))
1121:../src/sdcard.c ****       {}
1122:../src/sdcard.c ****       if (TransferError != SD_OK)
1123:../src/sdcard.c ****       {
1124:../src/sdcard.c ****         return(TransferError);
1125:../src/sdcard.c ****       }
1126:../src/sdcard.c ****     }
1127:../src/sdcard.c ****   }
1128:../src/sdcard.c ****   return(errorstatus);
1129:../src/sdcard.c **** }
1130:../src/sdcard.c **** 
1131:../src/sdcard.c **** /*******************************************************************************
1132:../src/sdcard.c **** * Function Name  : SD_WriteBlock
1133:../src/sdcard.c **** * Description    : Allows to write one block starting from a specified address 
1134:../src/sdcard.c **** *                  in a card.
1135:../src/sdcard.c **** * Input          : - addr: Address from where data are to be read.
1136:../src/sdcard.c **** *                  - writebuff: pointer to the buffer that contain the data to be
1137:../src/sdcard.c **** *                    transferred.
1138:../src/sdcard.c **** *                  - BlockSize: the SD card Data block size.
1139:../src/sdcard.c **** * Output         : None
1140:../src/sdcard.c **** * Return         : SD_Error: SD Card Error code.
1141:../src/sdcard.c **** *******************************************************************************/
1142:../src/sdcard.c **** SD_Error SD_WriteBlock(uint32_t addr, uint32_t *writebuff, uint16_t BlockSize)
1143:../src/sdcard.c **** {
1144:../src/sdcard.c ****   SD_Error errorstatus = SD_OK;
1145:../src/sdcard.c ****   uint8_t  power = 0, cardstate = 0;
1146:../src/sdcard.c ****   uint32_t timeout = 0, bytestransferred = 0;
1147:../src/sdcard.c ****   uint32_t cardstatus = 0, count = 0, restwords = 0;
1148:../src/sdcard.c ****   uint32_t *tempbuff = writebuff;
1149:../src/sdcard.c **** 
1150:../src/sdcard.c ****   if (writebuff == NULL)
1151:../src/sdcard.c ****   {
1152:../src/sdcard.c ****     errorstatus = SD_INVALID_PARAMETER;
1153:../src/sdcard.c ****     return(errorstatus);
1154:../src/sdcard.c ****   }
1155:../src/sdcard.c **** 
1156:../src/sdcard.c ****   TransferError = SD_OK;
1157:../src/sdcard.c ****   TransferEnd = 0;
1158:../src/sdcard.c ****   TotalNumberOfBytes = 0;
1159:../src/sdcard.c **** 
1160:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
1161:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataLength = 0;
1162:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataBlockSize = SDIO_DataBlockSize_1b;
1163:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferDir = SDIO_TransferDir_ToCard;
1164:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferMode = SDIO_TransferMode_Block;
1165:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DPSM = SDIO_DPSM_Disable;
1166:../src/sdcard.c ****   SDIO_DataConfig(&SDIO_DataInitStructure);
1167:../src/sdcard.c ****   SDIO_DMACmd(DISABLE);
1168:../src/sdcard.c **** 
1169:../src/sdcard.c ****   if (SDIO_GetResponse(SDIO_RESP1) & SD_CARD_LOCKED)
1170:../src/sdcard.c ****   {
1171:../src/sdcard.c ****     errorstatus = SD_LOCK_UNLOCK_FAILED;
1172:../src/sdcard.c ****     return(errorstatus);
1173:../src/sdcard.c ****   }
1174:../src/sdcard.c **** 
1175:../src/sdcard.c ****   if (CardType == SDIO_HIGH_CAPACITY_SD_CARD)
1176:../src/sdcard.c ****   {
1177:../src/sdcard.c ****     BlockSize = 512;
1178:../src/sdcard.c ****     addr /= 512;
1179:../src/sdcard.c ****   }
1180:../src/sdcard.c ****   
1181:../src/sdcard.c ****   /* Set the block size, both on controller and card */
1182:../src/sdcard.c ****   if ((BlockSize > 0) && (BlockSize <= 2048) && ((BlockSize & (BlockSize - 1)) == 0))
1183:../src/sdcard.c ****   {
1184:../src/sdcard.c ****     power = convert_from_bytes_to_power_of_two(BlockSize);
1185:../src/sdcard.c **** 
1186:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) BlockSize;
1187:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SET_BLOCKLEN;
1188:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
1189:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
1190:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
1191:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
1192:../src/sdcard.c **** 
1193:../src/sdcard.c ****     errorstatus = CmdResp1Error(SDIO_SET_BLOCKLEN);
1194:../src/sdcard.c **** 
1195:../src/sdcard.c ****     if (errorstatus != SD_OK)
1196:../src/sdcard.c ****     {
1197:../src/sdcard.c ****       return(errorstatus);
1198:../src/sdcard.c ****     }
1199:../src/sdcard.c ****   }
1200:../src/sdcard.c ****   else
1201:../src/sdcard.c ****   {
1202:../src/sdcard.c ****     errorstatus = SD_INVALID_PARAMETER;
1203:../src/sdcard.c ****     return(errorstatus);
1204:../src/sdcard.c ****   }
1205:../src/sdcard.c **** 
1206:../src/sdcard.c ****   /* Wait till card is ready for data Added */
1207:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) (RCA << 16);
1208:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SEND_STATUS;
1209:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
1210:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
1211:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
1212:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
1213:../src/sdcard.c **** 
1214:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_SEND_STATUS);
1215:../src/sdcard.c **** 
1216:../src/sdcard.c ****   if (errorstatus != SD_OK)
1217:../src/sdcard.c ****   {
1218:../src/sdcard.c ****     return(errorstatus);
1219:../src/sdcard.c ****   }
1220:../src/sdcard.c **** 
1221:../src/sdcard.c ****   cardstatus = SDIO_GetResponse(SDIO_RESP1);
1222:../src/sdcard.c **** 
1223:../src/sdcard.c ****   timeout = SD_DATATIMEOUT;
1224:../src/sdcard.c **** 
1225:../src/sdcard.c ****   while (((cardstatus & 0x00000100) == 0) && (timeout > 0))
1226:../src/sdcard.c ****   {
1227:../src/sdcard.c ****     timeout--;
1228:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) (RCA << 16);
1229:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SEND_STATUS;
1230:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
1231:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
1232:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
1233:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
1234:../src/sdcard.c **** 
1235:../src/sdcard.c ****     errorstatus = CmdResp1Error(SDIO_SEND_STATUS);
1236:../src/sdcard.c **** 
1237:../src/sdcard.c ****     if (errorstatus != SD_OK)
1238:../src/sdcard.c ****     {
1239:../src/sdcard.c ****       return(errorstatus);
1240:../src/sdcard.c ****     }
1241:../src/sdcard.c ****     cardstatus = SDIO_GetResponse(SDIO_RESP1);
1242:../src/sdcard.c ****   }
1243:../src/sdcard.c **** 
1244:../src/sdcard.c ****   if (timeout == 0)
1245:../src/sdcard.c ****   {
1246:../src/sdcard.c ****     return(SD_ERROR);
1247:../src/sdcard.c ****   }
1248:../src/sdcard.c **** 
1249:../src/sdcard.c ****   /* Send CMD24 WRITE_SINGLE_BLOCK */
1250:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = addr;
1251:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_WRITE_SINGLE_BLOCK;
1252:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
1253:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
1254:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
1255:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
1256:../src/sdcard.c **** 
1257:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_WRITE_SINGLE_BLOCK);
1258:../src/sdcard.c **** 
1259:../src/sdcard.c ****   if (errorstatus != SD_OK)
1260:../src/sdcard.c ****   {
1261:../src/sdcard.c ****     return(errorstatus);
1262:../src/sdcard.c ****   }
1263:../src/sdcard.c **** 
1264:../src/sdcard.c ****   TotalNumberOfBytes = BlockSize;
1265:../src/sdcard.c ****   StopCondition = 0;
1266:../src/sdcard.c ****   SrcBuffer = writebuff;
1267:../src/sdcard.c **** 
1268:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
1269:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataLength = BlockSize;
1270:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataBlockSize = (uint32_t) power << 4;
1271:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferDir = SDIO_TransferDir_ToCard;
1272:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferMode = SDIO_TransferMode_Block;
1273:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DPSM = SDIO_DPSM_Enable;
1274:../src/sdcard.c ****   SDIO_DataConfig(&SDIO_DataInitStructure);
1275:../src/sdcard.c **** 
1276:../src/sdcard.c ****   /* In case of single data block transfer no need of stop command at all */
1277:../src/sdcard.c ****   if (DeviceMode == SD_POLLING_MODE)
1278:../src/sdcard.c ****   {
1279:../src/sdcard.c ****     while (!(SDIO->STA & (SDIO_FLAG_DBCKEND | SDIO_FLAG_TXUNDERR | SDIO_FLAG_DCRCFAIL | SDIO_FLAG_D
1280:../src/sdcard.c ****     {
1281:../src/sdcard.c ****       if (SDIO_GetFlagStatus(SDIO_FLAG_TXFIFOHE) != RESET)
1282:../src/sdcard.c ****       {
1283:../src/sdcard.c ****         if ((TotalNumberOfBytes - bytestransferred) < 32)
1284:../src/sdcard.c ****         {
1285:../src/sdcard.c ****           restwords = ((TotalNumberOfBytes - bytestransferred) % 4 == 0) ? ((TotalNumberOfBytes - b
1286:../src/sdcard.c **** 
1287:../src/sdcard.c ****           for (count = 0; count < restwords; count++, tempbuff++, bytestransferred += 4)
1288:../src/sdcard.c ****           {
1289:../src/sdcard.c ****             SDIO_WriteData(*tempbuff);
1290:../src/sdcard.c ****           }
1291:../src/sdcard.c ****         }
1292:../src/sdcard.c ****         else
1293:../src/sdcard.c ****         {
1294:../src/sdcard.c ****           for (count = 0; count < 8; count++)
1295:../src/sdcard.c ****           {
1296:../src/sdcard.c ****             SDIO_WriteData(*(tempbuff + count));
1297:../src/sdcard.c ****           }
1298:../src/sdcard.c ****           tempbuff += 8;
1299:../src/sdcard.c ****           bytestransferred += 32;
1300:../src/sdcard.c ****         }
1301:../src/sdcard.c ****       }
1302:../src/sdcard.c ****     }
1303:../src/sdcard.c ****     if (SDIO_GetFlagStatus(SDIO_FLAG_DTIMEOUT) != RESET)
1304:../src/sdcard.c ****     {
1305:../src/sdcard.c ****       SDIO_ClearFlag(SDIO_FLAG_DTIMEOUT);
1306:../src/sdcard.c ****       errorstatus = SD_DATA_TIMEOUT;
1307:../src/sdcard.c ****       return(errorstatus);
1308:../src/sdcard.c ****     }
1309:../src/sdcard.c ****     else if (SDIO_GetFlagStatus(SDIO_FLAG_DCRCFAIL) != RESET)
1310:../src/sdcard.c ****     {
1311:../src/sdcard.c ****       SDIO_ClearFlag(SDIO_FLAG_DCRCFAIL);
1312:../src/sdcard.c ****       errorstatus = SD_DATA_CRC_FAIL;
1313:../src/sdcard.c ****       return(errorstatus);
1314:../src/sdcard.c ****     }
1315:../src/sdcard.c ****     else if (SDIO_GetFlagStatus(SDIO_FLAG_TXUNDERR) != RESET)
1316:../src/sdcard.c ****     {
1317:../src/sdcard.c ****       SDIO_ClearFlag(SDIO_FLAG_TXUNDERR);
1318:../src/sdcard.c ****       errorstatus = SD_TX_UNDERRUN;
1319:../src/sdcard.c ****       return(errorstatus);
1320:../src/sdcard.c ****     }
1321:../src/sdcard.c ****     else if (SDIO_GetFlagStatus(SDIO_FLAG_STBITERR) != RESET)
1322:../src/sdcard.c ****     {
1323:../src/sdcard.c ****       SDIO_ClearFlag(SDIO_FLAG_STBITERR);
1324:../src/sdcard.c ****       errorstatus = SD_START_BIT_ERR;
1325:../src/sdcard.c ****       return(errorstatus);
1326:../src/sdcard.c ****     }
1327:../src/sdcard.c ****   }
1328:../src/sdcard.c ****   else if (DeviceMode == SD_INTERRUPT_MODE)
1329:../src/sdcard.c ****   {
1330:../src/sdcard.c ****     SDIO_ITConfig(SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_DATAEND | SDIO_FLAG_TXFIFOHE | SDIO
1331:../src/sdcard.c ****     while ((TransferEnd == 0) && (TransferError == SD_OK))
1332:../src/sdcard.c ****     {}
1333:../src/sdcard.c ****     if (TransferError != SD_OK)
1334:../src/sdcard.c ****     {
1335:../src/sdcard.c ****       return(TransferError);
1336:../src/sdcard.c ****     }
1337:../src/sdcard.c ****   }
1338:../src/sdcard.c ****   else if (DeviceMode == SD_DMA_MODE)
1339:../src/sdcard.c ****   {
1340:../src/sdcard.c ****     SDIO_ITConfig(SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_DATAEND | SDIO_IT_TXUNDERR | SDIO_I
1341:../src/sdcard.c ****     DMA_TxConfiguration(writebuff, BlockSize);
1342:../src/sdcard.c ****     SDIO_DMACmd(ENABLE);
1343:../src/sdcard.c ****     while (DMA_GetFlagStatus(DMA2_FLAG_TC4) == RESET)
1344:../src/sdcard.c ****     {}
1345:../src/sdcard.c ****     while ((TransferEnd == 0) && (TransferError == SD_OK))
1346:../src/sdcard.c ****     {}
1347:../src/sdcard.c ****     if (TransferError != SD_OK)
1348:../src/sdcard.c ****     {
1349:../src/sdcard.c ****       return(TransferError);
1350:../src/sdcard.c ****     }
1351:../src/sdcard.c ****   }
1352:../src/sdcard.c **** 
1353:../src/sdcard.c ****   /* Clear all the static flags */
1354:../src/sdcard.c ****   SDIO_ClearFlag(SDIO_STATIC_FLAGS);
1355:../src/sdcard.c **** 
1356:../src/sdcard.c ****   /* Wait till the card is in programming state */
1357:../src/sdcard.c ****   errorstatus = IsCardProgramming(&cardstate);
1358:../src/sdcard.c **** 
1359:../src/sdcard.c ****   while ((errorstatus == SD_OK) && ((cardstate == SD_CARD_PROGRAMMING) || (cardstate == SD_CARD_REC
1360:../src/sdcard.c ****   {
1361:../src/sdcard.c ****     errorstatus = IsCardProgramming(&cardstate);
1362:../src/sdcard.c ****   }
1363:../src/sdcard.c **** 
1364:../src/sdcard.c ****   return(errorstatus);
1365:../src/sdcard.c **** }
1366:../src/sdcard.c **** 
1367:../src/sdcard.c **** /*******************************************************************************
1368:../src/sdcard.c **** * Function Name  : SD_WriteMultiBlocks
1369:../src/sdcard.c **** * Description    : Allows to write blocks starting from a specified address in 
1370:../src/sdcard.c **** *                  a card.
1371:../src/sdcard.c **** * Input          : - addr: Address from where data are to be read.
1372:../src/sdcard.c **** *                  - writebuff: pointer to the buffer that contain the data to be
1373:../src/sdcard.c **** *                    transferred.
1374:../src/sdcard.c **** *                  - BlockSize: the SD card Data block size.
1375:../src/sdcard.c **** *                  - NumberOfBlocks: number of blocks to be written.
1376:../src/sdcard.c **** * Output         : None
1377:../src/sdcard.c **** * Return         : SD_Error: SD Card Error code.
1378:../src/sdcard.c **** *******************************************************************************/
1379:../src/sdcard.c **** SD_Error SD_WriteMultiBlocks(uint32_t addr, uint32_t *writebuff, uint16_t BlockSize, uint32_t Numbe
1380:../src/sdcard.c **** {
1381:../src/sdcard.c ****   SD_Error errorstatus = SD_OK;
1382:../src/sdcard.c ****   uint8_t  power = 0, cardstate = 0;
1383:../src/sdcard.c ****   uint32_t bytestransferred = 0;
1384:../src/sdcard.c ****   uint32_t count = 0, restwords = 0;
1385:../src/sdcard.c ****   uint32_t *tempbuff = writebuff;
1386:../src/sdcard.c **** 
1387:../src/sdcard.c ****   if (writebuff == NULL)
1388:../src/sdcard.c ****   {
1389:../src/sdcard.c ****     errorstatus = SD_INVALID_PARAMETER;
1390:../src/sdcard.c ****     return(errorstatus);
1391:../src/sdcard.c ****   }
1392:../src/sdcard.c **** 
1393:../src/sdcard.c ****   TransferError = SD_OK;
1394:../src/sdcard.c ****   TransferEnd = 0;
1395:../src/sdcard.c ****   TotalNumberOfBytes = 0;
1396:../src/sdcard.c **** 
1397:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
1398:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataLength = 0;
1399:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataBlockSize = SDIO_DataBlockSize_1b;
1400:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferDir = SDIO_TransferDir_ToCard;
1401:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferMode = SDIO_TransferMode_Block;
1402:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DPSM = SDIO_DPSM_Disable;
1403:../src/sdcard.c ****   SDIO_DataConfig(&SDIO_DataInitStructure);
1404:../src/sdcard.c ****   SDIO_DMACmd(DISABLE);
1405:../src/sdcard.c **** 
1406:../src/sdcard.c ****   if (SDIO_GetResponse(SDIO_RESP1) & SD_CARD_LOCKED)
1407:../src/sdcard.c ****   {
1408:../src/sdcard.c ****     errorstatus = SD_LOCK_UNLOCK_FAILED;
1409:../src/sdcard.c ****     return(errorstatus);
1410:../src/sdcard.c ****   }
1411:../src/sdcard.c **** 
1412:../src/sdcard.c ****   if (CardType == SDIO_HIGH_CAPACITY_SD_CARD)
1413:../src/sdcard.c ****   {
1414:../src/sdcard.c ****     BlockSize = 512;
1415:../src/sdcard.c ****     addr /= 512;
1416:../src/sdcard.c ****   }
1417:../src/sdcard.c ****   
1418:../src/sdcard.c ****   /* Set the block size, both on controller and card */
1419:../src/sdcard.c ****   if ((BlockSize > 0) && (BlockSize <= 2048) && ((BlockSize & (BlockSize - 1)) == 0))
1420:../src/sdcard.c ****   {
1421:../src/sdcard.c ****     power = convert_from_bytes_to_power_of_two(BlockSize);
1422:../src/sdcard.c **** 
1423:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) BlockSize;
1424:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SET_BLOCKLEN;
1425:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
1426:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
1427:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
1428:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
1429:../src/sdcard.c **** 
1430:../src/sdcard.c ****     errorstatus = CmdResp1Error(SDIO_SET_BLOCKLEN);
1431:../src/sdcard.c **** 
1432:../src/sdcard.c ****     if (errorstatus != SD_OK)
1433:../src/sdcard.c ****     {
1434:../src/sdcard.c ****       return(errorstatus);
1435:../src/sdcard.c ****     }
1436:../src/sdcard.c ****   }
1437:../src/sdcard.c ****   else
1438:../src/sdcard.c ****   {
1439:../src/sdcard.c ****     errorstatus = SD_INVALID_PARAMETER;
1440:../src/sdcard.c ****     return(errorstatus);
1441:../src/sdcard.c ****   }
1442:../src/sdcard.c **** 
1443:../src/sdcard.c ****   /* Wait till card is ready for data Added */
1444:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) (RCA << 16);
1445:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SEND_STATUS;
1446:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
1447:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
1448:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
1449:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
1450:../src/sdcard.c **** 
1451:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_SEND_STATUS);
1452:../src/sdcard.c **** 
1453:../src/sdcard.c ****   if (errorstatus != SD_OK)
1454:../src/sdcard.c ****   {
1455:../src/sdcard.c ****     return(errorstatus);
1456:../src/sdcard.c ****   }
1457:../src/sdcard.c **** 
1458:../src/sdcard.c ****   if (NumberOfBlocks > 1)
1459:../src/sdcard.c ****   {
1460:../src/sdcard.c ****     /* Common to all modes */
1461:../src/sdcard.c ****     if (NumberOfBlocks * BlockSize > SD_MAX_DATA_LENGTH)
1462:../src/sdcard.c ****     {
1463:../src/sdcard.c ****       errorstatus = SD_INVALID_PARAMETER;
1464:../src/sdcard.c ****       return(errorstatus);
1465:../src/sdcard.c ****     }
1466:../src/sdcard.c **** 
1467:../src/sdcard.c ****     if ((SDIO_STD_CAPACITY_SD_CARD_V1_1 == CardType) || (SDIO_STD_CAPACITY_SD_CARD_V2_0 == CardType
1468:../src/sdcard.c ****     {
1469:../src/sdcard.c ****       /* To improve performance */
1470:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) (RCA << 16);
1471:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_APP_CMD;
1472:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
1473:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
1474:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
1475:../src/sdcard.c ****       SDIO_SendCommand(&SDIO_CmdInitStructure);
1476:../src/sdcard.c **** 
1477:../src/sdcard.c **** 
1478:../src/sdcard.c ****       errorstatus = CmdResp1Error(SDIO_APP_CMD);
1479:../src/sdcard.c **** 
1480:../src/sdcard.c ****       if (errorstatus != SD_OK)
1481:../src/sdcard.c ****       {
1482:../src/sdcard.c ****         return(errorstatus);
1483:../src/sdcard.c ****       }
1484:../src/sdcard.c ****       /* To improve performance */
1485:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Argument = (uint32_t)NumberOfBlocks;
1486:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SET_BLOCK_COUNT;
1487:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
1488:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
1489:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
1490:../src/sdcard.c ****       SDIO_SendCommand(&SDIO_CmdInitStructure);
1491:../src/sdcard.c **** 
1492:../src/sdcard.c ****       errorstatus = CmdResp1Error(SDIO_SET_BLOCK_COUNT);
1493:../src/sdcard.c **** 
1494:../src/sdcard.c ****       if (errorstatus != SD_OK)
1495:../src/sdcard.c ****       {
1496:../src/sdcard.c ****         return(errorstatus);
1497:../src/sdcard.c ****       }
1498:../src/sdcard.c ****     }
1499:../src/sdcard.c **** 
1500:../src/sdcard.c ****     /* Send CMD25 WRITE_MULT_BLOCK with argument data address */
1501:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = (uint32_t)addr;
1502:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_WRITE_MULT_BLOCK;
1503:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
1504:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
1505:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
1506:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
1507:../src/sdcard.c **** 
1508:../src/sdcard.c ****     errorstatus = CmdResp1Error(SDIO_WRITE_MULT_BLOCK);
1509:../src/sdcard.c **** 
1510:../src/sdcard.c ****     if (SD_OK != errorstatus)
1511:../src/sdcard.c ****     {
1512:../src/sdcard.c ****       return(errorstatus);
1513:../src/sdcard.c ****     }
1514:../src/sdcard.c **** 
1515:../src/sdcard.c ****     TotalNumberOfBytes = NumberOfBlocks * BlockSize;
1516:../src/sdcard.c ****     StopCondition = 1;
1517:../src/sdcard.c ****     SrcBuffer = writebuff;
1518:../src/sdcard.c **** 
1519:../src/sdcard.c ****     SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
1520:../src/sdcard.c ****     SDIO_DataInitStructure.SDIO_DataLength = NumberOfBlocks * BlockSize;
1521:../src/sdcard.c ****     SDIO_DataInitStructure.SDIO_DataBlockSize = (uint32_t) power << 4;
1522:../src/sdcard.c ****     SDIO_DataInitStructure.SDIO_TransferDir = SDIO_TransferDir_ToCard;
1523:../src/sdcard.c ****     SDIO_DataInitStructure.SDIO_TransferMode = SDIO_TransferMode_Block;
1524:../src/sdcard.c ****     SDIO_DataInitStructure.SDIO_DPSM = SDIO_DPSM_Enable;
1525:../src/sdcard.c ****     SDIO_DataConfig(&SDIO_DataInitStructure);
1526:../src/sdcard.c **** 
1527:../src/sdcard.c ****     if (DeviceMode == SD_POLLING_MODE)
1528:../src/sdcard.c ****     {
1529:../src/sdcard.c ****       while (!(SDIO->STA & (SDIO_FLAG_TXUNDERR | SDIO_FLAG_DCRCFAIL | SDIO_FLAG_DATAEND | SDIO_FLAG
1530:../src/sdcard.c ****       {
1531:../src/sdcard.c ****         if (SDIO_GetFlagStatus(SDIO_FLAG_TXFIFOHE) != RESET)
1532:../src/sdcard.c ****         {
1533:../src/sdcard.c ****           if (!((TotalNumberOfBytes - bytestransferred) < SD_HALFFIFOBYTES))
1534:../src/sdcard.c ****           {
1535:../src/sdcard.c ****             for (count = 0; count < SD_HALFFIFO; count++)
1536:../src/sdcard.c ****             {
1537:../src/sdcard.c ****               SDIO_WriteData(*(tempbuff + count));
1538:../src/sdcard.c ****             }
1539:../src/sdcard.c ****             tempbuff += SD_HALFFIFO;
1540:../src/sdcard.c ****             bytestransferred += SD_HALFFIFOBYTES;
1541:../src/sdcard.c ****           }
1542:../src/sdcard.c ****           else
1543:../src/sdcard.c ****           {
1544:../src/sdcard.c ****             restwords = ((TotalNumberOfBytes - bytestransferred) % 4 == 0) ? ((TotalNumberOfBytes -
1545:../src/sdcard.c ****                         ((TotalNumberOfBytes - bytestransferred) / 4 + 1);
1546:../src/sdcard.c **** 
1547:../src/sdcard.c ****             for (count = 0; count < restwords; count++, tempbuff++, bytestransferred += 4)
1548:../src/sdcard.c ****             {
1549:../src/sdcard.c ****               SDIO_WriteData(*tempbuff);
1550:../src/sdcard.c ****             }
1551:../src/sdcard.c ****           }
1552:../src/sdcard.c ****         }
1553:../src/sdcard.c ****       }
1554:../src/sdcard.c **** 
1555:../src/sdcard.c ****       if (SDIO_GetFlagStatus(SDIO_FLAG_DTIMEOUT) != RESET)
1556:../src/sdcard.c ****       {
1557:../src/sdcard.c ****         SDIO_ClearFlag(SDIO_FLAG_DTIMEOUT);
1558:../src/sdcard.c ****         errorstatus = SD_DATA_TIMEOUT;
1559:../src/sdcard.c ****         return(errorstatus);
1560:../src/sdcard.c ****       }
1561:../src/sdcard.c ****       else if (SDIO_GetFlagStatus(SDIO_FLAG_DCRCFAIL) != RESET)
1562:../src/sdcard.c ****       {
1563:../src/sdcard.c ****         SDIO_ClearFlag(SDIO_FLAG_DCRCFAIL);
1564:../src/sdcard.c ****         errorstatus = SD_DATA_CRC_FAIL;
1565:../src/sdcard.c ****         return(errorstatus);
1566:../src/sdcard.c ****       }
1567:../src/sdcard.c ****       else if (SDIO_GetFlagStatus(SDIO_FLAG_TXUNDERR) != RESET)
1568:../src/sdcard.c ****       {
1569:../src/sdcard.c ****         SDIO_ClearFlag(SDIO_FLAG_TXUNDERR);
1570:../src/sdcard.c ****         errorstatus = SD_TX_UNDERRUN;
1571:../src/sdcard.c ****         return(errorstatus);
1572:../src/sdcard.c ****       }
1573:../src/sdcard.c ****       else if (SDIO_GetFlagStatus(SDIO_FLAG_STBITERR) != RESET)
1574:../src/sdcard.c ****       {
1575:../src/sdcard.c ****         SDIO_ClearFlag(SDIO_FLAG_STBITERR);
1576:../src/sdcard.c ****         errorstatus = SD_START_BIT_ERR;
1577:../src/sdcard.c ****         return(errorstatus);
1578:../src/sdcard.c ****       }
1579:../src/sdcard.c **** 
1580:../src/sdcard.c ****       if (SDIO_GetFlagStatus(SDIO_FLAG_DATAEND) != RESET)
1581:../src/sdcard.c ****       {
1582:../src/sdcard.c ****        if ((SDIO_STD_CAPACITY_SD_CARD_V1_1 == CardType) || (SDIO_STD_CAPACITY_SD_CARD_V2_0 == CardT
1583:../src/sdcard.c ****         {
1584:../src/sdcard.c ****           /* Send CMD12 STOP_TRANSMISSION */
1585:../src/sdcard.c ****           SDIO_CmdInitStructure.SDIO_Argument = 0x0;
1586:../src/sdcard.c ****           SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_STOP_TRANSMISSION;
1587:../src/sdcard.c ****           SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
1588:../src/sdcard.c ****           SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
1589:../src/sdcard.c ****           SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
1590:../src/sdcard.c ****           SDIO_SendCommand(&SDIO_CmdInitStructure);
1591:../src/sdcard.c **** 
1592:../src/sdcard.c **** 
1593:../src/sdcard.c ****           errorstatus = CmdResp1Error(SDIO_STOP_TRANSMISSION);
1594:../src/sdcard.c **** 
1595:../src/sdcard.c ****           if (errorstatus != SD_OK)
1596:../src/sdcard.c ****           {
1597:../src/sdcard.c ****             return(errorstatus);
1598:../src/sdcard.c ****           }
1599:../src/sdcard.c ****         }
1600:../src/sdcard.c ****       }
1601:../src/sdcard.c ****     }
1602:../src/sdcard.c ****     else if (DeviceMode == SD_INTERRUPT_MODE)
1603:../src/sdcard.c ****     {
1604:../src/sdcard.c ****       SDIO_ITConfig(SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_DATAEND | SDIO_IT_TXFIFOHE | SDIO
1605:../src/sdcard.c ****       while ((TransferEnd == 0) && (TransferError == SD_OK))
1606:../src/sdcard.c ****       {}
1607:../src/sdcard.c ****       if (TransferError != SD_OK)
1608:../src/sdcard.c ****       {
1609:../src/sdcard.c ****         return(TransferError);
1610:../src/sdcard.c ****       }
1611:../src/sdcard.c ****     }
1612:../src/sdcard.c ****     else if (DeviceMode == SD_DMA_MODE)
1613:../src/sdcard.c ****     {
1614:../src/sdcard.c ****       SDIO_ITConfig(SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_DATAEND | SDIO_IT_TXUNDERR | SDIO
1615:../src/sdcard.c ****       SDIO_DMACmd(ENABLE);
1616:../src/sdcard.c ****       DMA_TxConfiguration(writebuff, (NumberOfBlocks * BlockSize));
1617:../src/sdcard.c ****       while (DMA_GetFlagStatus(DMA2_FLAG_TC4) == RESET)
1618:../src/sdcard.c ****       {}
1619:../src/sdcard.c ****       while ((TransferEnd == 0) && (TransferError == SD_OK))
1620:../src/sdcard.c ****       {}
1621:../src/sdcard.c ****       if (TransferError != SD_OK)
1622:../src/sdcard.c ****       {
1623:../src/sdcard.c ****         return(TransferError);
1624:../src/sdcard.c ****       }
1625:../src/sdcard.c ****     }
1626:../src/sdcard.c ****   }
1627:../src/sdcard.c ****   /* Clear all the static flags */
1628:../src/sdcard.c ****   SDIO_ClearFlag(SDIO_STATIC_FLAGS);
1629:../src/sdcard.c **** 
1630:../src/sdcard.c ****   /* Wait till the card is in programming state */
1631:../src/sdcard.c ****   errorstatus = IsCardProgramming(&cardstate);
1632:../src/sdcard.c **** 
1633:../src/sdcard.c ****   while ((errorstatus == SD_OK) && ((cardstate == SD_CARD_PROGRAMMING) || (cardstate == SD_CARD_REC
1634:../src/sdcard.c ****   {
1635:../src/sdcard.c ****     errorstatus = IsCardProgramming(&cardstate);
1636:../src/sdcard.c ****   }
1637:../src/sdcard.c **** 
1638:../src/sdcard.c ****   return(errorstatus);
1639:../src/sdcard.c **** }
1640:../src/sdcard.c **** 
1641:../src/sdcard.c **** /*******************************************************************************
1642:../src/sdcard.c **** * Function Name  : SD_GetTransferState
1643:../src/sdcard.c **** * Description    : Gets the cuurent data transfer state.
1644:../src/sdcard.c **** * Input          : None
1645:../src/sdcard.c **** * Output         : None
1646:../src/sdcard.c **** * Return         : SDTransferState: Data Transfer state.
1647:../src/sdcard.c **** *                  This value can be: 
1648:../src/sdcard.c **** *                   - SD_NO_TRANSFER: No data transfer is acting
1649:../src/sdcard.c **** *                   - SD_TRANSFER_IN_PROGRESS: Data transfer is acting
1650:../src/sdcard.c **** *******************************************************************************/
1651:../src/sdcard.c **** SDTransferState SD_GetTransferState(void)
1652:../src/sdcard.c **** {
1653:../src/sdcard.c ****   if (SDIO->STA & (SDIO_FLAG_TXACT | SDIO_FLAG_RXACT))
1654:../src/sdcard.c ****   {
1655:../src/sdcard.c ****     return(SD_TRANSFER_IN_PROGRESS);
1656:../src/sdcard.c ****   }
1657:../src/sdcard.c ****   else
1658:../src/sdcard.c ****   {
1659:../src/sdcard.c ****     return(SD_NO_TRANSFER);
1660:../src/sdcard.c ****   }
1661:../src/sdcard.c **** }
1662:../src/sdcard.c **** 
1663:../src/sdcard.c **** /*******************************************************************************
1664:../src/sdcard.c **** * Function Name  : SD_StopTransfer
1665:../src/sdcard.c **** * Description    : Aborts an ongoing data transfer.
1666:../src/sdcard.c **** * Input          : None
1667:../src/sdcard.c **** * Output         : None
1668:../src/sdcard.c **** * Return         : SD_Error: SD Card Error code.
1669:../src/sdcard.c **** *******************************************************************************/
1670:../src/sdcard.c **** SD_Error SD_StopTransfer(void)
1671:../src/sdcard.c **** {
1672:../src/sdcard.c ****   SD_Error errorstatus = SD_OK;
1673:../src/sdcard.c **** 
1674:../src/sdcard.c ****   /* Send CMD12 STOP_TRANSMISSION  */
1675:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = 0x0;
1676:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_STOP_TRANSMISSION;
1677:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
1678:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
1679:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
1680:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
1681:../src/sdcard.c **** 
1682:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_STOP_TRANSMISSION);
1683:../src/sdcard.c **** 
1684:../src/sdcard.c ****   return(errorstatus);
1685:../src/sdcard.c **** }
1686:../src/sdcard.c **** 
1687:../src/sdcard.c **** /*******************************************************************************
1688:../src/sdcard.c **** * Function Name  : SD_Erase
1689:../src/sdcard.c **** * Description    : Allows to erase memory area specified for the given card.
1690:../src/sdcard.c **** * Input          : - startaddr: the start address.
1691:../src/sdcard.c **** *                  - endaddr: the end address.
1692:../src/sdcard.c **** * Output         : None
1693:../src/sdcard.c **** * Return         : SD_Error: SD Card Error code.
1694:../src/sdcard.c **** *******************************************************************************/
1695:../src/sdcard.c **** SD_Error SD_Erase(uint32_t startaddr, uint32_t endaddr)
1696:../src/sdcard.c **** {
1697:../src/sdcard.c ****   SD_Error errorstatus = SD_OK;
1698:../src/sdcard.c ****   uint32_t delay = 0;
1699:../src/sdcard.c ****   __IO uint32_t maxdelay = 0;
1700:../src/sdcard.c ****   uint8_t cardstate = 0;
1701:../src/sdcard.c **** 
1702:../src/sdcard.c ****   /* Check if the card coomnd class supports erase command */
1703:../src/sdcard.c ****   if (((CSD_Tab[1] >> 20) & SD_CCCC_ERASE) == 0)
1704:../src/sdcard.c ****   {
1705:../src/sdcard.c ****     errorstatus = SD_REQUEST_NOT_APPLICABLE;
1706:../src/sdcard.c ****     return(errorstatus);
1707:../src/sdcard.c ****   }
1708:../src/sdcard.c **** 
1709:../src/sdcard.c ****   maxdelay = 72000 / ((SDIO->CLKCR & 0xFF) + 2);
1710:../src/sdcard.c **** 
1711:../src/sdcard.c ****   if (SDIO_GetResponse(SDIO_RESP1) & SD_CARD_LOCKED)
1712:../src/sdcard.c ****   {
1713:../src/sdcard.c ****     errorstatus = SD_LOCK_UNLOCK_FAILED;
1714:../src/sdcard.c ****     return(errorstatus);
1715:../src/sdcard.c ****   }
1716:../src/sdcard.c **** 
1717:../src/sdcard.c ****   if (CardType == SDIO_HIGH_CAPACITY_SD_CARD)
1718:../src/sdcard.c ****   {
1719:../src/sdcard.c ****     startaddr /= 512;
1720:../src/sdcard.c ****     endaddr /= 512;
1721:../src/sdcard.c ****   }
1722:../src/sdcard.c ****   
1723:../src/sdcard.c ****   /* According to sd-card spec 1.0 ERASE_GROUP_START (CMD32) and erase_group_end(CMD33) */
1724:../src/sdcard.c ****   if ((SDIO_STD_CAPACITY_SD_CARD_V1_1 == CardType) || (SDIO_STD_CAPACITY_SD_CARD_V2_0 == CardType) 
1725:../src/sdcard.c ****   {
1726:../src/sdcard.c ****     /* Send CMD32 SD_ERASE_GRP_START with argument as addr  */
1727:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = startaddr;
1728:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SD_ERASE_GRP_START;
1729:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
1730:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
1731:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
1732:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
1733:../src/sdcard.c **** 
1734:../src/sdcard.c ****     errorstatus = CmdResp1Error(SDIO_SD_ERASE_GRP_START);
1735:../src/sdcard.c ****     if (errorstatus != SD_OK)
1736:../src/sdcard.c ****     {
1737:../src/sdcard.c ****       return(errorstatus);
1738:../src/sdcard.c ****     }
1739:../src/sdcard.c **** 
1740:../src/sdcard.c ****     /* Send CMD33 SD_ERASE_GRP_END with argument as addr  */
1741:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = endaddr;
1742:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SD_ERASE_GRP_END;
1743:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
1744:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
1745:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
1746:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
1747:../src/sdcard.c **** 
1748:../src/sdcard.c ****     errorstatus = CmdResp1Error(SDIO_SD_ERASE_GRP_END);
1749:../src/sdcard.c ****     if (errorstatus != SD_OK)
1750:../src/sdcard.c ****     {
1751:../src/sdcard.c ****       return(errorstatus);
1752:../src/sdcard.c ****     }
1753:../src/sdcard.c ****   }
1754:../src/sdcard.c **** 
1755:../src/sdcard.c ****   /* Send CMD38 ERASE */
1756:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = 0;
1757:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_ERASE;
1758:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
1759:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
1760:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
1761:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
1762:../src/sdcard.c **** 
1763:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_ERASE);
1764:../src/sdcard.c **** 
1765:../src/sdcard.c ****   if (errorstatus != SD_OK)
1766:../src/sdcard.c ****   {
1767:../src/sdcard.c ****     return(errorstatus);
1768:../src/sdcard.c ****   }
1769:../src/sdcard.c **** 
1770:../src/sdcard.c ****   for (delay = 0; delay < maxdelay; delay++)
1771:../src/sdcard.c ****   {}
1772:../src/sdcard.c **** 
1773:../src/sdcard.c ****   /* Wait till the card is in programming state */
1774:../src/sdcard.c ****   errorstatus = IsCardProgramming(&cardstate);
1775:../src/sdcard.c **** 
1776:../src/sdcard.c ****   while ((errorstatus == SD_OK) && ((SD_CARD_PROGRAMMING == cardstate) || (SD_CARD_RECEIVING == car
1777:../src/sdcard.c ****   {
1778:../src/sdcard.c ****     errorstatus = IsCardProgramming(&cardstate);
1779:../src/sdcard.c ****   }
1780:../src/sdcard.c **** 
1781:../src/sdcard.c ****   return(errorstatus);
1782:../src/sdcard.c **** }
1783:../src/sdcard.c **** 
1784:../src/sdcard.c **** /*******************************************************************************
1785:../src/sdcard.c **** * Function Name  : SD_SendStatus
1786:../src/sdcard.c **** * Description    : Returns the current card's status.
1787:../src/sdcard.c **** * Input          : pcardstatus: pointer to the buffer that will contain the SD 
1788:../src/sdcard.c **** *                  card status (Card Status register).
1789:../src/sdcard.c **** * Output         : None
1790:../src/sdcard.c **** * Return         : SD_Error: SD Card Error code.
1791:../src/sdcard.c **** *******************************************************************************/
1792:../src/sdcard.c **** SD_Error SD_SendStatus(uint32_t *pcardstatus)
1793:../src/sdcard.c **** {
1794:../src/sdcard.c ****   SD_Error errorstatus = SD_OK;
1795:../src/sdcard.c **** 
1796:../src/sdcard.c ****   if (pcardstatus == NULL)
1797:../src/sdcard.c ****   {
1798:../src/sdcard.c ****     errorstatus = SD_INVALID_PARAMETER;
1799:../src/sdcard.c ****     return(errorstatus);
1800:../src/sdcard.c ****   }
1801:../src/sdcard.c **** 
1802:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) RCA << 16;
1803:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SEND_STATUS;
1804:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
1805:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
1806:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
1807:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
1808:../src/sdcard.c **** 
1809:../src/sdcard.c **** 
1810:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_SEND_STATUS);
1811:../src/sdcard.c **** 
1812:../src/sdcard.c ****   if (errorstatus != SD_OK)
1813:../src/sdcard.c ****   {
1814:../src/sdcard.c ****     return(errorstatus);
1815:../src/sdcard.c ****   }
1816:../src/sdcard.c **** 
1817:../src/sdcard.c ****   *pcardstatus = SDIO_GetResponse(SDIO_RESP1);
1818:../src/sdcard.c **** 
1819:../src/sdcard.c ****   return(errorstatus);
1820:../src/sdcard.c **** }
1821:../src/sdcard.c **** 
1822:../src/sdcard.c **** /*******************************************************************************
1823:../src/sdcard.c **** * Function Name  : SD_SendSDStatus
1824:../src/sdcard.c **** * Description    : Returns the current SD card's status.
1825:../src/sdcard.c **** * Input          : psdstatus: pointer to the buffer that will contain the SD 
1826:../src/sdcard.c **** *                  card status (SD Status register).
1827:../src/sdcard.c **** * Output         : None
1828:../src/sdcard.c **** * Return         : SD_Error: SD Card Error code.
1829:../src/sdcard.c **** *******************************************************************************/
1830:../src/sdcard.c **** SD_Error SD_SendSDStatus(uint32_t *psdstatus)
1831:../src/sdcard.c **** {
1832:../src/sdcard.c ****   SD_Error errorstatus = SD_OK;
1833:../src/sdcard.c ****   uint32_t count = 0;
1834:../src/sdcard.c **** 
1835:../src/sdcard.c ****   if (SDIO_GetResponse(SDIO_RESP1) & SD_CARD_LOCKED)
1836:../src/sdcard.c ****   {
1837:../src/sdcard.c ****     errorstatus = SD_LOCK_UNLOCK_FAILED;
1838:../src/sdcard.c ****     return(errorstatus);
1839:../src/sdcard.c ****   }
1840:../src/sdcard.c **** 
1841:../src/sdcard.c ****   /* Set block size for card if it is not equal to current block size for card. */
1842:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = 64;
1843:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SET_BLOCKLEN;
1844:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
1845:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
1846:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
1847:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
1848:../src/sdcard.c **** 
1849:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_SET_BLOCKLEN);
1850:../src/sdcard.c **** 
1851:../src/sdcard.c ****   if (errorstatus != SD_OK)
1852:../src/sdcard.c ****   {
1853:../src/sdcard.c ****     return(errorstatus);
1854:../src/sdcard.c ****   }
1855:../src/sdcard.c **** 
1856:../src/sdcard.c ****   /* CMD55 */
1857:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) RCA << 16;
1858:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_APP_CMD;
1859:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
1860:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
1861:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
1862:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
1863:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_APP_CMD);
1864:../src/sdcard.c **** 
1865:../src/sdcard.c ****   if (errorstatus != SD_OK)
1866:../src/sdcard.c ****   {
1867:../src/sdcard.c ****     return(errorstatus);
1868:../src/sdcard.c ****   }
1869:../src/sdcard.c **** 
1870:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
1871:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataLength = 64;
1872:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataBlockSize = SDIO_DataBlockSize_64b;
1873:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferDir = SDIO_TransferDir_ToSDIO;
1874:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferMode = SDIO_TransferMode_Block;
1875:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DPSM = SDIO_DPSM_Enable;
1876:../src/sdcard.c ****   SDIO_DataConfig(&SDIO_DataInitStructure);
1877:../src/sdcard.c **** 
1878:../src/sdcard.c **** 
1879:../src/sdcard.c ****   /* Send ACMD13 SD_APP_STAUS  with argument as card's RCA.*/
1880:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = 0;
1881:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SD_APP_STAUS;
1882:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
1883:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
1884:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
1885:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
1886:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_SD_APP_STAUS);
1887:../src/sdcard.c **** 
1888:../src/sdcard.c ****   if (errorstatus != SD_OK)
1889:../src/sdcard.c ****   {
1890:../src/sdcard.c ****     return(errorstatus);
1891:../src/sdcard.c ****   }
1892:../src/sdcard.c **** 
1893:../src/sdcard.c ****   while (!(SDIO->STA &(SDIO_FLAG_RXOVERR | SDIO_FLAG_DCRCFAIL | SDIO_FLAG_DTIMEOUT | SDIO_FLAG_DBCK
1894:../src/sdcard.c ****   {
1895:../src/sdcard.c ****     if (SDIO_GetFlagStatus(SDIO_FLAG_RXFIFOHF) != RESET)
1896:../src/sdcard.c ****     {
1897:../src/sdcard.c ****       for (count = 0; count < 8; count++)
1898:../src/sdcard.c ****       {
1899:../src/sdcard.c ****         *(psdstatus + count) = SDIO_ReadData();
1900:../src/sdcard.c ****       }
1901:../src/sdcard.c ****       psdstatus += 8;
1902:../src/sdcard.c ****     }
1903:../src/sdcard.c ****   }
1904:../src/sdcard.c **** 
1905:../src/sdcard.c ****   if (SDIO_GetFlagStatus(SDIO_FLAG_DTIMEOUT) != RESET)
1906:../src/sdcard.c ****   {
1907:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_DTIMEOUT);
1908:../src/sdcard.c ****     errorstatus = SD_DATA_TIMEOUT;
1909:../src/sdcard.c ****     return(errorstatus);
1910:../src/sdcard.c ****   }
1911:../src/sdcard.c ****   else if (SDIO_GetFlagStatus(SDIO_FLAG_DCRCFAIL) != RESET)
1912:../src/sdcard.c ****   {
1913:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_DCRCFAIL);
1914:../src/sdcard.c ****     errorstatus = SD_DATA_CRC_FAIL;
1915:../src/sdcard.c ****     return(errorstatus);
1916:../src/sdcard.c ****   }
1917:../src/sdcard.c ****   else if (SDIO_GetFlagStatus(SDIO_FLAG_RXOVERR) != RESET)
1918:../src/sdcard.c ****   {
1919:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_RXOVERR);
1920:../src/sdcard.c ****     errorstatus = SD_RX_OVERRUN;
1921:../src/sdcard.c ****     return(errorstatus);
1922:../src/sdcard.c ****   }
1923:../src/sdcard.c ****   else if (SDIO_GetFlagStatus(SDIO_FLAG_STBITERR) != RESET)
1924:../src/sdcard.c ****   {
1925:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_STBITERR);
1926:../src/sdcard.c ****     errorstatus = SD_START_BIT_ERR;
1927:../src/sdcard.c ****     return(errorstatus);
1928:../src/sdcard.c ****   }
1929:../src/sdcard.c **** 
1930:../src/sdcard.c ****   while (SDIO_GetFlagStatus(SDIO_FLAG_RXDAVL) != RESET)
1931:../src/sdcard.c ****   {
1932:../src/sdcard.c ****     *psdstatus = SDIO_ReadData();
1933:../src/sdcard.c ****     psdstatus++;
1934:../src/sdcard.c ****   }
1935:../src/sdcard.c **** 
1936:../src/sdcard.c ****   /* Clear all the static status flags*/
1937:../src/sdcard.c ****   SDIO_ClearFlag(SDIO_STATIC_FLAGS);
1938:../src/sdcard.c ****   psdstatus -= 16;
1939:../src/sdcard.c ****   for (count = 0; count < 16; count++)
1940:../src/sdcard.c ****   {
1941:../src/sdcard.c ****     psdstatus[count] = ((psdstatus[count] & SD_0TO7BITS) << 24) |((psdstatus[count] & SD_8TO15BITS)
1942:../src/sdcard.c ****                        ((psdstatus[count] & SD_16TO23BITS) >> 8) |((psdstatus[count] & SD_24TO31BIT
1943:../src/sdcard.c ****   }
1944:../src/sdcard.c ****   return(errorstatus);
1945:../src/sdcard.c **** }
1946:../src/sdcard.c **** 
1947:../src/sdcard.c **** /*******************************************************************************
1948:../src/sdcard.c **** * Function Name  : SD_ProcessIRQSrc
1949:../src/sdcard.c **** * Description    : Allows to process all the interrupts that are high.
1950:../src/sdcard.c **** * Input          : None
1951:../src/sdcard.c **** * Output         : None
1952:../src/sdcard.c **** * Return         : SD_Error: SD Card Error code.
1953:../src/sdcard.c **** *******************************************************************************/
1954:../src/sdcard.c **** SD_Error SD_ProcessIRQSrc(void)
1955:../src/sdcard.c **** {
1956:../src/sdcard.c ****   uint32_t count = 0, restwords = 0;
1957:../src/sdcard.c **** 
1958:../src/sdcard.c ****   if (DeviceMode == SD_INTERRUPT_MODE)
1959:../src/sdcard.c ****   {
1960:../src/sdcard.c ****     if (SDIO_GetITStatus(SDIO_IT_RXFIFOHF) != RESET)
1961:../src/sdcard.c ****     {
1962:../src/sdcard.c ****       for (count = 0; count < SD_HALFFIFO; count++)
1963:../src/sdcard.c ****       {
1964:../src/sdcard.c ****         *(DestBuffer + count) = SDIO_ReadData();
1965:../src/sdcard.c ****       }
1966:../src/sdcard.c ****       DestBuffer += SD_HALFFIFO;
1967:../src/sdcard.c ****       NumberOfBytes += SD_HALFFIFOBYTES;
1968:../src/sdcard.c ****     }
1969:../src/sdcard.c ****     else if (SDIO_GetITStatus(SDIO_IT_TXFIFOHE) != RESET)
1970:../src/sdcard.c ****     {
1971:../src/sdcard.c ****       if ((TotalNumberOfBytes - NumberOfBytes) < SD_HALFFIFOBYTES)
1972:../src/sdcard.c ****       {
1973:../src/sdcard.c ****         restwords = ((TotalNumberOfBytes - NumberOfBytes) %  4 == 0) ?
1974:../src/sdcard.c ****                     ((TotalNumberOfBytes - NumberOfBytes) / 4) :
1975:../src/sdcard.c ****                     ((TotalNumberOfBytes - NumberOfBytes) / 4 + 1);
1976:../src/sdcard.c **** 
1977:../src/sdcard.c ****         for (count = 0; count < restwords;  count++, SrcBuffer++, NumberOfBytes += 4)
1978:../src/sdcard.c ****         {
1979:../src/sdcard.c ****           SDIO_WriteData(*SrcBuffer);
1980:../src/sdcard.c ****         }
1981:../src/sdcard.c ****       }
1982:../src/sdcard.c ****       else
1983:../src/sdcard.c ****       {
1984:../src/sdcard.c ****         for (count = 0; count < SD_HALFFIFO; count++)
1985:../src/sdcard.c ****         {
1986:../src/sdcard.c ****           SDIO_WriteData(*(SrcBuffer + count));
1987:../src/sdcard.c ****         }
1988:../src/sdcard.c **** 
1989:../src/sdcard.c ****         SrcBuffer += SD_HALFFIFO;
1990:../src/sdcard.c ****         NumberOfBytes += SD_HALFFIFOBYTES;
1991:../src/sdcard.c ****       }
1992:../src/sdcard.c ****     }
1993:../src/sdcard.c ****   }
1994:../src/sdcard.c **** 
1995:../src/sdcard.c ****   if (SDIO_GetITStatus(SDIO_IT_DATAEND) != RESET)
1996:../src/sdcard.c ****   {
1997:../src/sdcard.c ****     if (DeviceMode != SD_DMA_MODE)
1998:../src/sdcard.c ****     {
1999:../src/sdcard.c ****       while ((SDIO_GetFlagStatus(SDIO_FLAG_RXDAVL) != RESET)  &&  (NumberOfBytes < TotalNumberOfByt
2000:../src/sdcard.c ****       {
2001:../src/sdcard.c ****         *DestBuffer = SDIO_ReadData();
2002:../src/sdcard.c ****         DestBuffer++;
2003:../src/sdcard.c ****         NumberOfBytes += 4;
2004:../src/sdcard.c ****       }
2005:../src/sdcard.c ****     }
2006:../src/sdcard.c **** 
2007:../src/sdcard.c ****     if (StopCondition == 1)
2008:../src/sdcard.c ****     {
2009:../src/sdcard.c ****       TransferError = SD_StopTransfer();
2010:../src/sdcard.c ****     }
2011:../src/sdcard.c ****     else
2012:../src/sdcard.c ****     {
2013:../src/sdcard.c ****       TransferError = SD_OK;
2014:../src/sdcard.c ****     }
2015:../src/sdcard.c ****     SDIO_ClearITPendingBit(SDIO_IT_DATAEND);
2016:../src/sdcard.c ****     SDIO_ITConfig(SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_DATAEND |
2017:../src/sdcard.c ****                   SDIO_IT_TXFIFOHE | SDIO_IT_RXFIFOHF | SDIO_IT_TXUNDERR |
2018:../src/sdcard.c ****                   SDIO_IT_RXOVERR | SDIO_IT_STBITERR, DISABLE);
2019:../src/sdcard.c ****     TransferEnd = 1;
2020:../src/sdcard.c ****     NumberOfBytes = 0;
2021:../src/sdcard.c ****     return(TransferError);
2022:../src/sdcard.c ****   }
2023:../src/sdcard.c **** 
2024:../src/sdcard.c ****   if (SDIO_GetITStatus(SDIO_IT_DCRCFAIL) != RESET)
2025:../src/sdcard.c ****   {
2026:../src/sdcard.c ****     SDIO_ClearITPendingBit(SDIO_IT_DCRCFAIL);
2027:../src/sdcard.c ****     SDIO_ITConfig(SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_DATAEND |
2028:../src/sdcard.c ****                   SDIO_IT_TXFIFOHE | SDIO_IT_RXFIFOHF | SDIO_IT_TXUNDERR |
2029:../src/sdcard.c ****                   SDIO_IT_RXOVERR | SDIO_IT_STBITERR, DISABLE);
2030:../src/sdcard.c ****     NumberOfBytes = 0;
2031:../src/sdcard.c ****     TransferError = SD_DATA_CRC_FAIL;
2032:../src/sdcard.c ****     return(SD_DATA_CRC_FAIL);
2033:../src/sdcard.c ****   }
2034:../src/sdcard.c **** 
2035:../src/sdcard.c ****   if (SDIO_GetITStatus(SDIO_IT_DTIMEOUT) != RESET)
2036:../src/sdcard.c ****   {
2037:../src/sdcard.c ****     SDIO_ClearITPendingBit(SDIO_IT_DTIMEOUT);
2038:../src/sdcard.c ****     SDIO_ITConfig(SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_DATAEND |
2039:../src/sdcard.c ****                   SDIO_IT_TXFIFOHE | SDIO_IT_RXFIFOHF | SDIO_IT_TXUNDERR |
2040:../src/sdcard.c ****                   SDIO_IT_RXOVERR | SDIO_IT_STBITERR, DISABLE);
2041:../src/sdcard.c ****     NumberOfBytes = 0;
2042:../src/sdcard.c ****     TransferError = SD_DATA_TIMEOUT;
2043:../src/sdcard.c ****     return(SD_DATA_TIMEOUT);
2044:../src/sdcard.c ****   }
2045:../src/sdcard.c **** 
2046:../src/sdcard.c ****   if (SDIO_GetITStatus(SDIO_IT_RXOVERR) != RESET)
2047:../src/sdcard.c ****   {
2048:../src/sdcard.c ****     SDIO_ClearITPendingBit(SDIO_IT_RXOVERR);
2049:../src/sdcard.c ****     SDIO_ITConfig(SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_DATAEND |
2050:../src/sdcard.c ****                   SDIO_IT_TXFIFOHE | SDIO_IT_RXFIFOHF | SDIO_IT_TXUNDERR |
2051:../src/sdcard.c ****                   SDIO_IT_RXOVERR | SDIO_IT_STBITERR, DISABLE);
2052:../src/sdcard.c ****     NumberOfBytes = 0;
2053:../src/sdcard.c ****     TransferError = SD_RX_OVERRUN;
2054:../src/sdcard.c ****     return(SD_RX_OVERRUN);
2055:../src/sdcard.c ****   }
2056:../src/sdcard.c **** 
2057:../src/sdcard.c ****   if (SDIO_GetITStatus(SDIO_IT_TXUNDERR) != RESET)
2058:../src/sdcard.c ****   {
2059:../src/sdcard.c ****     SDIO_ClearITPendingBit(SDIO_IT_TXUNDERR);
2060:../src/sdcard.c ****     SDIO_ITConfig(SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_DATAEND |
2061:../src/sdcard.c ****                   SDIO_IT_TXFIFOHE | SDIO_IT_RXFIFOHF | SDIO_IT_TXUNDERR |
2062:../src/sdcard.c ****                   SDIO_IT_RXOVERR | SDIO_IT_STBITERR, DISABLE);
2063:../src/sdcard.c ****     NumberOfBytes = 0;
2064:../src/sdcard.c ****     TransferError = SD_TX_UNDERRUN;
2065:../src/sdcard.c ****     return(SD_TX_UNDERRUN);
2066:../src/sdcard.c ****   }
2067:../src/sdcard.c **** 
2068:../src/sdcard.c ****   if (SDIO_GetITStatus(SDIO_IT_STBITERR) != RESET)
2069:../src/sdcard.c ****   {
2070:../src/sdcard.c ****     SDIO_ClearITPendingBit(SDIO_IT_STBITERR);
2071:../src/sdcard.c ****     SDIO_ITConfig(SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_DATAEND |
2072:../src/sdcard.c ****                   SDIO_IT_TXFIFOHE | SDIO_IT_RXFIFOHF | SDIO_IT_TXUNDERR |
2073:../src/sdcard.c ****                   SDIO_IT_RXOVERR | SDIO_IT_STBITERR, DISABLE);
2074:../src/sdcard.c ****     NumberOfBytes = 0;
2075:../src/sdcard.c ****     TransferError = SD_START_BIT_ERR;
2076:../src/sdcard.c ****     return(SD_START_BIT_ERR);
2077:../src/sdcard.c ****   }
2078:../src/sdcard.c **** 
2079:../src/sdcard.c ****   return(SD_OK);
2080:../src/sdcard.c **** }
2081:../src/sdcard.c **** 
2082:../src/sdcard.c **** /*******************************************************************************
2083:../src/sdcard.c **** * Function Name  : CmdError
2084:../src/sdcard.c **** * Description    : Checks for error conditions for CMD0.
2085:../src/sdcard.c **** * Input          : None
2086:../src/sdcard.c **** * Output         : None
2087:../src/sdcard.c **** * Return         : SD_Error: SD Card Error code.
2088:../src/sdcard.c **** *******************************************************************************/
2089:../src/sdcard.c **** static SD_Error CmdError(void)
2090:../src/sdcard.c **** {
2091:../src/sdcard.c ****   SD_Error errorstatus = SD_OK;
2092:../src/sdcard.c ****   uint32_t timeout;
2093:../src/sdcard.c **** 
2094:../src/sdcard.c ****   timeout = SDIO_CMD0TIMEOUT; /* 10000 */
2095:../src/sdcard.c **** 
2096:../src/sdcard.c ****   while ((timeout > 0) && (SDIO_GetFlagStatus(SDIO_FLAG_CMDSENT) == RESET))
2097:../src/sdcard.c ****   {
2098:../src/sdcard.c ****     timeout--;
2099:../src/sdcard.c ****   }
2100:../src/sdcard.c **** 
2101:../src/sdcard.c ****   if (timeout == 0)
2102:../src/sdcard.c ****   {
2103:../src/sdcard.c ****     errorstatus = SD_CMD_RSP_TIMEOUT;
2104:../src/sdcard.c ****     return(errorstatus);
2105:../src/sdcard.c ****   }
2106:../src/sdcard.c **** 
2107:../src/sdcard.c ****   /* Clear all the static flags */
2108:../src/sdcard.c ****   SDIO_ClearFlag(SDIO_STATIC_FLAGS);
2109:../src/sdcard.c **** 
2110:../src/sdcard.c ****   return(errorstatus);
2111:../src/sdcard.c **** }
2112:../src/sdcard.c **** 
2113:../src/sdcard.c **** /*******************************************************************************
2114:../src/sdcard.c **** * Function Name  : CmdResp7Error
2115:../src/sdcard.c **** * Description    : Checks for error conditions for R7.
2116:../src/sdcard.c **** *                  response.
2117:../src/sdcard.c **** * Input          : None
2118:../src/sdcard.c **** * Output         : None
2119:../src/sdcard.c **** * Return         : SD_Error: SD Card Error code.
2120:../src/sdcard.c **** *******************************************************************************/
2121:../src/sdcard.c **** static SD_Error CmdResp7Error(void)
2122:../src/sdcard.c **** {
2123:../src/sdcard.c ****   SD_Error errorstatus = SD_OK;
2124:../src/sdcard.c ****   uint32_t status;
2125:../src/sdcard.c ****   uint32_t timeout = SDIO_CMD0TIMEOUT;
2126:../src/sdcard.c **** 
2127:../src/sdcard.c ****   status = SDIO->STA;
2128:../src/sdcard.c **** 
2129:../src/sdcard.c ****   while (!(status & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT)) && (timeout > 0)
2130:../src/sdcard.c ****   {
2131:../src/sdcard.c ****     timeout--;
2132:../src/sdcard.c ****     status = SDIO->STA;
2133:../src/sdcard.c ****   }
2134:../src/sdcard.c **** 
2135:../src/sdcard.c ****   if ((timeout == 0) || (status & SDIO_FLAG_CTIMEOUT))
2136:../src/sdcard.c ****   {
2137:../src/sdcard.c ****     /* Card is not V2.0 complient or card does not support the set voltage range */
2138:../src/sdcard.c ****     errorstatus = SD_CMD_RSP_TIMEOUT;
2139:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_CTIMEOUT);
2140:../src/sdcard.c ****     return(errorstatus);
2141:../src/sdcard.c ****   }
2142:../src/sdcard.c **** 
2143:../src/sdcard.c ****   if (status & SDIO_FLAG_CMDREND)
2144:../src/sdcard.c ****   {
2145:../src/sdcard.c ****     /* Card is SD V2.0 compliant */
2146:../src/sdcard.c ****     errorstatus = SD_OK;
2147:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_CMDREND);
2148:../src/sdcard.c ****     return(errorstatus);
2149:../src/sdcard.c ****   }
2150:../src/sdcard.c ****   return(errorstatus);
2151:../src/sdcard.c **** }
2152:../src/sdcard.c **** 
2153:../src/sdcard.c **** /*******************************************************************************
2154:../src/sdcard.c **** * Function Name  : CmdResp1Error
2155:../src/sdcard.c **** * Description    : Checks for error conditions for R1.
2156:../src/sdcard.c **** *                  response
2157:../src/sdcard.c **** * Input          : cmd: The sent command index.
2158:../src/sdcard.c **** * Output         : None
2159:../src/sdcard.c **** * Return         : SD_Error: SD Card Error code.
2160:../src/sdcard.c **** *******************************************************************************/
2161:../src/sdcard.c **** static SD_Error CmdResp1Error(uint8_t cmd)
2162:../src/sdcard.c **** {
2163:../src/sdcard.c ****   SD_Error errorstatus = SD_OK;
2164:../src/sdcard.c ****   uint32_t status;
2165:../src/sdcard.c ****   uint32_t response_r1;
2166:../src/sdcard.c **** 
2167:../src/sdcard.c ****   status = SDIO->STA;
2168:../src/sdcard.c **** 
2169:../src/sdcard.c ****   while (!(status & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT)))
2170:../src/sdcard.c ****   {
2171:../src/sdcard.c ****     status = SDIO->STA;
2172:../src/sdcard.c ****   }
2173:../src/sdcard.c **** 
2174:../src/sdcard.c ****   if (status & SDIO_FLAG_CTIMEOUT)
2175:../src/sdcard.c ****   {
2176:../src/sdcard.c ****     errorstatus = SD_CMD_RSP_TIMEOUT;
2177:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_CTIMEOUT);
2178:../src/sdcard.c ****     return(errorstatus);
2179:../src/sdcard.c ****   }
2180:../src/sdcard.c ****   else if (status & SDIO_FLAG_CCRCFAIL)
2181:../src/sdcard.c ****   {
2182:../src/sdcard.c ****     errorstatus = SD_CMD_CRC_FAIL;
2183:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_CCRCFAIL);
2184:../src/sdcard.c ****     return(errorstatus);
2185:../src/sdcard.c ****   }
2186:../src/sdcard.c **** 
2187:../src/sdcard.c ****   /* Check response received is of desired command */
2188:../src/sdcard.c ****   if (SDIO_GetCommandResponse() != cmd)
2189:../src/sdcard.c ****   {
2190:../src/sdcard.c ****     errorstatus = SD_ILLEGAL_CMD;
2191:../src/sdcard.c ****     return(errorstatus);
2192:../src/sdcard.c ****   }
2193:../src/sdcard.c **** 
2194:../src/sdcard.c ****   /* Clear all the static flags */
2195:../src/sdcard.c ****   SDIO_ClearFlag(SDIO_STATIC_FLAGS);
2196:../src/sdcard.c **** 
2197:../src/sdcard.c ****   /* We have received response, retrieve it for analysis  */
2198:../src/sdcard.c ****   response_r1 = SDIO_GetResponse(SDIO_RESP1);
2199:../src/sdcard.c **** 
2200:../src/sdcard.c ****   if ((response_r1 & SD_OCR_ERRORBITS) == SD_ALLZERO)
2201:../src/sdcard.c ****   {
2202:../src/sdcard.c ****     return(errorstatus);
2203:../src/sdcard.c ****   }
2204:../src/sdcard.c **** 
2205:../src/sdcard.c ****   if (response_r1 & SD_OCR_ADDR_OUT_OF_RANGE)
2206:../src/sdcard.c ****   {
2207:../src/sdcard.c ****     return(SD_ADDR_OUT_OF_RANGE);
2208:../src/sdcard.c ****   }
2209:../src/sdcard.c **** 
2210:../src/sdcard.c ****   if (response_r1 & SD_OCR_ADDR_MISALIGNED)
2211:../src/sdcard.c ****   {
2212:../src/sdcard.c ****     return(SD_ADDR_MISALIGNED);
2213:../src/sdcard.c ****   }
2214:../src/sdcard.c **** 
2215:../src/sdcard.c ****   if (response_r1 & SD_OCR_BLOCK_LEN_ERR)
2216:../src/sdcard.c ****   {
2217:../src/sdcard.c ****     return(SD_BLOCK_LEN_ERR);
2218:../src/sdcard.c ****   }
2219:../src/sdcard.c **** 
2220:../src/sdcard.c ****   if (response_r1 & SD_OCR_ERASE_SEQ_ERR)
2221:../src/sdcard.c ****   {
2222:../src/sdcard.c ****     return(SD_ERASE_SEQ_ERR);
2223:../src/sdcard.c ****   }
2224:../src/sdcard.c **** 
2225:../src/sdcard.c ****   if (response_r1 & SD_OCR_BAD_ERASE_PARAM)
2226:../src/sdcard.c ****   {
2227:../src/sdcard.c ****     return(SD_BAD_ERASE_PARAM);
2228:../src/sdcard.c ****   }
2229:../src/sdcard.c **** 
2230:../src/sdcard.c ****   if (response_r1 & SD_OCR_WRITE_PROT_VIOLATION)
2231:../src/sdcard.c ****   {
2232:../src/sdcard.c ****     return(SD_WRITE_PROT_VIOLATION);
2233:../src/sdcard.c ****   }
2234:../src/sdcard.c **** 
2235:../src/sdcard.c ****   if (response_r1 & SD_OCR_LOCK_UNLOCK_FAILED)
2236:../src/sdcard.c ****   {
2237:../src/sdcard.c ****     return(SD_LOCK_UNLOCK_FAILED);
2238:../src/sdcard.c ****   }
2239:../src/sdcard.c **** 
2240:../src/sdcard.c ****   if (response_r1 & SD_OCR_COM_CRC_FAILED)
2241:../src/sdcard.c ****   {
2242:../src/sdcard.c ****     return(SD_COM_CRC_FAILED);
2243:../src/sdcard.c ****   }
2244:../src/sdcard.c **** 
2245:../src/sdcard.c ****   if (response_r1 & SD_OCR_ILLEGAL_CMD)
2246:../src/sdcard.c ****   {
2247:../src/sdcard.c ****     return(SD_ILLEGAL_CMD);
2248:../src/sdcard.c ****   }
2249:../src/sdcard.c **** 
2250:../src/sdcard.c ****   if (response_r1 & SD_OCR_CARD_ECC_FAILED)
2251:../src/sdcard.c ****   {
2252:../src/sdcard.c ****     return(SD_CARD_ECC_FAILED);
2253:../src/sdcard.c ****   }
2254:../src/sdcard.c **** 
2255:../src/sdcard.c ****   if (response_r1 & SD_OCR_CC_ERROR)
2256:../src/sdcard.c ****   {
2257:../src/sdcard.c ****     return(SD_CC_ERROR);
2258:../src/sdcard.c ****   }
2259:../src/sdcard.c **** 
2260:../src/sdcard.c ****   if (response_r1 & SD_OCR_GENERAL_UNKNOWN_ERROR)
2261:../src/sdcard.c ****   {
2262:../src/sdcard.c ****     return(SD_GENERAL_UNKNOWN_ERROR);
2263:../src/sdcard.c ****   }
2264:../src/sdcard.c **** 
2265:../src/sdcard.c ****   if (response_r1 & SD_OCR_STREAM_READ_UNDERRUN)
2266:../src/sdcard.c ****   {
2267:../src/sdcard.c ****     return(SD_STREAM_READ_UNDERRUN);
2268:../src/sdcard.c ****   }
2269:../src/sdcard.c **** 
2270:../src/sdcard.c ****   if (response_r1 & SD_OCR_STREAM_WRITE_OVERRUN)
2271:../src/sdcard.c ****   {
2272:../src/sdcard.c ****     return(SD_STREAM_WRITE_OVERRUN);
2273:../src/sdcard.c ****   }
2274:../src/sdcard.c **** 
2275:../src/sdcard.c ****   if (response_r1 & SD_OCR_CID_CSD_OVERWRIETE)
2276:../src/sdcard.c ****   {
2277:../src/sdcard.c ****     return(SD_CID_CSD_OVERWRITE);
2278:../src/sdcard.c ****   }
2279:../src/sdcard.c **** 
2280:../src/sdcard.c ****   if (response_r1 & SD_OCR_WP_ERASE_SKIP)
2281:../src/sdcard.c ****   {
2282:../src/sdcard.c ****     return(SD_WP_ERASE_SKIP);
2283:../src/sdcard.c ****   }
2284:../src/sdcard.c **** 
2285:../src/sdcard.c ****   if (response_r1 & SD_OCR_CARD_ECC_DISABLED)
2286:../src/sdcard.c ****   {
2287:../src/sdcard.c ****     return(SD_CARD_ECC_DISABLED);
2288:../src/sdcard.c ****   }
2289:../src/sdcard.c **** 
2290:../src/sdcard.c ****   if (response_r1 & SD_OCR_ERASE_RESET)
2291:../src/sdcard.c ****   {
2292:../src/sdcard.c ****     return(SD_ERASE_RESET);
2293:../src/sdcard.c ****   }
2294:../src/sdcard.c **** 
2295:../src/sdcard.c ****   if (response_r1 & SD_OCR_AKE_SEQ_ERROR)
2296:../src/sdcard.c ****   {
2297:../src/sdcard.c ****     return(SD_AKE_SEQ_ERROR);
2298:../src/sdcard.c ****   }
2299:../src/sdcard.c ****   return(errorstatus);
2300:../src/sdcard.c **** }
2301:../src/sdcard.c **** 
2302:../src/sdcard.c **** /*******************************************************************************
2303:../src/sdcard.c **** * Function Name  : CmdResp3Error
2304:../src/sdcard.c **** * Description    : Checks for error conditions for R3 (OCR).
2305:../src/sdcard.c **** *                  response.
2306:../src/sdcard.c **** * Input          : None
2307:../src/sdcard.c **** * Output         : None
2308:../src/sdcard.c **** * Return         : SD_Error: SD Card Error code.
2309:../src/sdcard.c **** *******************************************************************************/
2310:../src/sdcard.c **** static SD_Error CmdResp3Error(void)
2311:../src/sdcard.c **** {
2312:../src/sdcard.c ****   SD_Error errorstatus = SD_OK;
2313:../src/sdcard.c ****   uint32_t status;
2314:../src/sdcard.c **** 
2315:../src/sdcard.c ****   status = SDIO->STA;
2316:../src/sdcard.c **** 
2317:../src/sdcard.c ****   while (!(status & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT)))
2318:../src/sdcard.c ****   {
2319:../src/sdcard.c ****     status = SDIO->STA;
2320:../src/sdcard.c ****   }
2321:../src/sdcard.c **** 
2322:../src/sdcard.c ****   if (status & SDIO_FLAG_CTIMEOUT)
2323:../src/sdcard.c ****   {
2324:../src/sdcard.c ****     errorstatus = SD_CMD_RSP_TIMEOUT;
2325:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_CTIMEOUT);
2326:../src/sdcard.c ****     return(errorstatus);
2327:../src/sdcard.c ****   }
2328:../src/sdcard.c ****   /* Clear all the static flags */
2329:../src/sdcard.c ****   SDIO_ClearFlag(SDIO_STATIC_FLAGS);
2330:../src/sdcard.c ****   return(errorstatus);
2331:../src/sdcard.c **** }
2332:../src/sdcard.c **** 
2333:../src/sdcard.c **** /*******************************************************************************
2334:../src/sdcard.c **** * Function Name  : CmdResp2Error
2335:../src/sdcard.c **** * Description    : Checks for error conditions for R2 (CID or CSD).
2336:../src/sdcard.c **** *                  response.
2337:../src/sdcard.c **** * Input          : None
2338:../src/sdcard.c **** * Output         : None
2339:../src/sdcard.c **** * Return         : SD_Error: SD Card Error code.
2340:../src/sdcard.c **** *******************************************************************************/
2341:../src/sdcard.c **** static SD_Error CmdResp2Error(void)
2342:../src/sdcard.c **** {
2343:../src/sdcard.c ****   SD_Error errorstatus = SD_OK;
2344:../src/sdcard.c ****   uint32_t status;
2345:../src/sdcard.c **** 
2346:../src/sdcard.c ****   status = SDIO->STA;
2347:../src/sdcard.c **** 
2348:../src/sdcard.c ****   while (!(status & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CTIMEOUT | SDIO_FLAG_CMDREND)))
2349:../src/sdcard.c ****   {
2350:../src/sdcard.c ****     status = SDIO->STA;
2351:../src/sdcard.c ****   }
2352:../src/sdcard.c **** 
2353:../src/sdcard.c ****   if (status & SDIO_FLAG_CTIMEOUT)
2354:../src/sdcard.c ****   {
2355:../src/sdcard.c ****     errorstatus = SD_CMD_RSP_TIMEOUT;
2356:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_CTIMEOUT);
2357:../src/sdcard.c ****     return(errorstatus);
2358:../src/sdcard.c ****   }
2359:../src/sdcard.c ****   else if (status & SDIO_FLAG_CCRCFAIL)
2360:../src/sdcard.c ****   {
2361:../src/sdcard.c ****     errorstatus = SD_CMD_CRC_FAIL;
2362:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_CCRCFAIL);
2363:../src/sdcard.c ****     return(errorstatus);
2364:../src/sdcard.c ****   }
2365:../src/sdcard.c **** 
2366:../src/sdcard.c ****   /* Clear all the static flags */
2367:../src/sdcard.c ****   SDIO_ClearFlag(SDIO_STATIC_FLAGS);
2368:../src/sdcard.c **** 
2369:../src/sdcard.c ****   return(errorstatus);
2370:../src/sdcard.c **** }
2371:../src/sdcard.c **** 
2372:../src/sdcard.c **** /*******************************************************************************
2373:../src/sdcard.c **** * Function Name  : CmdResp6Error
2374:../src/sdcard.c **** * Description    : Checks for error conditions for R6 (RCA).
2375:../src/sdcard.c **** *                  response.
2376:../src/sdcard.c **** * Input          : - cmd: The sent command index.
2377:../src/sdcard.c **** *                  - prca: pointer to the variable that will contain the SD
2378:../src/sdcard.c **** *                    card relative address RCA. 
2379:../src/sdcard.c **** * Output         : None
2380:../src/sdcard.c **** * Return         : SD_Error: SD Card Error code.
2381:../src/sdcard.c **** *******************************************************************************/
2382:../src/sdcard.c **** static SD_Error CmdResp6Error(uint8_t cmd, uint16_t *prca)
2383:../src/sdcard.c **** {
2384:../src/sdcard.c ****   SD_Error errorstatus = SD_OK;
2385:../src/sdcard.c ****   uint32_t status;
2386:../src/sdcard.c ****   uint32_t response_r1;
2387:../src/sdcard.c **** 
2388:../src/sdcard.c ****   status = SDIO->STA;
2389:../src/sdcard.c **** 
2390:../src/sdcard.c ****   while (!(status & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CTIMEOUT | SDIO_FLAG_CMDREND)))
2391:../src/sdcard.c ****   {
2392:../src/sdcard.c ****     status = SDIO->STA;
2393:../src/sdcard.c ****   }
2394:../src/sdcard.c **** 
2395:../src/sdcard.c ****   if (status & SDIO_FLAG_CTIMEOUT)
2396:../src/sdcard.c ****   {
2397:../src/sdcard.c ****     errorstatus = SD_CMD_RSP_TIMEOUT;
2398:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_CTIMEOUT);
2399:../src/sdcard.c ****     return(errorstatus);
2400:../src/sdcard.c ****   }
2401:../src/sdcard.c ****   else if (status & SDIO_FLAG_CCRCFAIL)
2402:../src/sdcard.c ****   {
2403:../src/sdcard.c ****     errorstatus = SD_CMD_CRC_FAIL;
2404:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_CCRCFAIL);
2405:../src/sdcard.c ****     return(errorstatus);
2406:../src/sdcard.c ****   }
2407:../src/sdcard.c **** 
2408:../src/sdcard.c ****   /* Check response received is of desired command */
2409:../src/sdcard.c ****   if (SDIO_GetCommandResponse() != cmd)
2410:../src/sdcard.c ****   {
2411:../src/sdcard.c ****     errorstatus = SD_ILLEGAL_CMD;
2412:../src/sdcard.c ****     return(errorstatus);
2413:../src/sdcard.c ****   }
2414:../src/sdcard.c **** 
2415:../src/sdcard.c ****   /* Clear all the static flags */
2416:../src/sdcard.c ****   SDIO_ClearFlag(SDIO_STATIC_FLAGS);
2417:../src/sdcard.c **** 
2418:../src/sdcard.c ****   /* We have received response, retrieve it.  */
2419:../src/sdcard.c ****   response_r1 = SDIO_GetResponse(SDIO_RESP1);
2420:../src/sdcard.c **** 
2421:../src/sdcard.c ****   if (SD_ALLZERO == (response_r1 & (SD_R6_GENERAL_UNKNOWN_ERROR | SD_R6_ILLEGAL_CMD | SD_R6_COM_CRC
2422:../src/sdcard.c ****   {
2423:../src/sdcard.c ****     *prca = (uint16_t) (response_r1 >> 16);
2424:../src/sdcard.c ****     return(errorstatus);
2425:../src/sdcard.c ****   }
2426:../src/sdcard.c **** 
2427:../src/sdcard.c ****   if (response_r1 & SD_R6_GENERAL_UNKNOWN_ERROR)
2428:../src/sdcard.c ****   {
2429:../src/sdcard.c ****     return(SD_GENERAL_UNKNOWN_ERROR);
2430:../src/sdcard.c ****   }
2431:../src/sdcard.c **** 
2432:../src/sdcard.c ****   if (response_r1 & SD_R6_ILLEGAL_CMD)
2433:../src/sdcard.c ****   {
2434:../src/sdcard.c ****     return(SD_ILLEGAL_CMD);
2435:../src/sdcard.c ****   }
2436:../src/sdcard.c **** 
2437:../src/sdcard.c ****   if (response_r1 & SD_R6_COM_CRC_FAILED)
2438:../src/sdcard.c ****   {
2439:../src/sdcard.c ****     return(SD_COM_CRC_FAILED);
2440:../src/sdcard.c ****   }
2441:../src/sdcard.c **** 
2442:../src/sdcard.c ****   return(errorstatus);
2443:../src/sdcard.c **** }
2444:../src/sdcard.c **** 
2445:../src/sdcard.c **** /*******************************************************************************
2446:../src/sdcard.c **** * Function Name  : SDEnWideBus
2447:../src/sdcard.c **** * Description    : Enables or disables the SDIO wide bus mode.
2448:../src/sdcard.c **** * Input          : NewState: new state of the SDIO wide bus mode.
2449:../src/sdcard.c **** *                  This parameter can be: ENABLE or DISABLE.
2450:../src/sdcard.c **** * Output         : None
2451:../src/sdcard.c **** * Return         : SD_Error: SD Card Error code.
2452:../src/sdcard.c **** *******************************************************************************/
2453:../src/sdcard.c **** static SD_Error SDEnWideBus(FunctionalState NewState)
2454:../src/sdcard.c **** {
2455:../src/sdcard.c ****   SD_Error errorstatus = SD_OK;
2456:../src/sdcard.c **** 
2457:../src/sdcard.c ****   uint32_t scr[2] = {0, 0};
2458:../src/sdcard.c **** 
2459:../src/sdcard.c ****   if (SDIO_GetResponse(SDIO_RESP1) & SD_CARD_LOCKED)
2460:../src/sdcard.c ****   {
2461:../src/sdcard.c ****     errorstatus = SD_LOCK_UNLOCK_FAILED;
2462:../src/sdcard.c ****     return(errorstatus);
2463:../src/sdcard.c ****   }
2464:../src/sdcard.c **** 
2465:../src/sdcard.c ****   /* Get SCR Register */
2466:../src/sdcard.c ****   errorstatus = FindSCR(RCA, scr);
2467:../src/sdcard.c **** 
2468:../src/sdcard.c ****   if (errorstatus != SD_OK)
2469:../src/sdcard.c ****   {
2470:../src/sdcard.c ****     return(errorstatus);
2471:../src/sdcard.c ****   }
2472:../src/sdcard.c **** 
2473:../src/sdcard.c ****   /* If wide bus operation to be enabled */
2474:../src/sdcard.c ****   if (NewState == ENABLE)
2475:../src/sdcard.c ****   {
2476:../src/sdcard.c ****     /* If requested card supports wide bus operation */
2477:../src/sdcard.c ****     if ((scr[1] & SD_WIDE_BUS_SUPPORT) != SD_ALLZERO)
2478:../src/sdcard.c ****     {
2479:../src/sdcard.c ****       /* Send CMD55 APP_CMD with argument as card's RCA.*/
2480:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) RCA << 16;
2481:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_APP_CMD;
2482:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
2483:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
2484:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
2485:../src/sdcard.c ****       SDIO_SendCommand(&SDIO_CmdInitStructure);
2486:../src/sdcard.c **** 
2487:../src/sdcard.c ****       errorstatus = CmdResp1Error(SDIO_APP_CMD);
2488:../src/sdcard.c **** 
2489:../src/sdcard.c ****       if (errorstatus != SD_OK)
2490:../src/sdcard.c ****       {
2491:../src/sdcard.c ****         return(errorstatus);
2492:../src/sdcard.c ****       }
2493:../src/sdcard.c **** 
2494:../src/sdcard.c ****       /* Send ACMD6 APP_CMD with argument as 2 for wide bus mode */
2495:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Argument = 0x2;
2496:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_APP_SD_SET_BUSWIDTH;
2497:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
2498:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
2499:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
2500:../src/sdcard.c ****       SDIO_SendCommand(&SDIO_CmdInitStructure);
2501:../src/sdcard.c **** 
2502:../src/sdcard.c ****       errorstatus = CmdResp1Error(SDIO_APP_SD_SET_BUSWIDTH);
2503:../src/sdcard.c **** 
2504:../src/sdcard.c ****       if (errorstatus != SD_OK)
2505:../src/sdcard.c ****       {
2506:../src/sdcard.c ****         return(errorstatus);
2507:../src/sdcard.c ****       }
2508:../src/sdcard.c ****       return(errorstatus);
2509:../src/sdcard.c ****     }
2510:../src/sdcard.c ****     else
2511:../src/sdcard.c ****     {
2512:../src/sdcard.c ****       errorstatus = SD_REQUEST_NOT_APPLICABLE;
2513:../src/sdcard.c ****       return(errorstatus);
2514:../src/sdcard.c ****     }
2515:../src/sdcard.c ****   }   /* If wide bus operation to be disabled */
2516:../src/sdcard.c ****   else
2517:../src/sdcard.c ****   {
2518:../src/sdcard.c ****     /* If requested card supports 1 bit mode operation */
2519:../src/sdcard.c ****     if ((scr[1] & SD_SINGLE_BUS_SUPPORT) != SD_ALLZERO)
2520:../src/sdcard.c ****     {
2521:../src/sdcard.c ****       /* Send CMD55 APP_CMD with argument as card's RCA.*/
2522:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) RCA << 16;
2523:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_APP_CMD;
2524:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
2525:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
2526:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
2527:../src/sdcard.c ****       SDIO_SendCommand(&SDIO_CmdInitStructure);
2528:../src/sdcard.c **** 
2529:../src/sdcard.c **** 
2530:../src/sdcard.c ****       errorstatus = CmdResp1Error(SDIO_APP_CMD);
2531:../src/sdcard.c **** 
2532:../src/sdcard.c ****       if (errorstatus != SD_OK)
2533:../src/sdcard.c ****       {
2534:../src/sdcard.c ****         return(errorstatus);
2535:../src/sdcard.c ****       }
2536:../src/sdcard.c **** 
2537:../src/sdcard.c ****       /* Send ACMD6 APP_CMD with argument as 2 for wide bus mode */
2538:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Argument = 0x00;
2539:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_APP_SD_SET_BUSWIDTH;
2540:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
2541:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
2542:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
2543:../src/sdcard.c ****       SDIO_SendCommand(&SDIO_CmdInitStructure);
2544:../src/sdcard.c **** 
2545:../src/sdcard.c ****       errorstatus = CmdResp1Error(SDIO_APP_SD_SET_BUSWIDTH);
2546:../src/sdcard.c **** 
2547:../src/sdcard.c ****       if (errorstatus != SD_OK)
2548:../src/sdcard.c ****       {
2549:../src/sdcard.c ****         return(errorstatus);
2550:../src/sdcard.c ****       }
2551:../src/sdcard.c **** 
2552:../src/sdcard.c ****       return(errorstatus);
2553:../src/sdcard.c ****     }
2554:../src/sdcard.c ****     else
2555:../src/sdcard.c ****     {
2556:../src/sdcard.c ****       errorstatus = SD_REQUEST_NOT_APPLICABLE;
2557:../src/sdcard.c ****       return(errorstatus);
2558:../src/sdcard.c ****     }
2559:../src/sdcard.c ****   }
2560:../src/sdcard.c **** }
2561:../src/sdcard.c **** 
2562:../src/sdcard.c **** /*******************************************************************************
2563:../src/sdcard.c **** * Function Name  : IsCardProgramming
2564:../src/sdcard.c **** * Description    : Checks if the SD card is in programming state.
2565:../src/sdcard.c **** * Input          : pstatus: pointer to the variable that will contain the SD
2566:../src/sdcard.c **** *                  card state.
2567:../src/sdcard.c **** * Output         : None
2568:../src/sdcard.c **** * Return         : SD_Error: SD Card Error code.
2569:../src/sdcard.c **** *******************************************************************************/
2570:../src/sdcard.c **** static SD_Error IsCardProgramming(uint8_t *pstatus)
2571:../src/sdcard.c **** {
2572:../src/sdcard.c ****   SD_Error errorstatus = SD_OK;
2573:../src/sdcard.c ****   __IO uint32_t respR1 = 0, status = 0;
2574:../src/sdcard.c **** 
2575:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) RCA << 16;
2576:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SEND_STATUS;
2577:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
2578:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
2579:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
2580:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
2581:../src/sdcard.c **** 
2582:../src/sdcard.c ****   status = SDIO->STA;
2583:../src/sdcard.c ****   while (!(status & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT)))
2584:../src/sdcard.c ****   {
2585:../src/sdcard.c ****     status = SDIO->STA;
2586:../src/sdcard.c ****   }
2587:../src/sdcard.c **** 
2588:../src/sdcard.c ****   if (status & SDIO_FLAG_CTIMEOUT)
2589:../src/sdcard.c ****   {
2590:../src/sdcard.c ****     errorstatus = SD_CMD_RSP_TIMEOUT;
2591:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_CTIMEOUT);
2592:../src/sdcard.c ****     return(errorstatus);
2593:../src/sdcard.c ****   }
2594:../src/sdcard.c ****   else if (status & SDIO_FLAG_CCRCFAIL)
2595:../src/sdcard.c ****   {
2596:../src/sdcard.c ****     errorstatus = SD_CMD_CRC_FAIL;
2597:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_CCRCFAIL);
2598:../src/sdcard.c ****     return(errorstatus);
2599:../src/sdcard.c ****   }
2600:../src/sdcard.c **** 
2601:../src/sdcard.c ****   status = (uint32_t)SDIO_GetCommandResponse();
2602:../src/sdcard.c **** 
2603:../src/sdcard.c ****   /* Check response received is of desired command */
2604:../src/sdcard.c ****   if (status != SDIO_SEND_STATUS)
2605:../src/sdcard.c ****   {
2606:../src/sdcard.c ****     errorstatus = SD_ILLEGAL_CMD;
2607:../src/sdcard.c ****     return(errorstatus);
2608:../src/sdcard.c ****   }
2609:../src/sdcard.c **** 
2610:../src/sdcard.c ****   /* Clear all the static flags */
2611:../src/sdcard.c ****   SDIO_ClearFlag(SDIO_STATIC_FLAGS);
2612:../src/sdcard.c **** 
2613:../src/sdcard.c **** 
2614:../src/sdcard.c ****   /* We have received response, retrieve it for analysis  */
2615:../src/sdcard.c ****   respR1 = SDIO_GetResponse(SDIO_RESP1);
2616:../src/sdcard.c **** 
2617:../src/sdcard.c ****   /* Find out card status */
2618:../src/sdcard.c ****   *pstatus = (uint8_t) ((respR1 >> 9) & 0x0000000F);
2619:../src/sdcard.c **** 
2620:../src/sdcard.c ****   if ((respR1 & SD_OCR_ERRORBITS) == SD_ALLZERO)
2621:../src/sdcard.c ****   {
2622:../src/sdcard.c ****     return(errorstatus);
2623:../src/sdcard.c ****   }
2624:../src/sdcard.c **** 
2625:../src/sdcard.c ****   if (respR1 & SD_OCR_ADDR_OUT_OF_RANGE)
2626:../src/sdcard.c ****   {
2627:../src/sdcard.c ****     return(SD_ADDR_OUT_OF_RANGE);
2628:../src/sdcard.c ****   }
2629:../src/sdcard.c **** 
2630:../src/sdcard.c ****   if (respR1 & SD_OCR_ADDR_MISALIGNED)
2631:../src/sdcard.c ****   {
2632:../src/sdcard.c ****     return(SD_ADDR_MISALIGNED);
2633:../src/sdcard.c ****   }
2634:../src/sdcard.c **** 
2635:../src/sdcard.c ****   if (respR1 & SD_OCR_BLOCK_LEN_ERR)
2636:../src/sdcard.c ****   {
2637:../src/sdcard.c ****     return(SD_BLOCK_LEN_ERR);
2638:../src/sdcard.c ****   }
2639:../src/sdcard.c **** 
2640:../src/sdcard.c ****   if (respR1 & SD_OCR_ERASE_SEQ_ERR)
2641:../src/sdcard.c ****   {
2642:../src/sdcard.c ****     return(SD_ERASE_SEQ_ERR);
2643:../src/sdcard.c ****   }
2644:../src/sdcard.c **** 
2645:../src/sdcard.c ****   if (respR1 & SD_OCR_BAD_ERASE_PARAM)
2646:../src/sdcard.c ****   {
2647:../src/sdcard.c ****     return(SD_BAD_ERASE_PARAM);
2648:../src/sdcard.c ****   }
2649:../src/sdcard.c **** 
2650:../src/sdcard.c ****   if (respR1 & SD_OCR_WRITE_PROT_VIOLATION)
2651:../src/sdcard.c ****   {
2652:../src/sdcard.c ****     return(SD_WRITE_PROT_VIOLATION);
2653:../src/sdcard.c ****   }
2654:../src/sdcard.c **** 
2655:../src/sdcard.c ****   if (respR1 & SD_OCR_LOCK_UNLOCK_FAILED)
2656:../src/sdcard.c ****   {
2657:../src/sdcard.c ****     return(SD_LOCK_UNLOCK_FAILED);
2658:../src/sdcard.c ****   }
2659:../src/sdcard.c **** 
2660:../src/sdcard.c ****   if (respR1 & SD_OCR_COM_CRC_FAILED)
2661:../src/sdcard.c ****   {
2662:../src/sdcard.c ****     return(SD_COM_CRC_FAILED);
2663:../src/sdcard.c ****   }
2664:../src/sdcard.c **** 
2665:../src/sdcard.c ****   if (respR1 & SD_OCR_ILLEGAL_CMD)
2666:../src/sdcard.c ****   {
2667:../src/sdcard.c ****     return(SD_ILLEGAL_CMD);
2668:../src/sdcard.c ****   }
2669:../src/sdcard.c **** 
2670:../src/sdcard.c ****   if (respR1 & SD_OCR_CARD_ECC_FAILED)
2671:../src/sdcard.c ****   {
2672:../src/sdcard.c ****     return(SD_CARD_ECC_FAILED);
2673:../src/sdcard.c ****   }
2674:../src/sdcard.c **** 
2675:../src/sdcard.c ****   if (respR1 & SD_OCR_CC_ERROR)
2676:../src/sdcard.c ****   {
2677:../src/sdcard.c ****     return(SD_CC_ERROR);
2678:../src/sdcard.c ****   }
2679:../src/sdcard.c **** 
2680:../src/sdcard.c ****   if (respR1 & SD_OCR_GENERAL_UNKNOWN_ERROR)
2681:../src/sdcard.c ****   {
2682:../src/sdcard.c ****     return(SD_GENERAL_UNKNOWN_ERROR);
2683:../src/sdcard.c ****   }
2684:../src/sdcard.c **** 
2685:../src/sdcard.c ****   if (respR1 & SD_OCR_STREAM_READ_UNDERRUN)
2686:../src/sdcard.c ****   {
2687:../src/sdcard.c ****     return(SD_STREAM_READ_UNDERRUN);
2688:../src/sdcard.c ****   }
2689:../src/sdcard.c **** 
2690:../src/sdcard.c ****   if (respR1 & SD_OCR_STREAM_WRITE_OVERRUN)
2691:../src/sdcard.c ****   {
2692:../src/sdcard.c ****     return(SD_STREAM_WRITE_OVERRUN);
2693:../src/sdcard.c ****   }
2694:../src/sdcard.c **** 
2695:../src/sdcard.c ****   if (respR1 & SD_OCR_CID_CSD_OVERWRIETE)
2696:../src/sdcard.c ****   {
2697:../src/sdcard.c ****     return(SD_CID_CSD_OVERWRITE);
2698:../src/sdcard.c ****   }
2699:../src/sdcard.c **** 
2700:../src/sdcard.c ****   if (respR1 & SD_OCR_WP_ERASE_SKIP)
2701:../src/sdcard.c ****   {
2702:../src/sdcard.c ****     return(SD_WP_ERASE_SKIP);
2703:../src/sdcard.c ****   }
2704:../src/sdcard.c **** 
2705:../src/sdcard.c ****   if (respR1 & SD_OCR_CARD_ECC_DISABLED)
2706:../src/sdcard.c ****   {
2707:../src/sdcard.c ****     return(SD_CARD_ECC_DISABLED);
2708:../src/sdcard.c ****   }
2709:../src/sdcard.c **** 
2710:../src/sdcard.c ****   if (respR1 & SD_OCR_ERASE_RESET)
2711:../src/sdcard.c ****   {
2712:../src/sdcard.c ****     return(SD_ERASE_RESET);
2713:../src/sdcard.c ****   }
2714:../src/sdcard.c **** 
2715:../src/sdcard.c ****   if (respR1 & SD_OCR_AKE_SEQ_ERROR)
2716:../src/sdcard.c ****   {
2717:../src/sdcard.c ****     return(SD_AKE_SEQ_ERROR);
2718:../src/sdcard.c ****   }
2719:../src/sdcard.c **** 
2720:../src/sdcard.c ****   return(errorstatus);
2721:../src/sdcard.c **** }
2722:../src/sdcard.c **** 
2723:../src/sdcard.c **** /*******************************************************************************
2724:../src/sdcard.c **** * Function Name  : FindSCR
2725:../src/sdcard.c **** * Description    : Find the SD card SCR register value.
2726:../src/sdcard.c **** * Input          : - rca: selected card address.
2727:../src/sdcard.c **** *                  - pscr: pointer to the buffer that will contain the SCR value.
2728:../src/sdcard.c **** * Output         : None
2729:../src/sdcard.c **** * Return         : SD_Error: SD Card Error code.
2730:../src/sdcard.c **** *******************************************************************************/
2731:../src/sdcard.c **** static SD_Error FindSCR(uint16_t rca, uint32_t *pscr)
2732:../src/sdcard.c **** {
2733:../src/sdcard.c ****   uint32_t index = 0;
2734:../src/sdcard.c ****   SD_Error errorstatus = SD_OK;
2735:../src/sdcard.c ****   uint32_t tempscr[2] = {0, 0};
2736:../src/sdcard.c **** 
2737:../src/sdcard.c ****   /* Set Block Size To 8 Bytes */
2738:../src/sdcard.c ****   /* Send CMD55 APP_CMD with argument as card's RCA */
2739:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = (uint32_t)8;
2740:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SET_BLOCKLEN;
2741:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
2742:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
2743:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
2744:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
2745:../src/sdcard.c **** 
2746:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_SET_BLOCKLEN);
2747:../src/sdcard.c **** 
2748:../src/sdcard.c ****   if (errorstatus != SD_OK)
2749:../src/sdcard.c ****   {
2750:../src/sdcard.c ****     return(errorstatus);
2751:../src/sdcard.c ****   }
2752:../src/sdcard.c **** 
2753:../src/sdcard.c ****   /* Send CMD55 APP_CMD with argument as card's RCA */
2754:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) RCA << 16;
2755:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_APP_CMD;
2756:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
2757:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
2758:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
2759:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
2760:../src/sdcard.c **** 
2761:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_APP_CMD);
2762:../src/sdcard.c **** 
2763:../src/sdcard.c ****   if (errorstatus != SD_OK)
2764:../src/sdcard.c ****   {
2765:../src/sdcard.c ****     return(errorstatus);
2766:../src/sdcard.c ****   }
2767:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
2768:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataLength = 8;
2769:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataBlockSize = SDIO_DataBlockSize_8b;
2770:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferDir = SDIO_TransferDir_ToSDIO;
2771:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferMode = SDIO_TransferMode_Block;
2772:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DPSM = SDIO_DPSM_Enable;
2773:../src/sdcard.c ****   SDIO_DataConfig(&SDIO_DataInitStructure);
2774:../src/sdcard.c **** 
2775:../src/sdcard.c **** 
2776:../src/sdcard.c ****   /* Send ACMD51 SD_APP_SEND_SCR with argument as 0 */
2777:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = 0x0;
2778:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SD_APP_SEND_SCR;
2779:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
2780:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
2781:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
2782:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
2783:../src/sdcard.c **** 
2784:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_SD_APP_SEND_SCR);
2785:../src/sdcard.c **** 
2786:../src/sdcard.c ****   if (errorstatus != SD_OK)
2787:../src/sdcard.c ****   {
2788:../src/sdcard.c ****     return(errorstatus);
2789:../src/sdcard.c ****   }
2790:../src/sdcard.c **** 
2791:../src/sdcard.c ****   while (!(SDIO->STA & (SDIO_FLAG_RXOVERR | SDIO_FLAG_DCRCFAIL | SDIO_FLAG_DTIMEOUT | SDIO_FLAG_DBC
2792:../src/sdcard.c ****   {
2793:../src/sdcard.c ****     if (SDIO_GetFlagStatus(SDIO_FLAG_RXDAVL) != RESET)
2794:../src/sdcard.c ****     {
2795:../src/sdcard.c ****       *(tempscr + index) = SDIO_ReadData();
2796:../src/sdcard.c ****       index++;
2797:../src/sdcard.c ****     }
2798:../src/sdcard.c ****   }
2799:../src/sdcard.c **** 
2800:../src/sdcard.c ****   if (SDIO_GetFlagStatus(SDIO_FLAG_DTIMEOUT) != RESET)
2801:../src/sdcard.c ****   {
2802:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_DTIMEOUT);
2803:../src/sdcard.c ****     errorstatus = SD_DATA_TIMEOUT;
2804:../src/sdcard.c ****     return(errorstatus);
2805:../src/sdcard.c ****   }
2806:../src/sdcard.c ****   else if (SDIO_GetFlagStatus(SDIO_FLAG_DCRCFAIL) != RESET)
2807:../src/sdcard.c ****   {
2808:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_DCRCFAIL);
2809:../src/sdcard.c ****     errorstatus = SD_DATA_CRC_FAIL;
2810:../src/sdcard.c ****     return(errorstatus);
2811:../src/sdcard.c ****   }
2812:../src/sdcard.c ****   else if (SDIO_GetFlagStatus(SDIO_FLAG_RXOVERR) != RESET)
2813:../src/sdcard.c ****   {
2814:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_RXOVERR);
2815:../src/sdcard.c ****     errorstatus = SD_RX_OVERRUN;
2816:../src/sdcard.c ****     return(errorstatus);
2817:../src/sdcard.c ****   }
2818:../src/sdcard.c ****   else if (SDIO_GetFlagStatus(SDIO_FLAG_STBITERR) != RESET)
2819:../src/sdcard.c ****   {
2820:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_STBITERR);
2821:../src/sdcard.c ****     errorstatus = SD_START_BIT_ERR;
2822:../src/sdcard.c ****     return(errorstatus);
2823:../src/sdcard.c ****   }
2824:../src/sdcard.c **** 
2825:../src/sdcard.c ****   /* Clear all the static flags */
2826:../src/sdcard.c ****   SDIO_ClearFlag(SDIO_STATIC_FLAGS);
2827:../src/sdcard.c **** 
2828:../src/sdcard.c ****   *(pscr + 1) = ((tempscr[0] & SD_0TO7BITS) << 24) | ((tempscr[0] & SD_8TO15BITS) << 8) | ((tempscr
2829:../src/sdcard.c **** 
2830:../src/sdcard.c ****   *(pscr) = ((tempscr[1] & SD_0TO7BITS) << 24) | ((tempscr[1] & SD_8TO15BITS) << 8) | ((tempscr[1] 
2831:../src/sdcard.c **** 
2832:../src/sdcard.c ****   return(errorstatus);
2833:../src/sdcard.c **** }
2834:../src/sdcard.c **** 
2835:../src/sdcard.c **** /*******************************************************************************
2836:../src/sdcard.c **** * Function Name  : convert_from_bytes_to_power_of_two
2837:../src/sdcard.c **** * Description    : Converts the number of bytes in power of two and returns the
2838:../src/sdcard.c **** *                  power.
2839:../src/sdcard.c **** * Input          : NumberOfBytes: number of bytes.
2840:../src/sdcard.c **** * Output         : None
2841:../src/sdcard.c **** * Return         : None
2842:../src/sdcard.c **** *******************************************************************************/
2843:../src/sdcard.c **** static uint8_t convert_from_bytes_to_power_of_two(uint16_t NumberOfBytes)
2844:../src/sdcard.c **** {
 19541              		.loc 1 2844 0
 19542              		.cfi_startproc
 19543              		@ args = 0, pretend = 0, frame = 0
 19544              		@ frame_needed = 0, uses_anonymous_args = 0
 19545              		@ link register save eliminated.
 19546              	.LVL0:
 19547              		.loc 1 2844 0
 19548 0000 0346     		mov	r3, r0
2845:../src/sdcard.c ****   uint8_t count = 0;
 19549              		.loc 1 2845 0
 19550 0002 0020     		movs	r0, #0
 19551              	.LVL1:
2846:../src/sdcard.c **** 
2847:../src/sdcard.c ****   while (NumberOfBytes != 1)
 19552              		.loc 1 2847 0
 19553 0004 02E0     		b	.L2
 19554              	.LVL2:
 19555              	.L3:
2848:../src/sdcard.c ****   {
2849:../src/sdcard.c ****     NumberOfBytes >>= 1;
2850:../src/sdcard.c ****     count++;
 19556              		.loc 1 2850 0
 19557 0006 0130     		adds	r0, r0, #1
 19558              	.LVL3:
2849:../src/sdcard.c ****     NumberOfBytes >>= 1;
 19559              		.loc 1 2849 0
 19560 0008 5B08     		lsrs	r3, r3, #1
 19561              	.LVL4:
 19562              		.loc 1 2850 0
 19563 000a C0B2     		uxtb	r0, r0
 19564              	.LVL5:
 19565              	.L2:
2847:../src/sdcard.c ****   while (NumberOfBytes != 1)
 19566              		.loc 1 2847 0 discriminator 1
 19567 000c 012B     		cmp	r3, #1
 19568 000e FAD1     		bne	.L3
2851:../src/sdcard.c ****   }
2852:../src/sdcard.c ****   return(count);
2853:../src/sdcard.c **** }
 19569              		.loc 1 2853 0
 19570 0010 7047     		bx	lr
 19571              		.cfi_endproc
 19572              	.LFE56:
 19574              		.align	1
 19575              		.thumb
 19576              		.thumb_func
 19578              	CmdResp2Error:
 19579              	.LFB51:
2342:../src/sdcard.c **** {
 19580              		.loc 1 2342 0
 19581              		.cfi_startproc
 19582              		@ args = 0, pretend = 0, frame = 0
 19583              		@ frame_needed = 0, uses_anonymous_args = 0
 19584 0012 08B5     		push	{r3, lr}
 19585              	.LCFI0:
 19586              		.cfi_def_cfa_offset 8
 19587              	.L6:
2350:../src/sdcard.c ****     status = SDIO->STA;
 19588              		.loc 1 2350 0
 19589 0014 0D4B     		ldr	r3, .L10
 19590              		.cfi_offset 14, -4
 19591              		.cfi_offset 3, -8
 19592 0016 5B6B     		ldr	r3, [r3, #52]
 19593              	.LVL6:
2348:../src/sdcard.c ****   while (!(status & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CTIMEOUT | SDIO_FLAG_CMDREND)))
 19594              		.loc 1 2348 0
 19595 0018 13F0450F 		tst	r3, #69
 19596 001c FAD0     		beq	.L6
2353:../src/sdcard.c ****   if (status & SDIO_FLAG_CTIMEOUT)
 19597              		.loc 1 2353 0
 19598 001e 13F0040F 		tst	r3, #4
 19599 0022 04D0     		beq	.L7
 19600              	.LVL7:
2356:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_CTIMEOUT);
 19601              		.loc 1 2356 0
 19602 0024 0420     		movs	r0, #4
 19603 0026 FFF7FEFF 		bl	SDIO_ClearFlag
 19604              	.LVL8:
2357:../src/sdcard.c ****     return(errorstatus);
 19605              		.loc 1 2357 0
 19606 002a 0320     		movs	r0, #3
 19607 002c 08BD     		pop	{r3, pc}
 19608              	.LVL9:
 19609              	.L7:
2359:../src/sdcard.c ****   else if (status & SDIO_FLAG_CCRCFAIL)
 19610              		.loc 1 2359 0
 19611 002e 13F0010F 		tst	r3, #1
 19612 0032 04D0     		beq	.L9
 19613              	.LVL10:
2362:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_CCRCFAIL);
 19614              		.loc 1 2362 0
 19615 0034 0120     		movs	r0, #1
 19616 0036 FFF7FEFF 		bl	SDIO_ClearFlag
 19617              	.LVL11:
2363:../src/sdcard.c ****     return(errorstatus);
 19618              		.loc 1 2363 0
 19619 003a 0120     		movs	r0, #1
 19620 003c 08BD     		pop	{r3, pc}
 19621              	.LVL12:
 19622              	.L9:
2367:../src/sdcard.c ****   SDIO_ClearFlag(SDIO_STATIC_FLAGS);
 19623              		.loc 1 2367 0
 19624 003e 40F2FF50 		movw	r0, #1535
 19625 0042 FFF7FEFF 		bl	SDIO_ClearFlag
 19626              	.LVL13:
2369:../src/sdcard.c ****   return(errorstatus);
 19627              		.loc 1 2369 0
 19628 0046 2A20     		movs	r0, #42
2370:../src/sdcard.c **** }
 19629              		.loc 1 2370 0
 19630 0048 08BD     		pop	{r3, pc}
 19631              	.L11:
 19632 004a 00BF     		.align	2
 19633              	.L10:
 19634 004c 00800140 		.word	1073840128
 19635              		.cfi_endproc
 19636              	.LFE51:
 19638              		.align	1
 19639              		.thumb
 19640              		.thumb_func
 19642              	CmdResp1Error:
 19643              	.LFB49:
2162:../src/sdcard.c **** {
 19644              		.loc 1 2162 0
 19645              		.cfi_startproc
 19646              		@ args = 0, pretend = 0, frame = 0
 19647              		@ frame_needed = 0, uses_anonymous_args = 0
 19648              	.LVL14:
 19649 0050 38B5     		push	{r3, r4, r5, lr}
 19650              	.LCFI1:
 19651              		.cfi_def_cfa_offset 16
 19652 0052 0546     		mov	r5, r0
 19653              		.cfi_offset 14, -4
 19654              		.cfi_offset 5, -8
 19655              		.cfi_offset 4, -12
 19656              		.cfi_offset 3, -16
 19657              	.L14:
2171:../src/sdcard.c ****     status = SDIO->STA;
 19658              		.loc 1 2171 0
 19659 0054 434B     		ldr	r3, .L39
 19660 0056 5C6B     		ldr	r4, [r3, #52]
 19661              	.LVL15:
2169:../src/sdcard.c ****   while (!(status & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT)))
 19662              		.loc 1 2169 0
 19663 0058 14F0450F 		tst	r4, #69
 19664 005c FAD0     		beq	.L14
2174:../src/sdcard.c ****   if (status & SDIO_FLAG_CTIMEOUT)
 19665              		.loc 1 2174 0
 19666 005e 14F0040F 		tst	r4, #4
 19667 0062 04D0     		beq	.L15
 19668              	.LVL16:
2177:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_CTIMEOUT);
 19669              		.loc 1 2177 0
 19670 0064 0420     		movs	r0, #4
 19671              	.LVL17:
 19672 0066 FFF7FEFF 		bl	SDIO_ClearFlag
2178:../src/sdcard.c ****     return(errorstatus);
 19673              		.loc 1 2178 0
 19674 006a 0320     		movs	r0, #3
 19675 006c 38BD     		pop	{r3, r4, r5, pc}
 19676              	.LVL18:
 19677              	.L15:
2180:../src/sdcard.c ****   else if (status & SDIO_FLAG_CCRCFAIL)
 19678              		.loc 1 2180 0
 19679 006e 14F00104 		ands	r4, r4, #1
 19680              	.LVL19:
 19681 0072 04D0     		beq	.L17
 19682              	.LVL20:
2183:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_CCRCFAIL);
 19683              		.loc 1 2183 0
 19684 0074 0120     		movs	r0, #1
 19685              	.LVL21:
 19686 0076 FFF7FEFF 		bl	SDIO_ClearFlag
2184:../src/sdcard.c ****     return(errorstatus);
 19687              		.loc 1 2184 0
 19688 007a 0120     		movs	r0, #1
 19689 007c 38BD     		pop	{r3, r4, r5, pc}
 19690              	.LVL22:
 19691              	.L17:
2188:../src/sdcard.c ****   if (SDIO_GetCommandResponse() != cmd)
 19692              		.loc 1 2188 0
 19693 007e FFF7FEFF 		bl	SDIO_GetCommandResponse
 19694              	.LVL23:
 19695 0082 A842     		cmp	r0, r5
 19696 0084 59D1     		bne	.L28
2195:../src/sdcard.c ****   SDIO_ClearFlag(SDIO_STATIC_FLAGS);
 19697              		.loc 1 2195 0
 19698 0086 40F2FF50 		movw	r0, #1535
 19699 008a FFF7FEFF 		bl	SDIO_ClearFlag
2198:../src/sdcard.c ****   response_r1 = SDIO_GetResponse(SDIO_RESP1);
 19700              		.loc 1 2198 0
 19701 008e 2046     		mov	r0, r4
 19702 0090 FFF7FEFF 		bl	SDIO_GetResponse
 19703              	.LVL24:
2200:../src/sdcard.c ****   if ((response_r1 & SD_OCR_ERRORBITS) == SD_ALLZERO)
 19704              		.loc 1 2200 0
 19705 0094 344B     		ldr	r3, .L39+4
 19706 0096 00EA0303 		and	r3, r0, r3
 19707 009a 002B     		cmp	r3, #0
 19708 009c 3BD0     		beq	.L19
2205:../src/sdcard.c ****   if (response_r1 & SD_OCR_ADDR_OUT_OF_RANGE)
 19709              		.loc 1 2205 0
 19710 009e 0028     		cmp	r0, #0
 19711 00a0 3BDB     		blt	.L20
2210:../src/sdcard.c ****   if (response_r1 & SD_OCR_ADDR_MISALIGNED)
 19712              		.loc 1 2210 0
 19713 00a2 10F0804F 		tst	r0, #1073741824
 19714 00a6 3AD1     		bne	.L21
2215:../src/sdcard.c ****   if (response_r1 & SD_OCR_BLOCK_LEN_ERR)
 19715              		.loc 1 2215 0
 19716 00a8 10F0005F 		tst	r0, #536870912
 19717 00ac 39D1     		bne	.L22
2220:../src/sdcard.c ****   if (response_r1 & SD_OCR_ERASE_SEQ_ERR)
 19718              		.loc 1 2220 0
 19719 00ae 10F0805F 		tst	r0, #268435456
 19720 00b2 38D1     		bne	.L23
2225:../src/sdcard.c ****   if (response_r1 & SD_OCR_BAD_ERASE_PARAM)
 19721              		.loc 1 2225 0
 19722 00b4 10F0006F 		tst	r0, #134217728
 19723 00b8 37D1     		bne	.L24
2230:../src/sdcard.c ****   if (response_r1 & SD_OCR_WRITE_PROT_VIOLATION)
 19724              		.loc 1 2230 0
 19725 00ba 10F0806F 		tst	r0, #67108864
 19726 00be 36D1     		bne	.L25
2235:../src/sdcard.c ****   if (response_r1 & SD_OCR_LOCK_UNLOCK_FAILED)
 19727              		.loc 1 2235 0
 19728 00c0 10F0807F 		tst	r0, #16777216
 19729 00c4 35D1     		bne	.L26
2240:../src/sdcard.c ****   if (response_r1 & SD_OCR_COM_CRC_FAILED)
 19730              		.loc 1 2240 0
 19731 00c6 10F4000F 		tst	r0, #8388608
 19732 00ca 34D1     		bne	.L27
2245:../src/sdcard.c ****   if (response_r1 & SD_OCR_ILLEGAL_CMD)
 19733              		.loc 1 2245 0
 19734 00cc 10F4800F 		tst	r0, #4194304
 19735 00d0 33D1     		bne	.L28
2250:../src/sdcard.c ****   if (response_r1 & SD_OCR_CARD_ECC_FAILED)
 19736              		.loc 1 2250 0
 19737 00d2 10F4001F 		tst	r0, #2097152
 19738 00d6 32D1     		bne	.L29
2255:../src/sdcard.c ****   if (response_r1 & SD_OCR_CC_ERROR)
 19739              		.loc 1 2255 0
 19740 00d8 10F4801F 		tst	r0, #1048576
 19741 00dc 31D1     		bne	.L30
2260:../src/sdcard.c ****   if (response_r1 & SD_OCR_GENERAL_UNKNOWN_ERROR)
 19742              		.loc 1 2260 0
 19743 00de 10F4002F 		tst	r0, #524288
 19744 00e2 30D1     		bne	.L31
2265:../src/sdcard.c ****   if (response_r1 & SD_OCR_STREAM_READ_UNDERRUN)
 19745              		.loc 1 2265 0
 19746 00e4 10F4802F 		tst	r0, #262144
 19747 00e8 2FD1     		bne	.L32
2270:../src/sdcard.c ****   if (response_r1 & SD_OCR_STREAM_WRITE_OVERRUN)
 19748              		.loc 1 2270 0
 19749 00ea 10F4003F 		tst	r0, #131072
 19750 00ee 2ED1     		bne	.L33
2275:../src/sdcard.c ****   if (response_r1 & SD_OCR_CID_CSD_OVERWRIETE)
 19751              		.loc 1 2275 0
 19752 00f0 10F4803F 		tst	r0, #65536
 19753 00f4 2DD1     		bne	.L34
2280:../src/sdcard.c ****   if (response_r1 & SD_OCR_WP_ERASE_SKIP)
 19754              		.loc 1 2280 0
 19755 00f6 10F4004F 		tst	r0, #32768
 19756 00fa 2CD1     		bne	.L35
2285:../src/sdcard.c ****   if (response_r1 & SD_OCR_CARD_ECC_DISABLED)
 19757              		.loc 1 2285 0
 19758 00fc 10F4804F 		tst	r0, #16384
 19759 0100 2BD1     		bne	.L36
2290:../src/sdcard.c ****   if (response_r1 & SD_OCR_ERASE_RESET)
 19760              		.loc 1 2290 0
 19761 0102 10F4005F 		tst	r0, #8192
 19762 0106 2AD1     		bne	.L37
2295:../src/sdcard.c ****   if (response_r1 & SD_OCR_AKE_SEQ_ERROR)
 19763              		.loc 1 2295 0
 19764 0108 00F00800 		and	r0, r0, #8
 19765              	.LVL25:
2297:../src/sdcard.c ****     return(SD_AKE_SEQ_ERROR);
 19766              		.loc 1 2297 0
 19767 010c 0028     		cmp	r0, #0
 19768 010e 0CBF     		ite	eq
 19769 0110 2A20     		moveq	r0, #42
 19770 0112 1A20     		movne	r0, #26
 19771 0114 38BD     		pop	{r3, r4, r5, pc}
 19772              	.LVL26:
 19773              	.L19:
2202:../src/sdcard.c ****     return(errorstatus);
 19774              		.loc 1 2202 0
 19775 0116 2A20     		movs	r0, #42
 19776              	.LVL27:
 19777 0118 38BD     		pop	{r3, r4, r5, pc}
 19778              	.LVL28:
 19779              	.L20:
2207:../src/sdcard.c ****     return(SD_ADDR_OUT_OF_RANGE);
 19780              		.loc 1 2207 0
 19781 011a 1C20     		movs	r0, #28
 19782              	.LVL29:
 19783 011c 38BD     		pop	{r3, r4, r5, pc}
 19784              	.LVL30:
 19785              	.L21:
2212:../src/sdcard.c ****     return(SD_ADDR_MISALIGNED);
 19786              		.loc 1 2212 0
 19787 011e 0920     		movs	r0, #9
 19788              	.LVL31:
 19789 0120 38BD     		pop	{r3, r4, r5, pc}
 19790              	.LVL32:
 19791              	.L22:
2217:../src/sdcard.c ****     return(SD_BLOCK_LEN_ERR);
 19792              		.loc 1 2217 0
 19793 0122 0A20     		movs	r0, #10
 19794              	.LVL33:
 19795 0124 38BD     		pop	{r3, r4, r5, pc}
 19796              	.LVL34:
 19797              	.L23:
2222:../src/sdcard.c ****     return(SD_ERASE_SEQ_ERR);
 19798              		.loc 1 2222 0
 19799 0126 0B20     		movs	r0, #11
 19800              	.LVL35:
 19801 0128 38BD     		pop	{r3, r4, r5, pc}
 19802              	.LVL36:
 19803              	.L24:
2227:../src/sdcard.c ****     return(SD_BAD_ERASE_PARAM);
 19804              		.loc 1 2227 0
 19805 012a 0C20     		movs	r0, #12
 19806              	.LVL37:
 19807 012c 38BD     		pop	{r3, r4, r5, pc}
 19808              	.LVL38:
 19809              	.L25:
2232:../src/sdcard.c ****     return(SD_WRITE_PROT_VIOLATION);
 19810              		.loc 1 2232 0
 19811 012e 0D20     		movs	r0, #13
 19812              	.LVL39:
 19813 0130 38BD     		pop	{r3, r4, r5, pc}
 19814              	.LVL40:
 19815              	.L26:
2237:../src/sdcard.c ****     return(SD_LOCK_UNLOCK_FAILED);
 19816              		.loc 1 2237 0
 19817 0132 0E20     		movs	r0, #14
 19818              	.LVL41:
 19819 0134 38BD     		pop	{r3, r4, r5, pc}
 19820              	.LVL42:
 19821              	.L27:
2242:../src/sdcard.c ****     return(SD_COM_CRC_FAILED);
 19822              		.loc 1 2242 0
 19823 0136 0F20     		movs	r0, #15
 19824              	.LVL43:
 19825 0138 38BD     		pop	{r3, r4, r5, pc}
 19826              	.L28:
2247:../src/sdcard.c ****     return(SD_ILLEGAL_CMD);
 19827              		.loc 1 2247 0
 19828 013a 1020     		movs	r0, #16
 19829 013c 38BD     		pop	{r3, r4, r5, pc}
 19830              	.LVL44:
 19831              	.L29:
2252:../src/sdcard.c ****     return(SD_CARD_ECC_FAILED);
 19832              		.loc 1 2252 0
 19833 013e 1120     		movs	r0, #17
 19834              	.LVL45:
 19835 0140 38BD     		pop	{r3, r4, r5, pc}
 19836              	.LVL46:
 19837              	.L30:
2257:../src/sdcard.c ****     return(SD_CC_ERROR);
 19838              		.loc 1 2257 0
 19839 0142 1220     		movs	r0, #18
 19840              	.LVL47:
 19841 0144 38BD     		pop	{r3, r4, r5, pc}
 19842              	.LVL48:
 19843              	.L31:
2262:../src/sdcard.c ****     return(SD_GENERAL_UNKNOWN_ERROR);
 19844              		.loc 1 2262 0
 19845 0146 1320     		movs	r0, #19
 19846              	.LVL49:
 19847 0148 38BD     		pop	{r3, r4, r5, pc}
 19848              	.LVL50:
 19849              	.L32:
2267:../src/sdcard.c ****     return(SD_STREAM_READ_UNDERRUN);
 19850              		.loc 1 2267 0
 19851 014a 1420     		movs	r0, #20
 19852              	.LVL51:
 19853 014c 38BD     		pop	{r3, r4, r5, pc}
 19854              	.LVL52:
 19855              	.L33:
2272:../src/sdcard.c ****     return(SD_STREAM_WRITE_OVERRUN);
 19856              		.loc 1 2272 0
 19857 014e 1520     		movs	r0, #21
 19858              	.LVL53:
 19859 0150 38BD     		pop	{r3, r4, r5, pc}
 19860              	.LVL54:
 19861              	.L34:
2277:../src/sdcard.c ****     return(SD_CID_CSD_OVERWRITE);
 19862              		.loc 1 2277 0
 19863 0152 1620     		movs	r0, #22
 19864              	.LVL55:
 19865 0154 38BD     		pop	{r3, r4, r5, pc}
 19866              	.LVL56:
 19867              	.L35:
2282:../src/sdcard.c ****     return(SD_WP_ERASE_SKIP);
 19868              		.loc 1 2282 0
 19869 0156 1720     		movs	r0, #23
 19870              	.LVL57:
 19871 0158 38BD     		pop	{r3, r4, r5, pc}
 19872              	.LVL58:
 19873              	.L36:
2287:../src/sdcard.c ****     return(SD_CARD_ECC_DISABLED);
 19874              		.loc 1 2287 0
 19875 015a 1820     		movs	r0, #24
 19876              	.LVL59:
 19877 015c 38BD     		pop	{r3, r4, r5, pc}
 19878              	.LVL60:
 19879              	.L37:
2292:../src/sdcard.c ****     return(SD_ERASE_RESET);
 19880              		.loc 1 2292 0
 19881 015e 1920     		movs	r0, #25
 19882              	.LVL61:
2300:../src/sdcard.c **** }
 19883              		.loc 1 2300 0
 19884 0160 38BD     		pop	{r3, r4, r5, pc}
 19885              	.L40:
 19886 0162 00BF     		.align	2
 19887              	.L39:
 19888 0164 00800140 		.word	1073840128
 19889 0168 08E0FFFD 		.word	-33562616
 19890              		.cfi_endproc
 19891              	.LFE49:
 19893              		.align	1
 19894              		.thumb
 19895              		.thumb_func
 19897              	IsCardProgramming:
 19898              	.LFB54:
2571:../src/sdcard.c **** {
 19899              		.loc 1 2571 0
 19900              		.cfi_startproc
 19901              		@ args = 0, pretend = 0, frame = 8
 19902              		@ frame_needed = 0, uses_anonymous_args = 0
 19903              	.LVL62:
 19904 016c 37B5     		push	{r0, r1, r2, r4, r5, lr}
 19905              	.LCFI2:
 19906              		.cfi_def_cfa_offset 24
2575:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) RCA << 16;
 19907              		.loc 1 2575 0
 19908 016e 5D4A     		ldr	r2, .L68
 19909              		.cfi_offset 14, -4
 19910              		.cfi_offset 5, -8
 19911              		.cfi_offset 4, -12
 19912              		.cfi_offset 2, -16
 19913              		.cfi_offset 1, -20
 19914              		.cfi_offset 0, -24
2571:../src/sdcard.c **** {
 19915              		.loc 1 2571 0
 19916 0170 0446     		mov	r4, r0
2575:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) RCA << 16;
 19917              		.loc 1 2575 0
 19918 0172 1268     		ldr	r2, [r2, #0]
 19919 0174 5C48     		ldr	r0, .L68+4
 19920              	.LVL63:
 19921 0176 1204     		lsls	r2, r2, #16
2573:../src/sdcard.c ****   __IO uint32_t respR1 = 0, status = 0;
 19922              		.loc 1 2573 0
 19923 0178 0023     		movs	r3, #0
2575:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) RCA << 16;
 19924              		.loc 1 2575 0
 19925 017a 0260     		str	r2, [r0, #0]
2576:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SEND_STATUS;
 19926              		.loc 1 2576 0
 19927 017c 0D22     		movs	r2, #13
2573:../src/sdcard.c ****   __IO uint32_t respR1 = 0, status = 0;
 19928              		.loc 1 2573 0
 19929 017e 0193     		str	r3, [sp, #4]
 19930              	.LVL64:
2576:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SEND_STATUS;
 19931              		.loc 1 2576 0
 19932 0180 4260     		str	r2, [r0, #4]
2573:../src/sdcard.c ****   __IO uint32_t respR1 = 0, status = 0;
 19933              		.loc 1 2573 0
 19934 0182 0093     		str	r3, [sp, #0]
 19935              	.LVL65:
2577:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 19936              		.loc 1 2577 0
 19937 0184 3332     		adds	r2, r2, #51
2578:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 19938              		.loc 1 2578 0
 19939 0186 C360     		str	r3, [r0, #12]
2579:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 19940              		.loc 1 2579 0
 19941 0188 4FF48063 		mov	r3, #1024
2577:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 19942              		.loc 1 2577 0
 19943 018c 8260     		str	r2, [r0, #8]
2579:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 19944              		.loc 1 2579 0
 19945 018e 0361     		str	r3, [r0, #16]
2580:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 19946              		.loc 1 2580 0
 19947 0190 FFF7FEFF 		bl	SDIO_SendCommand
 19948              	.L43:
2585:../src/sdcard.c ****     status = SDIO->STA;
 19949              		.loc 1 2585 0
 19950 0194 554B     		ldr	r3, .L68+8
 19951 0196 5B6B     		ldr	r3, [r3, #52]
 19952 0198 0093     		str	r3, [sp, #0]
2583:../src/sdcard.c ****   while (!(status & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT)))
 19953              		.loc 1 2583 0
 19954 019a 009B     		ldr	r3, [sp, #0]
 19955 019c 13F0450F 		tst	r3, #69
 19956 01a0 F8D0     		beq	.L43
2588:../src/sdcard.c ****   if (status & SDIO_FLAG_CTIMEOUT)
 19957              		.loc 1 2588 0
 19958 01a2 009B     		ldr	r3, [sp, #0]
 19959 01a4 13F0040F 		tst	r3, #4
 19960 01a8 04D0     		beq	.L44
 19961              	.LVL66:
2591:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_CTIMEOUT);
 19962              		.loc 1 2591 0
 19963 01aa 0420     		movs	r0, #4
 19964 01ac FFF7FEFF 		bl	SDIO_ClearFlag
2592:../src/sdcard.c ****     return(errorstatus);
 19965              		.loc 1 2592 0
 19966 01b0 0320     		movs	r0, #3
 19967 01b2 95E0     		b	.L45
 19968              	.LVL67:
 19969              	.L44:
2594:../src/sdcard.c ****   else if (status & SDIO_FLAG_CCRCFAIL)
 19970              		.loc 1 2594 0
 19971 01b4 009D     		ldr	r5, [sp, #0]
 19972 01b6 15F00105 		ands	r5, r5, #1
 19973 01ba 04D0     		beq	.L46
 19974              	.LVL68:
2597:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_CCRCFAIL);
 19975              		.loc 1 2597 0
 19976 01bc 0120     		movs	r0, #1
 19977 01be FFF7FEFF 		bl	SDIO_ClearFlag
2598:../src/sdcard.c ****     return(errorstatus);
 19978              		.loc 1 2598 0
 19979 01c2 0120     		movs	r0, #1
 19980 01c4 8CE0     		b	.L45
 19981              	.LVL69:
 19982              	.L46:
2601:../src/sdcard.c ****   status = (uint32_t)SDIO_GetCommandResponse();
 19983              		.loc 1 2601 0
 19984 01c6 FFF7FEFF 		bl	SDIO_GetCommandResponse
 19985 01ca 0090     		str	r0, [sp, #0]
2604:../src/sdcard.c ****   if (status != SDIO_SEND_STATUS)
 19986              		.loc 1 2604 0
 19987 01cc 009B     		ldr	r3, [sp, #0]
 19988 01ce 0D2B     		cmp	r3, #13
 19989 01d0 73D1     		bne	.L57
2611:../src/sdcard.c ****   SDIO_ClearFlag(SDIO_STATIC_FLAGS);
 19990              		.loc 1 2611 0
 19991 01d2 40F2FF50 		movw	r0, #1535
 19992 01d6 FFF7FEFF 		bl	SDIO_ClearFlag
2615:../src/sdcard.c ****   respR1 = SDIO_GetResponse(SDIO_RESP1);
 19993              		.loc 1 2615 0
 19994 01da 2846     		mov	r0, r5
 19995 01dc FFF7FEFF 		bl	SDIO_GetResponse
 19996 01e0 0190     		str	r0, [sp, #4]
2618:../src/sdcard.c ****   *pstatus = (uint8_t) ((respR1 >> 9) & 0x0000000F);
 19997              		.loc 1 2618 0
 19998 01e2 019B     		ldr	r3, [sp, #4]
2620:../src/sdcard.c ****   if ((respR1 & SD_OCR_ERRORBITS) == SD_ALLZERO)
 19999              		.loc 1 2620 0
 20000 01e4 019A     		ldr	r2, [sp, #4]
2618:../src/sdcard.c ****   *pstatus = (uint8_t) ((respR1 >> 9) & 0x0000000F);
 20001              		.loc 1 2618 0
 20002 01e6 5B0A     		lsrs	r3, r3, #9
 20003 01e8 03F00F03 		and	r3, r3, #15
 20004 01ec 2370     		strb	r3, [r4, #0]
2620:../src/sdcard.c ****   if ((respR1 & SD_OCR_ERRORBITS) == SD_ALLZERO)
 20005              		.loc 1 2620 0
 20006 01ee 404B     		ldr	r3, .L68+12
 20007 01f0 02EA0303 		and	r3, r2, r3
 20008 01f4 002B     		cmp	r3, #0
 20009 01f6 4ED0     		beq	.L48
2625:../src/sdcard.c ****   if (respR1 & SD_OCR_ADDR_OUT_OF_RANGE)
 20010              		.loc 1 2625 0
 20011 01f8 019B     		ldr	r3, [sp, #4]
 20012 01fa 002B     		cmp	r3, #0
 20013 01fc 4DDB     		blt	.L49
2630:../src/sdcard.c ****   if (respR1 & SD_OCR_ADDR_MISALIGNED)
 20014              		.loc 1 2630 0
 20015 01fe 019B     		ldr	r3, [sp, #4]
 20016 0200 13F0804F 		tst	r3, #1073741824
 20017 0204 4BD1     		bne	.L50
2635:../src/sdcard.c ****   if (respR1 & SD_OCR_BLOCK_LEN_ERR)
 20018              		.loc 1 2635 0
 20019 0206 019B     		ldr	r3, [sp, #4]
 20020 0208 13F0005F 		tst	r3, #536870912
 20021 020c 49D1     		bne	.L51
2640:../src/sdcard.c ****   if (respR1 & SD_OCR_ERASE_SEQ_ERR)
 20022              		.loc 1 2640 0
 20023 020e 019B     		ldr	r3, [sp, #4]
 20024 0210 13F0805F 		tst	r3, #268435456
 20025 0214 47D1     		bne	.L52
2645:../src/sdcard.c ****   if (respR1 & SD_OCR_BAD_ERASE_PARAM)
 20026              		.loc 1 2645 0
 20027 0216 019B     		ldr	r3, [sp, #4]
 20028 0218 13F0006F 		tst	r3, #134217728
 20029 021c 45D1     		bne	.L53
2650:../src/sdcard.c ****   if (respR1 & SD_OCR_WRITE_PROT_VIOLATION)
 20030              		.loc 1 2650 0
 20031 021e 019B     		ldr	r3, [sp, #4]
 20032 0220 13F0806F 		tst	r3, #67108864
 20033 0224 43D1     		bne	.L54
2655:../src/sdcard.c ****   if (respR1 & SD_OCR_LOCK_UNLOCK_FAILED)
 20034              		.loc 1 2655 0
 20035 0226 019B     		ldr	r3, [sp, #4]
 20036 0228 13F0807F 		tst	r3, #16777216
 20037 022c 41D1     		bne	.L55
2660:../src/sdcard.c ****   if (respR1 & SD_OCR_COM_CRC_FAILED)
 20038              		.loc 1 2660 0
 20039 022e 019B     		ldr	r3, [sp, #4]
 20040 0230 13F4000F 		tst	r3, #8388608
 20041 0234 3FD1     		bne	.L56
2665:../src/sdcard.c ****   if (respR1 & SD_OCR_ILLEGAL_CMD)
 20042              		.loc 1 2665 0
 20043 0236 019B     		ldr	r3, [sp, #4]
 20044 0238 13F4800F 		tst	r3, #4194304
 20045 023c 3DD1     		bne	.L57
2670:../src/sdcard.c ****   if (respR1 & SD_OCR_CARD_ECC_FAILED)
 20046              		.loc 1 2670 0
 20047 023e 019B     		ldr	r3, [sp, #4]
 20048 0240 13F4001F 		tst	r3, #2097152
 20049 0244 3BD1     		bne	.L58
2675:../src/sdcard.c ****   if (respR1 & SD_OCR_CC_ERROR)
 20050              		.loc 1 2675 0
 20051 0246 019B     		ldr	r3, [sp, #4]
 20052 0248 13F4801F 		tst	r3, #1048576
 20053 024c 39D1     		bne	.L59
2680:../src/sdcard.c ****   if (respR1 & SD_OCR_GENERAL_UNKNOWN_ERROR)
 20054              		.loc 1 2680 0
 20055 024e 019B     		ldr	r3, [sp, #4]
 20056 0250 13F4002F 		tst	r3, #524288
 20057 0254 37D1     		bne	.L60
2685:../src/sdcard.c ****   if (respR1 & SD_OCR_STREAM_READ_UNDERRUN)
 20058              		.loc 1 2685 0
 20059 0256 019B     		ldr	r3, [sp, #4]
 20060 0258 13F4802F 		tst	r3, #262144
 20061 025c 35D1     		bne	.L61
2690:../src/sdcard.c ****   if (respR1 & SD_OCR_STREAM_WRITE_OVERRUN)
 20062              		.loc 1 2690 0
 20063 025e 019B     		ldr	r3, [sp, #4]
 20064 0260 13F4003F 		tst	r3, #131072
 20065 0264 33D1     		bne	.L62
2695:../src/sdcard.c ****   if (respR1 & SD_OCR_CID_CSD_OVERWRIETE)
 20066              		.loc 1 2695 0
 20067 0266 019B     		ldr	r3, [sp, #4]
 20068 0268 13F4803F 		tst	r3, #65536
 20069 026c 31D1     		bne	.L63
2700:../src/sdcard.c ****   if (respR1 & SD_OCR_WP_ERASE_SKIP)
 20070              		.loc 1 2700 0
 20071 026e 019B     		ldr	r3, [sp, #4]
 20072 0270 13F4004F 		tst	r3, #32768
 20073 0274 2FD1     		bne	.L64
2705:../src/sdcard.c ****   if (respR1 & SD_OCR_CARD_ECC_DISABLED)
 20074              		.loc 1 2705 0
 20075 0276 019B     		ldr	r3, [sp, #4]
 20076 0278 13F4804F 		tst	r3, #16384
 20077 027c 2DD1     		bne	.L65
2710:../src/sdcard.c ****   if (respR1 & SD_OCR_ERASE_RESET)
 20078              		.loc 1 2710 0
 20079 027e 019B     		ldr	r3, [sp, #4]
 20080 0280 13F4005F 		tst	r3, #8192
 20081 0284 2BD1     		bne	.L66
2715:../src/sdcard.c ****   if (respR1 & SD_OCR_AKE_SEQ_ERROR)
 20082              		.loc 1 2715 0
 20083 0286 0198     		ldr	r0, [sp, #4]
 20084 0288 00F00800 		and	r0, r0, #8
2717:../src/sdcard.c ****     return(SD_AKE_SEQ_ERROR);
 20085              		.loc 1 2717 0
 20086 028c 0028     		cmp	r0, #0
 20087 028e 0CBF     		ite	eq
 20088 0290 2A20     		moveq	r0, #42
 20089 0292 1A20     		movne	r0, #26
 20090 0294 24E0     		b	.L45
 20091              	.L48:
2622:../src/sdcard.c ****     return(errorstatus);
 20092              		.loc 1 2622 0
 20093 0296 2A20     		movs	r0, #42
 20094 0298 22E0     		b	.L45
 20095              	.L49:
2627:../src/sdcard.c ****     return(SD_ADDR_OUT_OF_RANGE);
 20096              		.loc 1 2627 0
 20097 029a 1C20     		movs	r0, #28
 20098 029c 20E0     		b	.L45
 20099              	.L50:
2632:../src/sdcard.c ****     return(SD_ADDR_MISALIGNED);
 20100              		.loc 1 2632 0
 20101 029e 0920     		movs	r0, #9
 20102 02a0 1EE0     		b	.L45
 20103              	.L51:
2637:../src/sdcard.c ****     return(SD_BLOCK_LEN_ERR);
 20104              		.loc 1 2637 0
 20105 02a2 0A20     		movs	r0, #10
 20106 02a4 1CE0     		b	.L45
 20107              	.L52:
2642:../src/sdcard.c ****     return(SD_ERASE_SEQ_ERR);
 20108              		.loc 1 2642 0
 20109 02a6 0B20     		movs	r0, #11
 20110 02a8 1AE0     		b	.L45
 20111              	.L53:
2647:../src/sdcard.c ****     return(SD_BAD_ERASE_PARAM);
 20112              		.loc 1 2647 0
 20113 02aa 0C20     		movs	r0, #12
 20114 02ac 18E0     		b	.L45
 20115              	.L54:
2652:../src/sdcard.c ****     return(SD_WRITE_PROT_VIOLATION);
 20116              		.loc 1 2652 0
 20117 02ae 0D20     		movs	r0, #13
 20118 02b0 16E0     		b	.L45
 20119              	.L55:
2657:../src/sdcard.c ****     return(SD_LOCK_UNLOCK_FAILED);
 20120              		.loc 1 2657 0
 20121 02b2 0E20     		movs	r0, #14
 20122 02b4 14E0     		b	.L45
 20123              	.L56:
2662:../src/sdcard.c ****     return(SD_COM_CRC_FAILED);
 20124              		.loc 1 2662 0
 20125 02b6 0F20     		movs	r0, #15
 20126 02b8 12E0     		b	.L45
 20127              	.L57:
2667:../src/sdcard.c ****     return(SD_ILLEGAL_CMD);
 20128              		.loc 1 2667 0
 20129 02ba 1020     		movs	r0, #16
 20130 02bc 10E0     		b	.L45
 20131              	.L58:
2672:../src/sdcard.c ****     return(SD_CARD_ECC_FAILED);
 20132              		.loc 1 2672 0
 20133 02be 1120     		movs	r0, #17
 20134 02c0 0EE0     		b	.L45
 20135              	.L59:
2677:../src/sdcard.c ****     return(SD_CC_ERROR);
 20136              		.loc 1 2677 0
 20137 02c2 1220     		movs	r0, #18
 20138 02c4 0CE0     		b	.L45
 20139              	.L60:
2682:../src/sdcard.c ****     return(SD_GENERAL_UNKNOWN_ERROR);
 20140              		.loc 1 2682 0
 20141 02c6 1320     		movs	r0, #19
 20142 02c8 0AE0     		b	.L45
 20143              	.L61:
2687:../src/sdcard.c ****     return(SD_STREAM_READ_UNDERRUN);
 20144              		.loc 1 2687 0
 20145 02ca 1420     		movs	r0, #20
 20146 02cc 08E0     		b	.L45
 20147              	.L62:
2692:../src/sdcard.c ****     return(SD_STREAM_WRITE_OVERRUN);
 20148              		.loc 1 2692 0
 20149 02ce 1520     		movs	r0, #21
 20150 02d0 06E0     		b	.L45
 20151              	.L63:
2697:../src/sdcard.c ****     return(SD_CID_CSD_OVERWRITE);
 20152              		.loc 1 2697 0
 20153 02d2 1620     		movs	r0, #22
 20154 02d4 04E0     		b	.L45
 20155              	.L64:
2702:../src/sdcard.c ****     return(SD_WP_ERASE_SKIP);
 20156              		.loc 1 2702 0
 20157 02d6 1720     		movs	r0, #23
 20158 02d8 02E0     		b	.L45
 20159              	.L65:
2707:../src/sdcard.c ****     return(SD_CARD_ECC_DISABLED);
 20160              		.loc 1 2707 0
 20161 02da 1820     		movs	r0, #24
 20162 02dc 00E0     		b	.L45
 20163              	.L66:
2712:../src/sdcard.c ****     return(SD_ERASE_RESET);
 20164              		.loc 1 2712 0
 20165 02de 1920     		movs	r0, #25
 20166              	.LVL70:
 20167              	.L45:
2721:../src/sdcard.c **** }
 20168              		.loc 1 2721 0
 20169 02e0 3EBD     		pop	{r1, r2, r3, r4, r5, pc}
 20170              	.L69:
 20171 02e2 00BF     		.align	2
 20172              	.L68:
 20173 02e4 00000000 		.word	.LANCHOR0
 20174 02e8 00000000 		.word	SDIO_CmdInitStructure
 20175 02ec 00800140 		.word	1073840128
 20176 02f0 08E0FFFD 		.word	-33562616
 20177              		.cfi_endproc
 20178              	.LFE54:
 20180              		.align	1
 20181              		.thumb
 20182              		.thumb_func
 20184              	DMA_TxConfiguration:
 20185              	.LFB58:
2854:../src/sdcard.c **** 
2855:../src/sdcard.c **** /*******************************************************************************
2856:../src/sdcard.c **** * Function Name  : GPIO_Configuration
2857:../src/sdcard.c **** * Description    : Configures the SDIO Corresponding GPIO Ports
2858:../src/sdcard.c **** * Input          : None
2859:../src/sdcard.c **** * Output         : None
2860:../src/sdcard.c **** * Return         : None
2861:../src/sdcard.c **** *******************************************************************************/
2862:../src/sdcard.c **** static void GPIO_Configuration(void)
2863:../src/sdcard.c **** {
2864:../src/sdcard.c ****   GPIO_InitTypeDef  GPIO_InitStructure;
2865:../src/sdcard.c **** 
2866:../src/sdcard.c ****   /* GPIOC and GPIOD Periph clock enable */
2867:../src/sdcard.c ****   RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC | RCC_APB2Periph_GPIOD, ENABLE);
2868:../src/sdcard.c **** 
2869:../src/sdcard.c ****   /* Configure PC.08, PC.09, PC.10, PC.11, PC.12 pin: D0, D1, D2, D3, CLK pin */
2870:../src/sdcard.c ****   GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8 | GPIO_Pin_9 | GPIO_Pin_10 | GPIO_Pin_11 | GPIO_Pin_12;
2871:../src/sdcard.c ****   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
2872:../src/sdcard.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
2873:../src/sdcard.c ****   GPIO_Init(GPIOC, &GPIO_InitStructure);
2874:../src/sdcard.c **** 
2875:../src/sdcard.c ****   /* Configure PD.02 CMD line */
2876:../src/sdcard.c ****   GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
2877:../src/sdcard.c ****   GPIO_Init(GPIOD, &GPIO_InitStructure);
2878:../src/sdcard.c **** }
2879:../src/sdcard.c **** 
2880:../src/sdcard.c **** /*******************************************************************************
2881:../src/sdcard.c **** * Function Name  : DMA_TxConfiguration
2882:../src/sdcard.c **** * Description    : Configures the DMA2 Channel4 for SDIO Tx request.
2883:../src/sdcard.c **** * Input          : - BufferSRC: pointer to the source buffer
2884:../src/sdcard.c **** *                  - BufferSize: buffer size
2885:../src/sdcard.c **** * Output         : None
2886:../src/sdcard.c **** * Return         : None
2887:../src/sdcard.c **** *******************************************************************************/
2888:../src/sdcard.c **** static void DMA_TxConfiguration(uint32_t *BufferSRC, uint32_t BufferSize)
2889:../src/sdcard.c **** {
 20186              		.loc 1 2889 0
 20187              		.cfi_startproc
 20188              		@ args = 0, pretend = 0, frame = 48
 20189              		@ frame_needed = 0, uses_anonymous_args = 0
 20190              	.LVL71:
 20191 02f4 30B5     		push	{r4, r5, lr}
 20192              	.LCFI3:
 20193              		.cfi_def_cfa_offset 12
 20194 02f6 0546     		mov	r5, r0
 20195              		.cfi_offset 14, -4
 20196              		.cfi_offset 5, -8
 20197              		.cfi_offset 4, -12
 20198 02f8 8DB0     		sub	sp, sp, #52
 20199              	.LCFI4:
 20200              		.cfi_def_cfa_offset 64
2890:../src/sdcard.c ****   DMA_InitTypeDef DMA_InitStructure;
2891:../src/sdcard.c **** 
2892:../src/sdcard.c ****   DMA_ClearFlag(DMA2_FLAG_TC4 | DMA2_FLAG_TE4 | DMA2_FLAG_HT4 | DMA2_FLAG_GL4);
 20201              		.loc 1 2892 0
 20202 02fa 1448     		ldr	r0, .L71
 20203              	.LVL72:
2889:../src/sdcard.c **** {
 20204              		.loc 1 2889 0
 20205 02fc 0C46     		mov	r4, r1
 20206              		.loc 1 2892 0
 20207 02fe FFF7FEFF 		bl	DMA_ClearFlag
 20208              	.LVL73:
2893:../src/sdcard.c **** 
2894:../src/sdcard.c ****   /* DMA2 Channel4 disable */
2895:../src/sdcard.c ****   DMA_Cmd(DMA2_Channel4, DISABLE);
 20209              		.loc 1 2895 0
 20210 0302 0021     		movs	r1, #0
 20211 0304 1248     		ldr	r0, .L71+4
 20212 0306 FFF7FEFF 		bl	DMA_Cmd
2896:../src/sdcard.c **** 
2897:../src/sdcard.c ****   /* DMA2 Channel4 Config */
2898:../src/sdcard.c ****   DMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)SDIO_FIFO_Address;
2899:../src/sdcard.c ****   DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)BufferSRC;
2900:../src/sdcard.c ****   DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralDST;
2901:../src/sdcard.c ****   DMA_InitStructure.DMA_BufferSize = BufferSize / 4;
2902:../src/sdcard.c ****   DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
2903:../src/sdcard.c ****   DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
 20213              		.loc 1 2903 0
 20214 030a 8022     		movs	r2, #128
2898:../src/sdcard.c ****   DMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)SDIO_FIFO_Address;
 20215              		.loc 1 2898 0
 20216 030c 114B     		ldr	r3, .L71+8
 20217              		.loc 1 2903 0
 20218 030e 0692     		str	r2, [sp, #24]
2904:../src/sdcard.c ****   DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Word;
 20219              		.loc 1 2904 0
 20220 0310 4FF40072 		mov	r2, #512
2898:../src/sdcard.c ****   DMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)SDIO_FIFO_Address;
 20221              		.loc 1 2898 0
 20222 0314 0193     		str	r3, [sp, #4]
 20223              		.loc 1 2904 0
 20224 0316 0792     		str	r2, [sp, #28]
2900:../src/sdcard.c ****   DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralDST;
 20225              		.loc 1 2900 0
 20226 0318 1023     		movs	r3, #16
2905:../src/sdcard.c ****   DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Word;
 20227              		.loc 1 2905 0
 20228 031a 4FF40062 		mov	r2, #2048
2900:../src/sdcard.c ****   DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralDST;
 20229              		.loc 1 2900 0
 20230 031e 0393     		str	r3, [sp, #12]
 20231              		.loc 1 2905 0
 20232 0320 0892     		str	r2, [sp, #32]
2902:../src/sdcard.c ****   DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
 20233              		.loc 1 2902 0
 20234 0322 103B     		subs	r3, r3, #16
2906:../src/sdcard.c ****   DMA_InitStructure.DMA_Mode = DMA_Mode_Normal;
2907:../src/sdcard.c ****   DMA_InitStructure.DMA_Priority = DMA_Priority_High;
 20235              		.loc 1 2907 0
 20236 0324 4FF40052 		mov	r2, #8192
2908:../src/sdcard.c ****   DMA_InitStructure.DMA_M2M = DMA_M2M_Disable;
2909:../src/sdcard.c ****   DMA_Init(DMA2_Channel4, &DMA_InitStructure);
 20237              		.loc 1 2909 0
 20238 0328 01A9     		add	r1, sp, #4
2901:../src/sdcard.c ****   DMA_InitStructure.DMA_BufferSize = BufferSize / 4;
 20239              		.loc 1 2901 0
 20240 032a A408     		lsrs	r4, r4, #2
 20241              	.LVL74:
 20242              		.loc 1 2909 0
 20243 032c 0848     		ldr	r0, .L71+4
2899:../src/sdcard.c ****   DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)BufferSRC;
 20244              		.loc 1 2899 0
 20245 032e 0295     		str	r5, [sp, #8]
2901:../src/sdcard.c ****   DMA_InitStructure.DMA_BufferSize = BufferSize / 4;
 20246              		.loc 1 2901 0
 20247 0330 0494     		str	r4, [sp, #16]
2902:../src/sdcard.c ****   DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
 20248              		.loc 1 2902 0
 20249 0332 0593     		str	r3, [sp, #20]
2906:../src/sdcard.c ****   DMA_InitStructure.DMA_Mode = DMA_Mode_Normal;
 20250              		.loc 1 2906 0
 20251 0334 0993     		str	r3, [sp, #36]
2907:../src/sdcard.c ****   DMA_InitStructure.DMA_Priority = DMA_Priority_High;
 20252              		.loc 1 2907 0
 20253 0336 0A92     		str	r2, [sp, #40]
2908:../src/sdcard.c ****   DMA_InitStructure.DMA_M2M = DMA_M2M_Disable;
 20254              		.loc 1 2908 0
 20255 0338 0B93     		str	r3, [sp, #44]
 20256              		.loc 1 2909 0
 20257 033a FFF7FEFF 		bl	DMA_Init
2910:../src/sdcard.c **** 
2911:../src/sdcard.c ****   /* DMA2 Channel4 enable */
2912:../src/sdcard.c ****   DMA_Cmd(DMA2_Channel4, ENABLE);
 20258              		.loc 1 2912 0
 20259 033e 0448     		ldr	r0, .L71+4
 20260 0340 0121     		movs	r1, #1
 20261 0342 FFF7FEFF 		bl	DMA_Cmd
2913:../src/sdcard.c **** }
 20262              		.loc 1 2913 0
 20263 0346 0DB0     		add	sp, sp, #52
 20264 0348 30BD     		pop	{r4, r5, pc}
 20265              	.L72:
 20266 034a 00BF     		.align	2
 20267              	.L71:
 20268 034c 00F00010 		.word	268496896
 20269 0350 44040240 		.word	1073873988
 20270 0354 80800140 		.word	1073840256
 20271              		.cfi_endproc
 20272              	.LFE58:
 20274              		.align	1
 20275              		.thumb
 20276              		.thumb_func
 20278              	DMA_RxConfiguration:
 20279              	.LFB59:
2914:../src/sdcard.c **** 
2915:../src/sdcard.c **** /*******************************************************************************
2916:../src/sdcard.c **** * Function Name  : DMA_RxConfiguration
2917:../src/sdcard.c **** * Description    : Configures the DMA2 Channel4 for SDIO Rx request.
2918:../src/sdcard.c **** * Input          : - BufferDST: pointer to the destination buffer
2919:../src/sdcard.c **** *                  - BufferSize: buffer size
2920:../src/sdcard.c **** * Output         : None
2921:../src/sdcard.c **** * Return         : None
2922:../src/sdcard.c **** *******************************************************************************/
2923:../src/sdcard.c **** static void DMA_RxConfiguration(uint32_t *BufferDST, uint32_t BufferSize)
2924:../src/sdcard.c **** {
 20280              		.loc 1 2924 0
 20281              		.cfi_startproc
 20282              		@ args = 0, pretend = 0, frame = 48
 20283              		@ frame_needed = 0, uses_anonymous_args = 0
 20284              	.LVL75:
 20285 0358 30B5     		push	{r4, r5, lr}
 20286              	.LCFI5:
 20287              		.cfi_def_cfa_offset 12
 20288 035a 0546     		mov	r5, r0
 20289              		.cfi_offset 14, -4
 20290              		.cfi_offset 5, -8
 20291              		.cfi_offset 4, -12
 20292 035c 8DB0     		sub	sp, sp, #52
 20293              	.LCFI6:
 20294              		.cfi_def_cfa_offset 64
2925:../src/sdcard.c ****   DMA_InitTypeDef DMA_InitStructure;
2926:../src/sdcard.c **** 
2927:../src/sdcard.c ****   DMA_ClearFlag(DMA2_FLAG_TC4 | DMA2_FLAG_TE4 | DMA2_FLAG_HT4 | DMA2_FLAG_GL4);
 20295              		.loc 1 2927 0
 20296 035e 1348     		ldr	r0, .L74
 20297              	.LVL76:
2924:../src/sdcard.c **** {
 20298              		.loc 1 2924 0
 20299 0360 0C46     		mov	r4, r1
 20300              		.loc 1 2927 0
 20301 0362 FFF7FEFF 		bl	DMA_ClearFlag
 20302              	.LVL77:
2928:../src/sdcard.c **** 
2929:../src/sdcard.c ****   /* DMA2 Channel4 disable */
2930:../src/sdcard.c ****   DMA_Cmd(DMA2_Channel4, DISABLE);
 20303              		.loc 1 2930 0
 20304 0366 0021     		movs	r1, #0
 20305 0368 1148     		ldr	r0, .L74+4
 20306 036a FFF7FEFF 		bl	DMA_Cmd
2931:../src/sdcard.c **** 
2932:../src/sdcard.c ****   /* DMA2 Channel4 Config */
2933:../src/sdcard.c ****   DMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)SDIO_FIFO_Address;
2934:../src/sdcard.c ****   DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)BufferDST;
2935:../src/sdcard.c ****   DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralSRC;
2936:../src/sdcard.c ****   DMA_InitStructure.DMA_BufferSize = BufferSize / 4;
2937:../src/sdcard.c ****   DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
2938:../src/sdcard.c ****   DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
 20307              		.loc 1 2938 0
 20308 036e 8022     		movs	r2, #128
 20309 0370 0692     		str	r2, [sp, #24]
2933:../src/sdcard.c ****   DMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)SDIO_FIFO_Address;
 20310              		.loc 1 2933 0
 20311 0372 104B     		ldr	r3, .L74+8
2939:../src/sdcard.c ****   DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Word;
 20312              		.loc 1 2939 0
 20313 0374 4FF40072 		mov	r2, #512
 20314 0378 0792     		str	r2, [sp, #28]
2940:../src/sdcard.c ****   DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Word;
 20315              		.loc 1 2940 0
 20316 037a 4FF40062 		mov	r2, #2048
2933:../src/sdcard.c ****   DMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)SDIO_FIFO_Address;
 20317              		.loc 1 2933 0
 20318 037e 0193     		str	r3, [sp, #4]
 20319              		.loc 1 2940 0
 20320 0380 0892     		str	r2, [sp, #32]
2935:../src/sdcard.c ****   DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralSRC;
 20321              		.loc 1 2935 0
 20322 0382 0023     		movs	r3, #0
2941:../src/sdcard.c ****   DMA_InitStructure.DMA_Mode = DMA_Mode_Normal;
2942:../src/sdcard.c ****   DMA_InitStructure.DMA_Priority = DMA_Priority_High;
 20323              		.loc 1 2942 0
 20324 0384 4FF40052 		mov	r2, #8192
2943:../src/sdcard.c ****   DMA_InitStructure.DMA_M2M = DMA_M2M_Disable;
2944:../src/sdcard.c ****   DMA_Init(DMA2_Channel4, &DMA_InitStructure);
 20325              		.loc 1 2944 0
 20326 0388 01A9     		add	r1, sp, #4
2936:../src/sdcard.c ****   DMA_InitStructure.DMA_BufferSize = BufferSize / 4;
 20327              		.loc 1 2936 0
 20328 038a A408     		lsrs	r4, r4, #2
 20329              	.LVL78:
 20330              		.loc 1 2944 0
 20331 038c 0848     		ldr	r0, .L74+4
2934:../src/sdcard.c ****   DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)BufferDST;
 20332              		.loc 1 2934 0
 20333 038e 0295     		str	r5, [sp, #8]
2935:../src/sdcard.c ****   DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralSRC;
 20334              		.loc 1 2935 0
 20335 0390 0393     		str	r3, [sp, #12]
2936:../src/sdcard.c ****   DMA_InitStructure.DMA_BufferSize = BufferSize / 4;
 20336              		.loc 1 2936 0
 20337 0392 0494     		str	r4, [sp, #16]
2937:../src/sdcard.c ****   DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
 20338              		.loc 1 2937 0
 20339 0394 0593     		str	r3, [sp, #20]
2941:../src/sdcard.c ****   DMA_InitStructure.DMA_Mode = DMA_Mode_Normal;
 20340              		.loc 1 2941 0
 20341 0396 0993     		str	r3, [sp, #36]
2942:../src/sdcard.c ****   DMA_InitStructure.DMA_Priority = DMA_Priority_High;
 20342              		.loc 1 2942 0
 20343 0398 0A92     		str	r2, [sp, #40]
2943:../src/sdcard.c ****   DMA_InitStructure.DMA_M2M = DMA_M2M_Disable;
 20344              		.loc 1 2943 0
 20345 039a 0B93     		str	r3, [sp, #44]
 20346              		.loc 1 2944 0
 20347 039c FFF7FEFF 		bl	DMA_Init
2945:../src/sdcard.c **** 
2946:../src/sdcard.c ****   /* DMA2 Channel4 enable */
2947:../src/sdcard.c ****   DMA_Cmd(DMA2_Channel4, ENABLE);
 20348              		.loc 1 2947 0
 20349 03a0 0348     		ldr	r0, .L74+4
 20350 03a2 0121     		movs	r1, #1
 20351 03a4 FFF7FEFF 		bl	DMA_Cmd
2948:../src/sdcard.c **** }
 20352              		.loc 1 2948 0
 20353 03a8 0DB0     		add	sp, sp, #52
 20354 03aa 30BD     		pop	{r4, r5, pc}
 20355              	.L75:
 20356              		.align	2
 20357              	.L74:
 20358 03ac 00F00010 		.word	268496896
 20359 03b0 44040240 		.word	1073873988
 20360 03b4 80800140 		.word	1073840256
 20361              		.cfi_endproc
 20362              	.LFE59:
 20364              		.align	1
 20365              		.thumb
 20366              		.thumb_func
 20368              	SDEnWideBus:
 20369              	.LFB53:
2454:../src/sdcard.c **** {
 20370              		.loc 1 2454 0
 20371              		.cfi_startproc
 20372              		@ args = 0, pretend = 0, frame = 8
 20373              		@ frame_needed = 0, uses_anonymous_args = 0
 20374              	.LVL79:
 20375 03b8 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 20376              	.LCFI7:
 20377              		.cfi_def_cfa_offset 48
2454:../src/sdcard.c **** {
 20378              		.loc 1 2454 0
 20379 03bc 8146     		mov	r9, r0
 20380              		.cfi_offset 14, -4
 20381              		.cfi_offset 11, -8
 20382              		.cfi_offset 10, -12
 20383              		.cfi_offset 9, -16
 20384              		.cfi_offset 8, -20
 20385              		.cfi_offset 7, -24
 20386              		.cfi_offset 6, -28
 20387              		.cfi_offset 5, -32
 20388              		.cfi_offset 4, -36
 20389              		.cfi_offset 2, -40
 20390              		.cfi_offset 1, -44
 20391              		.cfi_offset 0, -48
2459:../src/sdcard.c ****   if (SDIO_GetResponse(SDIO_RESP1) & SD_CARD_LOCKED)
 20392              		.loc 1 2459 0
 20393 03be 0020     		movs	r0, #0
 20394              	.LVL80:
 20395 03c0 FFF7FEFF 		bl	SDIO_GetResponse
 20396 03c4 10F00075 		ands	r5, r0, #33554432
 20397 03c8 40F0DC80 		bne	.L88
 20398              	.LVL81:
 20399              	.LBB4:
 20400              	.LBB5:
2739:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = (uint32_t)8;
 20401              		.loc 1 2739 0
 20402 03cc 704C     		ldr	r4, .L95
2740:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SET_BLOCKLEN;
 20403              		.loc 1 2740 0
 20404 03ce 4FF01008 		mov	r8, #16
2741:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 20405              		.loc 1 2741 0
 20406 03d2 4027     		movs	r7, #64
2739:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = (uint32_t)8;
 20407              		.loc 1 2739 0
 20408 03d4 4FF0080A 		mov	sl, #8
2743:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 20409              		.loc 1 2743 0
 20410 03d8 4FF48066 		mov	r6, #1024
2744:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 20411              		.loc 1 2744 0
 20412 03dc 2046     		mov	r0, r4
2739:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = (uint32_t)8;
 20413              		.loc 1 2739 0
 20414 03de C4F800A0 		str	sl, [r4, #0]
2740:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SET_BLOCKLEN;
 20415              		.loc 1 2740 0
 20416 03e2 C4F80480 		str	r8, [r4, #4]
2741:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 20417              		.loc 1 2741 0
 20418 03e6 A760     		str	r7, [r4, #8]
2742:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 20419              		.loc 1 2742 0
 20420 03e8 E560     		str	r5, [r4, #12]
2743:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 20421              		.loc 1 2743 0
 20422 03ea 2661     		str	r6, [r4, #16]
2735:../src/sdcard.c ****   uint32_t tempscr[2] = {0, 0};
 20423              		.loc 1 2735 0
 20424 03ec 0095     		str	r5, [sp, #0]
2744:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 20425              		.loc 1 2744 0
 20426 03ee FFF7FEFF 		bl	SDIO_SendCommand
2746:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_SET_BLOCKLEN);
 20427              		.loc 1 2746 0
 20428 03f2 4046     		mov	r0, r8
 20429 03f4 FFF72CFE 		bl	CmdResp1Error
 20430              	.LVL82:
2748:../src/sdcard.c ****   if (errorstatus != SD_OK)
 20431              		.loc 1 2748 0
 20432 03f8 2A28     		cmp	r0, #42
 20433 03fa 40F0C680 		bne	.L77
2754:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) RCA << 16;
 20434              		.loc 1 2754 0
 20435 03fe DFF8A081 		ldr	r8, .L95+16
2755:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_APP_CMD;
 20436              		.loc 1 2755 0
 20437 0402 4FF0370B 		mov	fp, #55
2754:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) RCA << 16;
 20438              		.loc 1 2754 0
 20439 0406 D8F80030 		ldr	r3, [r8, #0]
2759:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 20440              		.loc 1 2759 0
 20441 040a 2046     		mov	r0, r4
 20442              	.LVL83:
2754:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) RCA << 16;
 20443              		.loc 1 2754 0
 20444 040c 1B04     		lsls	r3, r3, #16
 20445 040e 2360     		str	r3, [r4, #0]
2755:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_APP_CMD;
 20446              		.loc 1 2755 0
 20447 0410 C4F804B0 		str	fp, [r4, #4]
2756:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 20448              		.loc 1 2756 0
 20449 0414 A760     		str	r7, [r4, #8]
2757:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 20450              		.loc 1 2757 0
 20451 0416 E560     		str	r5, [r4, #12]
2758:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 20452              		.loc 1 2758 0
 20453 0418 2661     		str	r6, [r4, #16]
2759:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 20454              		.loc 1 2759 0
 20455 041a FFF7FEFF 		bl	SDIO_SendCommand
2761:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_APP_CMD);
 20456              		.loc 1 2761 0
 20457 041e 5846     		mov	r0, fp
 20458 0420 FFF716FE 		bl	CmdResp1Error
 20459              	.LVL84:
2763:../src/sdcard.c ****   if (errorstatus != SD_OK)
 20460              		.loc 1 2763 0
 20461 0424 2A28     		cmp	r0, #42
 20462 0426 40F0B080 		bne	.L77
2767:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
 20463              		.loc 1 2767 0
 20464 042a 5A48     		ldr	r0, .L95+4
 20465              	.LVL85:
 20466 042c 5A4B     		ldr	r3, .L95+8
2768:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataLength = 8;
 20467              		.loc 1 2768 0
 20468 042e C0F804A0 		str	sl, [r0, #4]
2767:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
 20469              		.loc 1 2767 0
 20470 0432 0360     		str	r3, [r0, #0]
2769:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataBlockSize = SDIO_DataBlockSize_8b;
 20471              		.loc 1 2769 0
 20472 0434 3023     		movs	r3, #48
 20473 0436 8360     		str	r3, [r0, #8]
2770:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferDir = SDIO_TransferDir_ToSDIO;
 20474              		.loc 1 2770 0
 20475 0438 2E3B     		subs	r3, r3, #46
 20476 043a C360     		str	r3, [r0, #12]
2772:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DPSM = SDIO_DPSM_Enable;
 20477              		.loc 1 2772 0
 20478 043c 013B     		subs	r3, r3, #1
 20479 043e 4361     		str	r3, [r0, #20]
2771:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferMode = SDIO_TransferMode_Block;
 20480              		.loc 1 2771 0
 20481 0440 0561     		str	r5, [r0, #16]
2778:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SD_APP_SEND_SCR;
 20482              		.loc 1 2778 0
 20483 0442 0AF12B0A 		add	sl, sl, #43
2773:../src/sdcard.c ****   SDIO_DataConfig(&SDIO_DataInitStructure);
 20484              		.loc 1 2773 0
 20485 0446 FFF7FEFF 		bl	SDIO_DataConfig
2782:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 20486              		.loc 1 2782 0
 20487 044a 2046     		mov	r0, r4
2777:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = 0x0;
 20488              		.loc 1 2777 0
 20489 044c 2560     		str	r5, [r4, #0]
2778:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SD_APP_SEND_SCR;
 20490              		.loc 1 2778 0
 20491 044e C4F804A0 		str	sl, [r4, #4]
2779:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 20492              		.loc 1 2779 0
 20493 0452 A760     		str	r7, [r4, #8]
2780:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 20494              		.loc 1 2780 0
 20495 0454 E560     		str	r5, [r4, #12]
2781:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 20496              		.loc 1 2781 0
 20497 0456 2661     		str	r6, [r4, #16]
2782:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 20498              		.loc 1 2782 0
 20499 0458 FFF7FEFF 		bl	SDIO_SendCommand
2784:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_SD_APP_SEND_SCR);
 20500              		.loc 1 2784 0
 20501 045c 5046     		mov	r0, sl
 20502 045e FFF7F7FD 		bl	CmdResp1Error
 20503              	.LVL86:
2786:../src/sdcard.c ****   if (errorstatus != SD_OK)
 20504              		.loc 1 2786 0
 20505 0462 2A28     		cmp	r0, #42
 20506 0464 40F09180 		bne	.L77
 20507 0468 ADF10405 		sub	r5, sp, #4
 20508 046c 08E0     		b	.L92
 20509              	.LVL87:
 20510              	.L81:
2793:../src/sdcard.c ****     if (SDIO_GetFlagStatus(SDIO_FLAG_RXDAVL) != RESET)
 20511              		.loc 1 2793 0
 20512 046e 4FF40010 		mov	r0, #2097152
 20513 0472 FFF7FEFF 		bl	SDIO_GetFlagStatus
 20514 0476 18B1     		cbz	r0, .L92
2795:../src/sdcard.c ****       *(tempscr + index) = SDIO_ReadData();
 20515              		.loc 1 2795 0
 20516 0478 FFF7FEFF 		bl	SDIO_ReadData
 20517 047c 45F8040F 		str	r0, [r5, #4]!
 20518              	.L92:
2791:../src/sdcard.c ****   while (!(SDIO->STA & (SDIO_FLAG_RXOVERR | SDIO_FLAG_DCRCFAIL | SDIO_FLAG_DTIMEOUT | SDIO_FLAG_DBC
 20519              		.loc 1 2791 0
 20520 0480 464B     		ldr	r3, .L95+12
 20521 0482 5A6B     		ldr	r2, [r3, #52]
 20522 0484 40F22A63 		movw	r3, #1578
 20523 0488 02EA0303 		and	r3, r2, r3
 20524 048c 002B     		cmp	r3, #0
 20525 048e EED0     		beq	.L81
2800:../src/sdcard.c ****   if (SDIO_GetFlagStatus(SDIO_FLAG_DTIMEOUT) != RESET)
 20526              		.loc 1 2800 0
 20527 0490 0820     		movs	r0, #8
 20528 0492 FFF7FEFF 		bl	SDIO_GetFlagStatus
 20529 0496 20B1     		cbz	r0, .L82
2802:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_DTIMEOUT);
 20530              		.loc 1 2802 0
 20531 0498 0820     		movs	r0, #8
 20532 049a FFF7FEFF 		bl	SDIO_ClearFlag
 20533              	.LVL88:
2804:../src/sdcard.c ****     return(errorstatus);
 20534              		.loc 1 2804 0
 20535 049e 0420     		movs	r0, #4
 20536 04a0 73E0     		b	.L77
 20537              	.LVL89:
 20538              	.L82:
2806:../src/sdcard.c ****   else if (SDIO_GetFlagStatus(SDIO_FLAG_DCRCFAIL) != RESET)
 20539              		.loc 1 2806 0
 20540 04a2 0220     		movs	r0, #2
 20541 04a4 FFF7FEFF 		bl	SDIO_GetFlagStatus
 20542 04a8 20B1     		cbz	r0, .L83
2808:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_DCRCFAIL);
 20543              		.loc 1 2808 0
 20544 04aa 0220     		movs	r0, #2
 20545 04ac FFF7FEFF 		bl	SDIO_ClearFlag
 20546              	.LVL90:
2810:../src/sdcard.c ****     return(errorstatus);
 20547              		.loc 1 2810 0
 20548 04b0 0220     		movs	r0, #2
 20549 04b2 6AE0     		b	.L77
 20550              	.LVL91:
 20551              	.L83:
2812:../src/sdcard.c ****   else if (SDIO_GetFlagStatus(SDIO_FLAG_RXOVERR) != RESET)
 20552              		.loc 1 2812 0
 20553 04b4 2020     		movs	r0, #32
 20554 04b6 FFF7FEFF 		bl	SDIO_GetFlagStatus
 20555 04ba 20B1     		cbz	r0, .L84
2814:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_RXOVERR);
 20556              		.loc 1 2814 0
 20557 04bc 2020     		movs	r0, #32
 20558 04be FFF7FEFF 		bl	SDIO_ClearFlag
 20559              	.LVL92:
2816:../src/sdcard.c ****     return(errorstatus);
 20560              		.loc 1 2816 0
 20561 04c2 0620     		movs	r0, #6
 20562 04c4 61E0     		b	.L77
 20563              	.LVL93:
 20564              	.L84:
2818:../src/sdcard.c ****   else if (SDIO_GetFlagStatus(SDIO_FLAG_STBITERR) != RESET)
 20565              		.loc 1 2818 0
 20566 04c6 4FF40070 		mov	r0, #512
 20567 04ca FFF7FEFF 		bl	SDIO_GetFlagStatus
 20568 04ce 0646     		mov	r6, r0
 20569 04d0 28B1     		cbz	r0, .L85
2820:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_STBITERR);
 20570              		.loc 1 2820 0
 20571 04d2 4FF40070 		mov	r0, #512
 20572 04d6 FFF7FEFF 		bl	SDIO_ClearFlag
 20573              	.LVL94:
2822:../src/sdcard.c ****     return(errorstatus);
 20574              		.loc 1 2822 0
 20575 04da 0720     		movs	r0, #7
 20576              	.LVL95:
 20577 04dc 55E0     		b	.L77
 20578              	.LVL96:
 20579              	.L85:
2826:../src/sdcard.c ****   SDIO_ClearFlag(SDIO_STATIC_FLAGS);
 20580              		.loc 1 2826 0
 20581 04de 40F2FF50 		movw	r0, #1535
 20582 04e2 FFF7FEFF 		bl	SDIO_ClearFlag
 20583 04e6 009B     		ldr	r3, [sp, #0]
 20584              	.LBE5:
 20585              	.LBE4:
2474:../src/sdcard.c ****   if (NewState == ENABLE)
 20586              		.loc 1 2474 0
 20587 04e8 B9F1010F 		cmp	r9, #1
 20588              	.LBB7:
 20589              	.LBB6:
2826:../src/sdcard.c ****   SDIO_ClearFlag(SDIO_STATIC_FLAGS);
 20590              		.loc 1 2826 0
 20591 04ec 1BBA     		rev	r3, r3
 20592              	.LVL97:
 20593              	.LBE6:
 20594              	.LBE7:
2474:../src/sdcard.c ****   if (NewState == ENABLE)
 20595              		.loc 1 2474 0
 20596 04ee 1ED1     		bne	.L93
2477:../src/sdcard.c ****     if ((scr[1] & SD_WIDE_BUS_SUPPORT) != SD_ALLZERO)
 20597              		.loc 1 2477 0
 20598 04f0 13F4802F 		tst	r3, #262144
 20599 04f4 48D0     		beq	.L90
2480:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) RCA << 16;
 20600              		.loc 1 2480 0
 20601 04f6 D8F80030 		ldr	r3, [r8, #0]
 20602 04fa 254D     		ldr	r5, .L95
 20603 04fc 1B04     		lsls	r3, r3, #16
2481:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_APP_CMD;
 20604              		.loc 1 2481 0
 20605 04fe 09F13609 		add	r9, r9, #54
2482:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 20606              		.loc 1 2482 0
 20607 0502 4FF04008 		mov	r8, #64
2484:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 20608              		.loc 1 2484 0
 20609 0506 4FF48067 		mov	r7, #1024
2480:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) RCA << 16;
 20610              		.loc 1 2480 0
 20611 050a 2360     		str	r3, [r4, #0]
2485:../src/sdcard.c ****       SDIO_SendCommand(&SDIO_CmdInitStructure);
 20612              		.loc 1 2485 0
 20613 050c 2846     		mov	r0, r5
2481:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_APP_CMD;
 20614              		.loc 1 2481 0
 20615 050e C4F80490 		str	r9, [r4, #4]
2482:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 20616              		.loc 1 2482 0
 20617 0512 C4F80880 		str	r8, [r4, #8]
2483:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 20618              		.loc 1 2483 0
 20619 0516 E660     		str	r6, [r4, #12]
2484:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 20620              		.loc 1 2484 0
 20621 0518 2761     		str	r7, [r4, #16]
2485:../src/sdcard.c ****       SDIO_SendCommand(&SDIO_CmdInitStructure);
 20622              		.loc 1 2485 0
 20623 051a FFF7FEFF 		bl	SDIO_SendCommand
2487:../src/sdcard.c ****       errorstatus = CmdResp1Error(SDIO_APP_CMD);
 20624              		.loc 1 2487 0
 20625 051e 4846     		mov	r0, r9
 20626 0520 FFF796FD 		bl	CmdResp1Error
 20627              	.LVL98:
2489:../src/sdcard.c ****       if (errorstatus != SD_OK)
 20628              		.loc 1 2489 0
 20629 0524 2A28     		cmp	r0, #42
 20630 0526 30D1     		bne	.L77
2495:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Argument = 0x2;
 20631              		.loc 1 2495 0
 20632 0528 0223     		movs	r3, #2
 20633 052a 2B60     		str	r3, [r5, #0]
 20634 052c 1CE0     		b	.L94
 20635              	.LVL99:
 20636              	.L93:
2519:../src/sdcard.c ****     if ((scr[1] & SD_SINGLE_BUS_SUPPORT) != SD_ALLZERO)
 20637              		.loc 1 2519 0
 20638 052e 13F4803F 		tst	r3, #65536
 20639 0532 29D0     		beq	.L90
2522:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) RCA << 16;
 20640              		.loc 1 2522 0
 20641 0534 D8F80030 		ldr	r3, [r8, #0]
 20642 0538 154D     		ldr	r5, .L95
 20643 053a 1B04     		lsls	r3, r3, #16
2523:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_APP_CMD;
 20644              		.loc 1 2523 0
 20645 053c 4FF03709 		mov	r9, #55
2524:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 20646              		.loc 1 2524 0
 20647 0540 4FF04008 		mov	r8, #64
2526:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 20648              		.loc 1 2526 0
 20649 0544 4FF48067 		mov	r7, #1024
2522:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) RCA << 16;
 20650              		.loc 1 2522 0
 20651 0548 2360     		str	r3, [r4, #0]
2527:../src/sdcard.c ****       SDIO_SendCommand(&SDIO_CmdInitStructure);
 20652              		.loc 1 2527 0
 20653 054a 2846     		mov	r0, r5
2523:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_APP_CMD;
 20654              		.loc 1 2523 0
 20655 054c C4F80490 		str	r9, [r4, #4]
2524:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 20656              		.loc 1 2524 0
 20657 0550 C4F80880 		str	r8, [r4, #8]
2525:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 20658              		.loc 1 2525 0
 20659 0554 E660     		str	r6, [r4, #12]
2526:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 20660              		.loc 1 2526 0
 20661 0556 2761     		str	r7, [r4, #16]
2527:../src/sdcard.c ****       SDIO_SendCommand(&SDIO_CmdInitStructure);
 20662              		.loc 1 2527 0
 20663 0558 FFF7FEFF 		bl	SDIO_SendCommand
2530:../src/sdcard.c ****       errorstatus = CmdResp1Error(SDIO_APP_CMD);
 20664              		.loc 1 2530 0
 20665 055c 4846     		mov	r0, r9
 20666 055e FFF777FD 		bl	CmdResp1Error
 20667              	.LVL100:
2532:../src/sdcard.c ****       if (errorstatus != SD_OK)
 20668              		.loc 1 2532 0
 20669 0562 2A28     		cmp	r0, #42
 20670 0564 11D1     		bne	.L77
2538:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Argument = 0x00;
 20671              		.loc 1 2538 0
 20672 0566 2E60     		str	r6, [r5, #0]
 20673              	.LVL101:
 20674              	.L94:
2539:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_APP_SD_SET_BUSWIDTH;
 20675              		.loc 1 2539 0
 20676 0568 0624     		movs	r4, #6
2543:../src/sdcard.c ****       SDIO_SendCommand(&SDIO_CmdInitStructure);
 20677              		.loc 1 2543 0
 20678 056a 2846     		mov	r0, r5
2539:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_APP_SD_SET_BUSWIDTH;
 20679              		.loc 1 2539 0
 20680 056c 6C60     		str	r4, [r5, #4]
2540:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 20681              		.loc 1 2540 0
 20682 056e C5F80880 		str	r8, [r5, #8]
2541:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 20683              		.loc 1 2541 0
 20684 0572 EE60     		str	r6, [r5, #12]
2542:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 20685              		.loc 1 2542 0
 20686 0574 2F61     		str	r7, [r5, #16]
2543:../src/sdcard.c ****       SDIO_SendCommand(&SDIO_CmdInitStructure);
 20687              		.loc 1 2543 0
 20688 0576 FFF7FEFF 		bl	SDIO_SendCommand
2545:../src/sdcard.c ****       errorstatus = CmdResp1Error(SDIO_APP_SD_SET_BUSWIDTH);
 20689              		.loc 1 2545 0
 20690 057a 2046     		mov	r0, r4
2560:../src/sdcard.c **** }
 20691              		.loc 1 2560 0
 20692 057c 03B0     		add	sp, sp, #12
 20693 057e BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
2545:../src/sdcard.c ****       errorstatus = CmdResp1Error(SDIO_APP_SD_SET_BUSWIDTH);
 20694              		.loc 1 2545 0
 20695 0582 65E5     		b	CmdResp1Error
 20696              	.LVL102:
 20697              	.L88:
2462:../src/sdcard.c ****     return(errorstatus);
 20698              		.loc 1 2462 0
 20699 0584 0E20     		movs	r0, #14
 20700 0586 00E0     		b	.L77
 20701              	.LVL103:
 20702              	.L90:
2557:../src/sdcard.c ****       return(errorstatus);
 20703              		.loc 1 2557 0
 20704 0588 2520     		movs	r0, #37
 20705              	.L77:
2560:../src/sdcard.c **** }
 20706              		.loc 1 2560 0
 20707 058a 03B0     		add	sp, sp, #12
 20708 058c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 20709              	.L96:
 20710              		.align	2
 20711              	.L95:
 20712 0590 00000000 		.word	SDIO_CmdInitStructure
 20713 0594 00000000 		.word	SDIO_DataInitStructure
 20714 0598 FFFF0F00 		.word	1048575
 20715 059c 00800140 		.word	1073840128
 20716 05a0 00000000 		.word	.LANCHOR0
 20717              		.cfi_endproc
 20718              	.LFE53:
 20720              		.align	1
 20721              		.global	SD_PowerON
 20722              		.thumb
 20723              		.thumb_func
 20725              	SD_PowerON:
 20726              	.LFB30:
 183:../src/sdcard.c **** {
 20727              		.loc 1 183 0
 20728              		.cfi_startproc
 20729              		@ args = 0, pretend = 0, frame = 0
 20730              		@ frame_needed = 0, uses_anonymous_args = 0
 20731              	.LVL104:
 191:../src/sdcard.c ****   SDIO_InitStructure.SDIO_ClockDiv = SDIO_INIT_CLK_DIV; /* HCLK = 72MHz, SDIOCLK = 72MHz, SDIO_CK =
 20732              		.loc 1 191 0
 20733 05a4 6D48     		ldr	r0, .L118
 183:../src/sdcard.c **** {
 20734              		.loc 1 183 0
 20735 05a6 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 20736              	.LCFI8:
 20737              		.cfi_def_cfa_offset 40
 192:../src/sdcard.c ****   SDIO_InitStructure.SDIO_ClockEdge = SDIO_ClockEdge_Rising;
 20738              		.loc 1 192 0
 20739 05aa 0025     		movs	r5, #0
 20740              		.cfi_offset 14, -4
 20741              		.cfi_offset 11, -8
 20742              		.cfi_offset 10, -12
 20743              		.cfi_offset 9, -16
 20744              		.cfi_offset 8, -20
 20745              		.cfi_offset 7, -24
 20746              		.cfi_offset 6, -28
 20747              		.cfi_offset 5, -32
 20748              		.cfi_offset 4, -36
 20749              		.cfi_offset 3, -40
 191:../src/sdcard.c ****   SDIO_InitStructure.SDIO_ClockDiv = SDIO_INIT_CLK_DIV; /* HCLK = 72MHz, SDIOCLK = 72MHz, SDIO_CK =
 20750              		.loc 1 191 0
 20751 05ac B223     		movs	r3, #178
 20752 05ae 0375     		strb	r3, [r0, #20]
 192:../src/sdcard.c ****   SDIO_InitStructure.SDIO_ClockEdge = SDIO_ClockEdge_Rising;
 20753              		.loc 1 192 0
 20754 05b0 0560     		str	r5, [r0, #0]
 193:../src/sdcard.c ****   SDIO_InitStructure.SDIO_ClockBypass = SDIO_ClockBypass_Disable;
 20755              		.loc 1 193 0
 20756 05b2 4560     		str	r5, [r0, #4]
 194:../src/sdcard.c ****   SDIO_InitStructure.SDIO_ClockPowerSave = SDIO_ClockPowerSave_Disable;
 20757              		.loc 1 194 0
 20758 05b4 8560     		str	r5, [r0, #8]
 195:../src/sdcard.c ****   SDIO_InitStructure.SDIO_BusWide = SDIO_BusWide_1b;
 20759              		.loc 1 195 0
 20760 05b6 C560     		str	r5, [r0, #12]
 196:../src/sdcard.c ****   SDIO_InitStructure.SDIO_HardwareFlowControl = SDIO_HardwareFlowControl_Disable;
 20761              		.loc 1 196 0
 20762 05b8 0561     		str	r5, [r0, #16]
 207:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = 0x0;
 20763              		.loc 1 207 0
 20764 05ba 694C     		ldr	r4, .L118+4
 197:../src/sdcard.c ****   SDIO_Init(&SDIO_InitStructure);
 20765              		.loc 1 197 0
 20766 05bc FFF7FEFF 		bl	SDIO_Init
 200:../src/sdcard.c ****   SDIO_SetPowerState(SDIO_PowerState_ON);
 20767              		.loc 1 200 0
 20768 05c0 0320     		movs	r0, #3
 20769 05c2 FFF7FEFF 		bl	SDIO_SetPowerState
 203:../src/sdcard.c ****   SDIO_ClockCmd(ENABLE);
 20770              		.loc 1 203 0
 20771 05c6 0120     		movs	r0, #1
 20772 05c8 FFF7FEFF 		bl	SDIO_ClockCmd
 211:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 20773              		.loc 1 211 0
 20774 05cc 4FF48063 		mov	r3, #1024
 212:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 20775              		.loc 1 212 0
 20776 05d0 2046     		mov	r0, r4
 207:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = 0x0;
 20777              		.loc 1 207 0
 20778 05d2 2560     		str	r5, [r4, #0]
 208:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_GO_IDLE_STATE;
 20779              		.loc 1 208 0
 20780 05d4 6560     		str	r5, [r4, #4]
 209:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_No;
 20781              		.loc 1 209 0
 20782 05d6 A560     		str	r5, [r4, #8]
 210:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 20783              		.loc 1 210 0
 20784 05d8 E560     		str	r5, [r4, #12]
 211:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 20785              		.loc 1 211 0
 20786 05da 2361     		str	r3, [r4, #16]
 212:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 20787              		.loc 1 212 0
 20788 05dc 42F21075 		movw	r5, #10000
 20789 05e0 FFF7FEFF 		bl	SDIO_SendCommand
 20790              	.LVL105:
 20791 05e4 02E0     		b	.L98
 20792              	.LVL106:
 20793              	.L100:
 20794              	.LBB14:
 20795              	.LBB16:
2096:../src/sdcard.c ****   while ((timeout > 0) && (SDIO_GetFlagStatus(SDIO_FLAG_CMDSENT) == RESET))
 20796              		.loc 1 2096 0
 20797 05e6 013D     		subs	r5, r5, #1
 20798 05e8 00F09380 		beq	.L114
 20799              	.L98:
 20800 05ec 8020     		movs	r0, #128
 20801 05ee FFF7FEFF 		bl	SDIO_GetFlagStatus
 20802 05f2 0028     		cmp	r0, #0
 20803 05f4 F7D0     		beq	.L100
 20804 05f6 92E0     		b	.L117
 20805              	.LVL107:
 20806              	.L103:
 20807              	.LBE16:
 20808              	.LBE14:
 20809              	.LBB18:
 20810              	.LBB20:
2132:../src/sdcard.c ****     status = SDIO->STA;
 20811              		.loc 1 2132 0
 20812 05f8 5A4A     		ldr	r2, .L118+8
 20813              	.LVL108:
2131:../src/sdcard.c ****     timeout--;
 20814              		.loc 1 2131 0
 20815 05fa 013B     		subs	r3, r3, #1
 20816              	.LVL109:
2132:../src/sdcard.c ****     status = SDIO->STA;
 20817              		.loc 1 2132 0
 20818 05fc 526B     		ldr	r2, [r2, #52]
 20819              	.LVL110:
 20820              	.L113:
2129:../src/sdcard.c ****   while (!(status & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT)) && (timeout > 0)
 20821              		.loc 1 2129 0
 20822 05fe 12F0450F 		tst	r2, #69
 20823 0602 02D1     		bne	.L102
 20824 0604 002B     		cmp	r3, #0
 20825 0606 F7D1     		bne	.L103
 20826 0608 03E0     		b	.L104
 20827              	.L102:
2135:../src/sdcard.c ****   if ((timeout == 0) || (status & SDIO_FLAG_CTIMEOUT))
 20828              		.loc 1 2135 0
 20829 060a 13B1     		cbz	r3, .L104
 20830 060c 12F0040F 		tst	r2, #4
 20831 0610 14D0     		beq	.L105
 20832              	.L104:
 20833              	.LVL111:
2139:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_CTIMEOUT);
 20834              		.loc 1 2139 0
 20835 0612 0420     		movs	r0, #4
 20836 0614 FFF7FEFF 		bl	SDIO_ClearFlag
 20837              	.LVL112:
 20838              	.LBE20:
 20839              	.LBE18:
 247:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 20840              		.loc 1 247 0
 20841 0618 4023     		movs	r3, #64
 245:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = 0x00;
 20842              		.loc 1 245 0
 20843 061a 0025     		movs	r5, #0
 246:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_APP_CMD;
 20844              		.loc 1 246 0
 20845 061c 3726     		movs	r6, #55
 247:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 20846              		.loc 1 247 0
 20847 061e A360     		str	r3, [r4, #8]
 250:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
 20848              		.loc 1 250 0
 20849 0620 4F48     		ldr	r0, .L118+4
 249:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 20850              		.loc 1 249 0
 20851 0622 4FF48063 		mov	r3, #1024
 20852 0626 2361     		str	r3, [r4, #16]
 245:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = 0x00;
 20853              		.loc 1 245 0
 20854 0628 2560     		str	r5, [r4, #0]
 246:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_APP_CMD;
 20855              		.loc 1 246 0
 20856 062a 6660     		str	r6, [r4, #4]
 248:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 20857              		.loc 1 248 0
 20858 062c E560     		str	r5, [r4, #12]
 250:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
 20859              		.loc 1 250 0
 20860 062e FFF7FEFF 		bl	SDIO_SendCommand
 251:../src/sdcard.c ****     errorstatus = CmdResp1Error(SDIO_APP_CMD);
 20861              		.loc 1 251 0
 20862 0632 3046     		mov	r0, r6
 20863 0634 FFF70CFD 		bl	CmdResp1Error
 187:../src/sdcard.c ****   uint32_t SDType = SD_STD_CAPACITY;
 20864              		.loc 1 187 0
 20865 0638 A946     		mov	r9, r5
 20866 063a 07E0     		b	.L106
 20867              	.LVL113:
 20868              	.L105:
 20869              	.LBB22:
 20870              	.LBB19:
2143:../src/sdcard.c ****   if (status & SDIO_FLAG_CMDREND)
 20871              		.loc 1 2143 0
 20872 063c 12F0400F 		tst	r2, #64
 20873 0640 00F08580 		beq	.L107
2147:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_CMDREND);
 20874              		.loc 1 2147 0
 20875 0644 4020     		movs	r0, #64
 20876 0646 FFF7FEFF 		bl	SDIO_ClearFlag
 20877              	.LVL114:
 20878 064a 80E0     		b	.L107
 20879              	.LVL115:
 20880              	.L106:
 20881              	.LBE19:
 20882              	.LBE22:
 256:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 20883              		.loc 1 256 0
 20884 064c 4023     		movs	r3, #64
 255:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_APP_CMD;
 20885              		.loc 1 255 0
 20886 064e 3725     		movs	r5, #55
 254:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = 0x00;
 20887              		.loc 1 254 0
 20888 0650 0027     		movs	r7, #0
 256:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 20889              		.loc 1 256 0
 20890 0652 A360     		str	r3, [r4, #8]
 259:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 20891              		.loc 1 259 0
 20892 0654 4248     		ldr	r0, .L118+4
 258:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 20893              		.loc 1 258 0
 20894 0656 4FF48063 		mov	r3, #1024
 255:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_APP_CMD;
 20895              		.loc 1 255 0
 20896 065a 6560     		str	r5, [r4, #4]
 258:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 20897              		.loc 1 258 0
 20898 065c 2361     		str	r3, [r4, #16]
 254:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = 0x00;
 20899              		.loc 1 254 0
 20900 065e 2760     		str	r7, [r4, #0]
 257:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 20901              		.loc 1 257 0
 20902 0660 E760     		str	r7, [r4, #12]
 259:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 20903              		.loc 1 259 0
 20904 0662 FFF7FEFF 		bl	SDIO_SendCommand
 260:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_APP_CMD);
 20905              		.loc 1 260 0
 20906 0666 2846     		mov	r0, r5
 20907 0668 FFF7F2FC 		bl	CmdResp1Error
 265:../src/sdcard.c ****   if (errorstatus == SD_OK)
 20908              		.loc 1 265 0
 20909 066c 2A28     		cmp	r0, #42
 260:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_APP_CMD);
 20910              		.loc 1 260 0
 20911 066e 0546     		mov	r5, r0
 20912              	.LVL116:
 265:../src/sdcard.c ****   if (errorstatus == SD_OK)
 20913              		.loc 1 265 0
 20914 0670 52D1     		bne	.L99
 20915              	.LVL117:
 20916              	.L112:
 273:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Argument = 0x00;
 20917              		.loc 1 273 0
 20918 0672 3B4E     		ldr	r6, .L118+4
 274:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_APP_CMD;
 20919              		.loc 1 274 0
 20920 0674 3725     		movs	r5, #55
 273:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Argument = 0x00;
 20921              		.loc 1 273 0
 20922 0676 4FF00008 		mov	r8, #0
 278:../src/sdcard.c ****       SDIO_SendCommand(&SDIO_CmdInitStructure);
 20923              		.loc 1 278 0
 20924 067a 3046     		mov	r0, r6
 275:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 20925              		.loc 1 275 0
 20926 067c 4FF0400B 		mov	fp, #64
 277:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 20927              		.loc 1 277 0
 20928 0680 4FF4806A 		mov	sl, #1024
 274:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_APP_CMD;
 20929              		.loc 1 274 0
 20930 0684 6560     		str	r5, [r4, #4]
 273:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Argument = 0x00;
 20931              		.loc 1 273 0
 20932 0686 C4F80080 		str	r8, [r4, #0]
 275:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 20933              		.loc 1 275 0
 20934 068a C4F808B0 		str	fp, [r4, #8]
 276:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 20935              		.loc 1 276 0
 20936 068e C4F80C80 		str	r8, [r4, #12]
 277:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 20937              		.loc 1 277 0
 20938 0692 C4F810A0 		str	sl, [r4, #16]
 278:../src/sdcard.c ****       SDIO_SendCommand(&SDIO_CmdInitStructure);
 20939              		.loc 1 278 0
 20940 0696 FFF7FEFF 		bl	SDIO_SendCommand
 280:../src/sdcard.c ****       errorstatus = CmdResp1Error(SDIO_APP_CMD);
 20941              		.loc 1 280 0
 20942 069a 2846     		mov	r0, r5
 20943 069c FFF7D8FC 		bl	CmdResp1Error
 282:../src/sdcard.c ****       if (errorstatus != SD_OK)
 20944              		.loc 1 282 0
 20945 06a0 2A28     		cmp	r0, #42
 280:../src/sdcard.c ****       errorstatus = CmdResp1Error(SDIO_APP_CMD);
 20946              		.loc 1 280 0
 20947 06a2 0546     		mov	r5, r0
 20948              	.LVL118:
 282:../src/sdcard.c ****       if (errorstatus != SD_OK)
 20949              		.loc 1 282 0
 20950 06a4 38D1     		bne	.L99
 286:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Argument = SD_VOLTAGE_WINDOW_SD | SDType;
 20951              		.loc 1 286 0
 20952 06a6 49F00043 		orr	r3, r9, #-2147483648
 20953 06aa 43F48013 		orr	r3, r3, #1048576
 20954 06ae 3360     		str	r3, [r6, #0]
 287:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SD_APP_OP_COND;
 20955              		.loc 1 287 0
 20956 06b0 2923     		movs	r3, #41
 20957 06b2 7360     		str	r3, [r6, #4]
 288:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 20958              		.loc 1 288 0
 20959 06b4 C6F808B0 		str	fp, [r6, #8]
 289:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 20960              		.loc 1 289 0
 20961 06b8 C6F80C80 		str	r8, [r6, #12]
 290:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 20962              		.loc 1 290 0
 20963 06bc C6F810A0 		str	sl, [r6, #16]
 291:../src/sdcard.c ****       SDIO_SendCommand(&SDIO_CmdInitStructure);
 20964              		.loc 1 291 0
 20965 06c0 3046     		mov	r0, r6
 20966              	.LVL119:
 20967 06c2 FFF7FEFF 		bl	SDIO_SendCommand
 20968              	.LVL120:
 20969              	.L109:
 20970              	.LBB23:
 20971              	.LBB24:
2319:../src/sdcard.c ****     status = SDIO->STA;
 20972              		.loc 1 2319 0
 20973 06c6 274B     		ldr	r3, .L118+8
 20974 06c8 5E6B     		ldr	r6, [r3, #52]
 20975              	.LVL121:
2317:../src/sdcard.c ****   while (!(status & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT)))
 20976              		.loc 1 2317 0
 20977 06ca 16F0450F 		tst	r6, #69
 20978 06ce FAD0     		beq	.L109
2322:../src/sdcard.c ****   if (status & SDIO_FLAG_CTIMEOUT)
 20979              		.loc 1 2322 0
 20980 06d0 16F00406 		ands	r6, r6, #4
 20981              	.LVL122:
 20982 06d4 03D0     		beq	.L110
 20983              	.LVL123:
2325:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_CTIMEOUT);
 20984              		.loc 1 2325 0
 20985 06d6 0420     		movs	r0, #4
 20986 06d8 FFF7FEFF 		bl	SDIO_ClearFlag
 20987              	.LVL124:
 20988 06dc 19E0     		b	.L114
 20989              	.LVL125:
 20990              	.L110:
2329:../src/sdcard.c ****   SDIO_ClearFlag(SDIO_STATIC_FLAGS);
 20991              		.loc 1 2329 0
 20992 06de 40F2FF50 		movw	r0, #1535
 20993 06e2 FFF7FEFF 		bl	SDIO_ClearFlag
 20994              	.LVL126:
 20995              	.LBE24:
 20996              	.LBE23:
 299:../src/sdcard.c ****       response = SDIO_GetResponse(SDIO_RESP1);
 20997              		.loc 1 299 0
 20998 06e6 3046     		mov	r0, r6
 20999 06e8 FFF7FEFF 		bl	SDIO_GetResponse
 21000              	.LVL127:
 301:../src/sdcard.c ****       count++;
 21001              		.loc 1 301 0
 21002 06ec 0137     		adds	r7, r7, #1
 21003              	.LVL128:
 269:../src/sdcard.c ****     while ((!validvoltage) && (count < SD_MAX_VOLT_TRIAL))
 21004              		.loc 1 269 0
 21005 06ee 0028     		cmp	r0, #0
 21006 06f0 04DB     		blt	.L111
 269:../src/sdcard.c ****     while ((!validvoltage) && (count < SD_MAX_VOLT_TRIAL))
 21007              		.loc 1 269 0 is_stmt 0 discriminator 2
 21008 06f2 4FF6FF73 		movw	r3, #65535
 21009 06f6 9F42     		cmp	r7, r3
 21010 06f8 BBD1     		bne	.L112
 21011 06fa 0CE0     		b	.L115
 21012              	.L111:
 303:../src/sdcard.c ****     if (count >= SD_MAX_VOLT_TRIAL)
 21013              		.loc 1 303 0 is_stmt 1
 21014 06fc 4FF6FE73 		movw	r3, #65534
 21015 0700 9F42     		cmp	r7, r3
 21016 0702 08D8     		bhi	.L115
 21017              	.LVL129:
 309:../src/sdcard.c ****     if (response &= SD_HIGH_CAPACITY)
 21018              		.loc 1 309 0
 21019 0704 10F0804F 		tst	r0, #1073741824
 21020 0708 06D0     		beq	.L99
 311:../src/sdcard.c ****       CardType = SDIO_HIGH_CAPACITY_SD_CARD;
 21021              		.loc 1 311 0
 21022 070a 174B     		ldr	r3, .L118+12
 21023 070c 0222     		movs	r2, #2
 21024 070e 5A60     		str	r2, [r3, #4]
 21025 0710 02E0     		b	.L99
 21026              	.LVL130:
 21027              	.L114:
 21028              	.LBB25:
 21029              	.LBB15:
2104:../src/sdcard.c ****     return(errorstatus);
 21030              		.loc 1 2104 0
 21031 0712 0325     		movs	r5, #3
 21032 0714 00E0     		b	.L99
 21033              	.LVL131:
 21034              	.L115:
 21035              	.LBE15:
 21036              	.LBE25:
 306:../src/sdcard.c ****       return(errorstatus);
 21037              		.loc 1 306 0
 21038 0716 1B25     		movs	r5, #27
 21039              	.LVL132:
 21040              	.L99:
 317:../src/sdcard.c **** }
 21041              		.loc 1 317 0
 21042 0718 2846     		mov	r0, r5
 21043 071a BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 21044              	.LVL133:
 21045              	.L117:
 21046              	.LBB26:
 21047              	.LBB17:
2108:../src/sdcard.c ****   SDIO_ClearFlag(SDIO_STATIC_FLAGS);
 21048              		.loc 1 2108 0
 21049 071e 40F2FF50 		movw	r0, #1535
 21050 0722 FFF7FEFF 		bl	SDIO_ClearFlag
 21051              	.LVL134:
 21052              	.LBE17:
 21053              	.LBE26:
 228:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = SD_CHECK_PATTERN;
 21054              		.loc 1 228 0
 21055 0726 4FF4D573 		mov	r3, #426
 21056 072a 2360     		str	r3, [r4, #0]
 229:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SEND_IF_COND;
 21057              		.loc 1 229 0
 21058 072c 0823     		movs	r3, #8
 21059 072e 6360     		str	r3, [r4, #4]
 230:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 21060              		.loc 1 230 0
 21061 0730 3833     		adds	r3, r3, #56
 21062 0732 A360     		str	r3, [r4, #8]
 231:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 21063              		.loc 1 231 0
 21064 0734 403B     		subs	r3, r3, #64
 21065 0736 E360     		str	r3, [r4, #12]
 233:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 21066              		.loc 1 233 0
 21067 0738 0948     		ldr	r0, .L118+4
 232:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 21068              		.loc 1 232 0
 21069 073a 4FF48063 		mov	r3, #1024
 21070 073e 2361     		str	r3, [r4, #16]
 233:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 21071              		.loc 1 233 0
 21072 0740 FFF7FEFF 		bl	SDIO_SendCommand
 21073              	.LVL135:
 21074              	.LBB27:
 21075              	.LBB21:
2127:../src/sdcard.c ****   status = SDIO->STA;
 21076              		.loc 1 2127 0
 21077 0744 074B     		ldr	r3, .L118+8
 21078 0746 5A6B     		ldr	r2, [r3, #52]
 21079              	.LVL136:
2125:../src/sdcard.c ****   uint32_t timeout = SDIO_CMD0TIMEOUT;
 21080              		.loc 1 2125 0
 21081 0748 42F21073 		movw	r3, #10000
 21082 074c 57E7     		b	.L113
 21083              	.LVL137:
 21084              	.L107:
 21085              	.LBE21:
 21086              	.LBE27:
 239:../src/sdcard.c ****     CardType = SDIO_STD_CAPACITY_SD_CARD_V2_0; /* SD Card 2.0 */
 21087              		.loc 1 239 0
 21088 074e 064B     		ldr	r3, .L118+12
 21089 0750 0122     		movs	r2, #1
 21090 0752 5A60     		str	r2, [r3, #4]
 21091              	.LVL138:
 240:../src/sdcard.c ****     SDType = SD_HIGH_CAPACITY;
 21092              		.loc 1 240 0
 21093 0754 4FF08049 		mov	r9, #1073741824
 21094 0758 78E7     		b	.L106
 21095              	.L119:
 21096 075a 00BF     		.align	2
 21097              	.L118:
 21098 075c 00000000 		.word	SDIO_InitStructure
 21099 0760 00000000 		.word	SDIO_CmdInitStructure
 21100 0764 00800140 		.word	1073840128
 21101 0768 00000000 		.word	.LANCHOR0
 21102              		.cfi_endproc
 21103              	.LFE30:
 21105              		.align	1
 21106              		.global	SD_PowerOFF
 21107              		.thumb
 21108              		.thumb_func
 21110              	SD_PowerOFF:
 21111              	.LFB31:
 327:../src/sdcard.c **** {
 21112              		.loc 1 327 0
 21113              		.cfi_startproc
 21114              		@ args = 0, pretend = 0, frame = 0
 21115              		@ frame_needed = 0, uses_anonymous_args = 0
 21116              	.LVL139:
 331:../src/sdcard.c ****   SDIO_SetPowerState(SDIO_PowerState_OFF);
 21117              		.loc 1 331 0
 21118 076c 0020     		movs	r0, #0
 327:../src/sdcard.c **** {
 21119              		.loc 1 327 0
 21120 076e 08B5     		push	{r3, lr}
 21121              	.LCFI9:
 21122              		.cfi_def_cfa_offset 8
 331:../src/sdcard.c ****   SDIO_SetPowerState(SDIO_PowerState_OFF);
 21123              		.loc 1 331 0
 21124              		.cfi_offset 14, -4
 21125              		.cfi_offset 3, -8
 21126 0770 FFF7FEFF 		bl	SDIO_SetPowerState
 334:../src/sdcard.c **** }
 21127              		.loc 1 334 0
 21128 0774 2A20     		movs	r0, #42
 21129 0776 08BD     		pop	{r3, pc}
 21130              		.cfi_endproc
 21131              	.LFE31:
 21133              		.align	1
 21134              		.global	SD_InitializeCards
 21135              		.thumb
 21136              		.thumb_func
 21138              	SD_InitializeCards:
 21139              	.LFB32:
 345:../src/sdcard.c **** {
 21140              		.loc 1 345 0
 21141              		.cfi_startproc
 21142              		@ args = 0, pretend = 0, frame = 0
 21143              		@ frame_needed = 0, uses_anonymous_args = 0
 21144              	.LVL140:
 21145 0778 70B5     		push	{r4, r5, r6, lr}
 21146              	.LCFI10:
 21147              		.cfi_def_cfa_offset 16
 349:../src/sdcard.c ****   if (SDIO_GetPowerState() == SDIO_PowerState_OFF)
 21148              		.loc 1 349 0
 21149              		.cfi_offset 14, -4
 21150              		.cfi_offset 6, -8
 21151              		.cfi_offset 5, -12
 21152              		.cfi_offset 4, -16
 21153 077a FFF7FEFF 		bl	SDIO_GetPowerState
 21154 077e 0028     		cmp	r0, #0
 21155 0780 00F09980 		beq	.L133
 355:../src/sdcard.c ****   if (SDIO_SECURE_DIGITAL_IO_CARD != CardType)
 21156              		.loc 1 355 0
 21157 0784 4E4D     		ldr	r5, .L140
 21158 0786 6B68     		ldr	r3, [r5, #4]
 21159 0788 042B     		cmp	r3, #4
 21160 078a 22D0     		beq	.L123
 358:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = 0x0;
 21161              		.loc 1 358 0
 21162 078c 4D48     		ldr	r0, .L140+4
 359:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_ALL_SEND_CID;
 21163              		.loc 1 359 0
 21164 078e 0223     		movs	r3, #2
 21165 0790 4360     		str	r3, [r0, #4]
 360:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Long;
 21166              		.loc 1 360 0
 21167 0792 BE33     		adds	r3, r3, #190
 358:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = 0x0;
 21168              		.loc 1 358 0
 21169 0794 0026     		movs	r6, #0
 360:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Long;
 21170              		.loc 1 360 0
 21171 0796 8360     		str	r3, [r0, #8]
 362:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 21172              		.loc 1 362 0
 21173 0798 4FF48063 		mov	r3, #1024
 358:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = 0x0;
 21174              		.loc 1 358 0
 21175 079c 0660     		str	r6, [r0, #0]
 361:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 21176              		.loc 1 361 0
 21177 079e C660     		str	r6, [r0, #12]
 362:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 21178              		.loc 1 362 0
 21179 07a0 0361     		str	r3, [r0, #16]
 363:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
 21180              		.loc 1 363 0
 21181 07a2 FFF7FEFF 		bl	SDIO_SendCommand
 365:../src/sdcard.c ****     errorstatus = CmdResp2Error();
 21182              		.loc 1 365 0
 21183 07a6 FFF734FC 		bl	CmdResp2Error
 367:../src/sdcard.c ****     if (SD_OK != errorstatus)
 21184              		.loc 1 367 0
 21185 07aa 2A28     		cmp	r0, #42
 365:../src/sdcard.c ****     errorstatus = CmdResp2Error();
 21186              		.loc 1 365 0
 21187 07ac 0446     		mov	r4, r0
 21188              	.LVL141:
 367:../src/sdcard.c ****     if (SD_OK != errorstatus)
 21189              		.loc 1 367 0
 21190 07ae 40F08580 		bne	.L122
 372:../src/sdcard.c ****     CID_Tab[0] = SDIO_GetResponse(SDIO_RESP1);
 21191              		.loc 1 372 0
 21192 07b2 3046     		mov	r0, r6
 21193              	.LVL142:
 21194 07b4 FFF7FEFF 		bl	SDIO_GetResponse
 21195 07b8 A860     		str	r0, [r5, #8]
 373:../src/sdcard.c ****     CID_Tab[1] = SDIO_GetResponse(SDIO_RESP2);
 21196              		.loc 1 373 0
 21197 07ba 0420     		movs	r0, #4
 21198 07bc FFF7FEFF 		bl	SDIO_GetResponse
 21199 07c0 E860     		str	r0, [r5, #12]
 374:../src/sdcard.c ****     CID_Tab[2] = SDIO_GetResponse(SDIO_RESP3);
 21200              		.loc 1 374 0
 21201 07c2 0820     		movs	r0, #8
 21202 07c4 FFF7FEFF 		bl	SDIO_GetResponse
 21203 07c8 2861     		str	r0, [r5, #16]
 375:../src/sdcard.c ****     CID_Tab[3] = SDIO_GetResponse(SDIO_RESP4);
 21204              		.loc 1 375 0
 21205 07ca 0C20     		movs	r0, #12
 21206 07cc FFF7FEFF 		bl	SDIO_GetResponse
 21207 07d0 6861     		str	r0, [r5, #20]
 21208              	.LVL143:
 21209              	.L123:
 377:../src/sdcard.c ****   if ((SDIO_STD_CAPACITY_SD_CARD_V1_1 == CardType) ||  (SDIO_STD_CAPACITY_SD_CARD_V2_0 == CardType)
 21210              		.loc 1 377 0
 21211 07d2 6B68     		ldr	r3, [r5, #4]
 21212 07d4 012B     		cmp	r3, #1
 21213 07d6 03D9     		bls	.L124
 377:../src/sdcard.c ****   if ((SDIO_STD_CAPACITY_SD_CARD_V1_1 == CardType) ||  (SDIO_STD_CAPACITY_SD_CARD_V2_0 == CardType)
 21214              		.loc 1 377 0 is_stmt 0 discriminator 1
 21215 07d8 062B     		cmp	r3, #6
 21216 07da 01D0     		beq	.L124
 378:../src/sdcard.c ****       ||  (SDIO_HIGH_CAPACITY_SD_CARD == CardType))
 21217              		.loc 1 378 0 is_stmt 1
 21218 07dc 022B     		cmp	r3, #2
 21219 07de 40D1     		bne	.L134
 21220              	.L124:
 382:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = 0x00;
 21221              		.loc 1 382 0
 21222 07e0 3848     		ldr	r0, .L140+4
 21223 07e2 0023     		movs	r3, #0
 383:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SET_REL_ADDR;
 21224              		.loc 1 383 0
 21225 07e4 0322     		movs	r2, #3
 382:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = 0x00;
 21226              		.loc 1 382 0
 21227 07e6 0360     		str	r3, [r0, #0]
 383:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SET_REL_ADDR;
 21228              		.loc 1 383 0
 21229 07e8 4260     		str	r2, [r0, #4]
 385:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 21230              		.loc 1 385 0
 21231 07ea C360     		str	r3, [r0, #12]
 384:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 21232              		.loc 1 384 0
 21233 07ec 3D32     		adds	r2, r2, #61
 386:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 21234              		.loc 1 386 0
 21235 07ee 4FF48063 		mov	r3, #1024
 384:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 21236              		.loc 1 384 0
 21237 07f2 8260     		str	r2, [r0, #8]
 386:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 21238              		.loc 1 386 0
 21239 07f4 0361     		str	r3, [r0, #16]
 387:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
 21240              		.loc 1 387 0
 21241 07f6 FFF7FEFF 		bl	SDIO_SendCommand
 21242              	.LVL144:
 21243              	.L127:
 21244              	.LBB30:
 21245              	.LBB31:
2392:../src/sdcard.c ****     status = SDIO->STA;
 21246              		.loc 1 2392 0
 21247 07fa 334B     		ldr	r3, .L140+8
 21248 07fc 5C6B     		ldr	r4, [r3, #52]
 21249              	.LVL145:
2390:../src/sdcard.c ****   while (!(status & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CTIMEOUT | SDIO_FLAG_CMDREND)))
 21250              		.loc 1 2390 0
 21251 07fe 14F0450F 		tst	r4, #69
 21252 0802 FAD0     		beq	.L127
2395:../src/sdcard.c ****   if (status & SDIO_FLAG_CTIMEOUT)
 21253              		.loc 1 2395 0
 21254 0804 14F0040F 		tst	r4, #4
 21255 0808 04D0     		beq	.L128
 21256              	.LVL146:
2398:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_CTIMEOUT);
 21257              		.loc 1 2398 0
 21258 080a 0420     		movs	r0, #4
 21259 080c FFF7FEFF 		bl	SDIO_ClearFlag
2399:../src/sdcard.c ****     return(errorstatus);
 21260              		.loc 1 2399 0
 21261 0810 0324     		movs	r4, #3
 21262              	.LVL147:
 21263 0812 53E0     		b	.L122
 21264              	.LVL148:
 21265              	.L128:
2401:../src/sdcard.c ****   else if (status & SDIO_FLAG_CCRCFAIL)
 21266              		.loc 1 2401 0
 21267 0814 14F00104 		ands	r4, r4, #1
 21268              	.LVL149:
 21269 0818 04D0     		beq	.L130
 21270              	.LVL150:
2404:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_CCRCFAIL);
 21271              		.loc 1 2404 0
 21272 081a 0120     		movs	r0, #1
 21273 081c FFF7FEFF 		bl	SDIO_ClearFlag
2405:../src/sdcard.c ****     return(errorstatus);
 21274              		.loc 1 2405 0
 21275 0820 0124     		movs	r4, #1
 21276 0822 4BE0     		b	.L122
 21277              	.LVL151:
 21278              	.L130:
2409:../src/sdcard.c ****   if (SDIO_GetCommandResponse() != cmd)
 21279              		.loc 1 2409 0
 21280 0824 FFF7FEFF 		bl	SDIO_GetCommandResponse
 21281 0828 0328     		cmp	r0, #3
 21282 082a 18D1     		bne	.L137
2416:../src/sdcard.c ****   SDIO_ClearFlag(SDIO_STATIC_FLAGS);
 21283              		.loc 1 2416 0
 21284 082c 40F2FF50 		movw	r0, #1535
 21285 0830 FFF7FEFF 		bl	SDIO_ClearFlag
2419:../src/sdcard.c ****   response_r1 = SDIO_GetResponse(SDIO_RESP1);
 21286              		.loc 1 2419 0
 21287 0834 2046     		mov	r0, r4
 21288 0836 FFF7FEFF 		bl	SDIO_GetResponse
 21289              	.LVL152:
2421:../src/sdcard.c ****   if (SD_ALLZERO == (response_r1 & (SD_R6_GENERAL_UNKNOWN_ERROR | SD_R6_ILLEGAL_CMD | SD_R6_COM_CRC
 21290              		.loc 1 2421 0
 21291 083a 10F4604F 		tst	r0, #57344
 21292 083e 01D1     		bne	.L131
2423:../src/sdcard.c ****     *prca = (uint16_t) (response_r1 >> 16);
 21293              		.loc 1 2423 0
 21294 0840 030C     		lsrs	r3, r0, #16
 21295              	.LVL153:
 21296 0842 0FE0     		b	.L125
 21297              	.LVL154:
 21298              	.L131:
2427:../src/sdcard.c ****   if (response_r1 & SD_R6_GENERAL_UNKNOWN_ERROR)
 21299              		.loc 1 2427 0
 21300 0844 10F4005F 		tst	r0, #8192
 21301 0848 07D1     		bne	.L136
2432:../src/sdcard.c ****   if (response_r1 & SD_R6_ILLEGAL_CMD)
 21302              		.loc 1 2432 0
 21303 084a 10F4804F 		tst	r0, #16384
 21304 084e 06D1     		bne	.L137
2437:../src/sdcard.c ****   if (response_r1 & SD_R6_COM_CRC_FAILED)
 21305              		.loc 1 2437 0
 21306 0850 10F4004F 		tst	r0, #32768
 21307 0854 05D0     		beq	.L134
2439:../src/sdcard.c ****     return(SD_COM_CRC_FAILED);
 21308              		.loc 1 2439 0
 21309 0856 0F24     		movs	r4, #15
 21310 0858 30E0     		b	.L122
 21311              	.L136:
2429:../src/sdcard.c ****     return(SD_GENERAL_UNKNOWN_ERROR);
 21312              		.loc 1 2429 0
 21313 085a 1324     		movs	r4, #19
 21314 085c 2EE0     		b	.L122
 21315              	.LVL155:
 21316              	.L137:
2434:../src/sdcard.c ****     return(SD_ILLEGAL_CMD);
 21317              		.loc 1 2434 0
 21318 085e 1024     		movs	r4, #16
 21319 0860 2CE0     		b	.L122
 21320              	.LVL156:
 21321              	.L134:
 21322              	.LBE31:
 21323              	.LBE30:
 347:../src/sdcard.c ****   uint16_t rca = 0x01;
 21324              		.loc 1 347 0
 21325 0862 0123     		movs	r3, #1
 21326              	.LVL157:
 21327              	.L125:
 397:../src/sdcard.c ****   if (SDIO_SECURE_DIGITAL_IO_CARD != CardType)
 21328              		.loc 1 397 0
 21329 0864 6A68     		ldr	r2, [r5, #4]
 21330 0866 164E     		ldr	r6, .L140
 21331 0868 042A     		cmp	r2, #4
 21332 086a 26D0     		beq	.L139
 402:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = (uint32_t)(rca << 16);
 21333              		.loc 1 402 0
 21334 086c 1548     		ldr	r0, .L140+4
 399:../src/sdcard.c ****     RCA = rca;
 21335              		.loc 1 399 0
 21336 086e 3360     		str	r3, [r6, #0]
 402:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = (uint32_t)(rca << 16);
 21337              		.loc 1 402 0
 21338 0870 1B04     		lsls	r3, r3, #16
 21339              	.LVL158:
 21340 0872 0360     		str	r3, [r0, #0]
 403:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SEND_CSD;
 21341              		.loc 1 403 0
 21342 0874 0923     		movs	r3, #9
 21343 0876 4360     		str	r3, [r0, #4]
 404:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Long;
 21344              		.loc 1 404 0
 21345 0878 B733     		adds	r3, r3, #183
 21346 087a 8360     		str	r3, [r0, #8]
 405:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 21347              		.loc 1 405 0
 21348 087c 0025     		movs	r5, #0
 406:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 21349              		.loc 1 406 0
 21350 087e 4FF48063 		mov	r3, #1024
 405:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 21351              		.loc 1 405 0
 21352 0882 C560     		str	r5, [r0, #12]
 406:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 21353              		.loc 1 406 0
 21354 0884 0361     		str	r3, [r0, #16]
 407:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
 21355              		.loc 1 407 0
 21356 0886 FFF7FEFF 		bl	SDIO_SendCommand
 21357              	.LVL159:
 409:../src/sdcard.c ****     errorstatus = CmdResp2Error();
 21358              		.loc 1 409 0
 21359 088a FFF7C2FB 		bl	CmdResp2Error
 411:../src/sdcard.c ****     if (SD_OK != errorstatus)
 21360              		.loc 1 411 0
 21361 088e 2A28     		cmp	r0, #42
 409:../src/sdcard.c ****     errorstatus = CmdResp2Error();
 21362              		.loc 1 409 0
 21363 0890 0446     		mov	r4, r0
 21364              	.LVL160:
 411:../src/sdcard.c ****     if (SD_OK != errorstatus)
 21365              		.loc 1 411 0
 21366 0892 13D1     		bne	.L122
 416:../src/sdcard.c ****     CSD_Tab[0] = SDIO_GetResponse(SDIO_RESP1);
 21367              		.loc 1 416 0
 21368 0894 2846     		mov	r0, r5
 21369              	.LVL161:
 21370 0896 FFF7FEFF 		bl	SDIO_GetResponse
 21371 089a B061     		str	r0, [r6, #24]
 417:../src/sdcard.c ****     CSD_Tab[1] = SDIO_GetResponse(SDIO_RESP2);
 21372              		.loc 1 417 0
 21373 089c 0420     		movs	r0, #4
 21374 089e FFF7FEFF 		bl	SDIO_GetResponse
 21375 08a2 F061     		str	r0, [r6, #28]
 418:../src/sdcard.c ****     CSD_Tab[2] = SDIO_GetResponse(SDIO_RESP3);
 21376              		.loc 1 418 0
 21377 08a4 0820     		movs	r0, #8
 21378 08a6 FFF7FEFF 		bl	SDIO_GetResponse
 21379 08aa 3062     		str	r0, [r6, #32]
 419:../src/sdcard.c ****     CSD_Tab[3] = SDIO_GetResponse(SDIO_RESP4);
 21380              		.loc 1 419 0
 21381 08ac 0C20     		movs	r0, #12
 21382 08ae FFF7FEFF 		bl	SDIO_GetResponse
 21383 08b2 7062     		str	r0, [r6, #36]
 21384 08b4 02E0     		b	.L122
 21385              	.LVL162:
 21386              	.L133:
 352:../src/sdcard.c ****     return(errorstatus);
 21387              		.loc 1 352 0
 21388 08b6 2524     		movs	r4, #37
 21389 08b8 00E0     		b	.L122
 21390              	.LVL163:
 21391              	.L139:
 424:../src/sdcard.c ****   return(errorstatus);
 21392              		.loc 1 424 0
 21393 08ba 2A24     		movs	r4, #42
 21394              	.LVL164:
 21395              	.L122:
 425:../src/sdcard.c **** }
 21396              		.loc 1 425 0
 21397 08bc 2046     		mov	r0, r4
 21398 08be 70BD     		pop	{r4, r5, r6, pc}
 21399              	.L141:
 21400              		.align	2
 21401              	.L140:
 21402 08c0 00000000 		.word	.LANCHOR0
 21403 08c4 00000000 		.word	SDIO_CmdInitStructure
 21404 08c8 00800140 		.word	1073840128
 21405              		.cfi_endproc
 21406              	.LFE32:
 21408              		.align	1
 21409              		.global	SD_Init
 21410              		.thumb
 21411              		.thumb_func
 21413              	SD_Init:
 21414              	.LFB29:
 131:../src/sdcard.c **** {
 21415              		.loc 1 131 0
 21416              		.cfi_startproc
 21417              		@ args = 0, pretend = 0, frame = 8
 21418              		@ frame_needed = 0, uses_anonymous_args = 0
 21419              	.LVL165:
 21420 08cc 13B5     		push	{r0, r1, r4, lr}
 21421              	.LCFI11:
 21422              		.cfi_def_cfa_offset 16
 21423              	.LBB34:
 21424              	.LBB35:
2867:../src/sdcard.c ****   RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC | RCC_APB2Periph_GPIOD, ENABLE);
 21425              		.loc 1 2867 0
 21426 08ce 3020     		movs	r0, #48
 21427              		.cfi_offset 14, -4
 21428              		.cfi_offset 4, -8
 21429              		.cfi_offset 1, -12
 21430              		.cfi_offset 0, -16
 21431 08d0 0121     		movs	r1, #1
 21432 08d2 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
2870:../src/sdcard.c ****   GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8 | GPIO_Pin_9 | GPIO_Pin_10 | GPIO_Pin_11 | GPIO_Pin_12;
 21433              		.loc 1 2870 0
 21434 08d6 4FF4F853 		mov	r3, #7936	@ movhi
 21435 08da ADF80430 		strh	r3, [sp, #4]	@ movhi
2871:../src/sdcard.c ****   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 21436              		.loc 1 2871 0
 21437 08de 0323     		movs	r3, #3
 21438 08e0 8DF80630 		strb	r3, [sp, #6]
2873:../src/sdcard.c ****   GPIO_Init(GPIOC, &GPIO_InitStructure);
 21439              		.loc 1 2873 0
 21440 08e4 1748     		ldr	r0, .L144
2872:../src/sdcard.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
 21441              		.loc 1 2872 0
 21442 08e6 1533     		adds	r3, r3, #21
2873:../src/sdcard.c ****   GPIO_Init(GPIOC, &GPIO_InitStructure);
 21443              		.loc 1 2873 0
 21444 08e8 01A9     		add	r1, sp, #4
2872:../src/sdcard.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
 21445              		.loc 1 2872 0
 21446 08ea 8DF80730 		strb	r3, [sp, #7]
2873:../src/sdcard.c ****   GPIO_Init(GPIOC, &GPIO_InitStructure);
 21447              		.loc 1 2873 0
 21448 08ee FFF7FEFF 		bl	GPIO_Init
2876:../src/sdcard.c ****   GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
 21449              		.loc 1 2876 0
 21450 08f2 0423     		movs	r3, #4
2877:../src/sdcard.c ****   GPIO_Init(GPIOD, &GPIO_InitStructure);
 21451              		.loc 1 2877 0
 21452 08f4 1448     		ldr	r0, .L144+4
 21453 08f6 01A9     		add	r1, sp, #4
2876:../src/sdcard.c ****   GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
 21454              		.loc 1 2876 0
 21455 08f8 ADF80430 		strh	r3, [sp, #4]	@ movhi
2877:../src/sdcard.c ****   GPIO_Init(GPIOD, &GPIO_InitStructure);
 21456              		.loc 1 2877 0
 21457 08fc FFF7FEFF 		bl	GPIO_Init
 21458              	.LBE35:
 21459              	.LBE34:
 138:../src/sdcard.c ****   RCC_AHBPeriphClockCmd(RCC_AHBPeriph_SDIO, ENABLE);
 21460              		.loc 1 138 0
 21461 0900 0121     		movs	r1, #1
 21462 0902 4FF48060 		mov	r0, #1024
 21463 0906 FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
 141:../src/sdcard.c ****   RCC_AHBPeriphClockCmd(RCC_AHBPeriph_DMA2, ENABLE);
 21464              		.loc 1 141 0
 21465 090a 0220     		movs	r0, #2
 21466 090c 0121     		movs	r1, #1
 21467 090e FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
 143:../src/sdcard.c ****   SDIO_DeInit();
 21468              		.loc 1 143 0
 21469 0912 FFF7FEFF 		bl	SDIO_DeInit
 145:../src/sdcard.c ****   errorstatus = SD_PowerON();
 21470              		.loc 1 145 0
 21471 0916 FFF7FEFF 		bl	SD_PowerON
 147:../src/sdcard.c ****   if (errorstatus != SD_OK)
 21472              		.loc 1 147 0
 21473 091a 2A28     		cmp	r0, #42
 145:../src/sdcard.c ****   errorstatus = SD_PowerON();
 21474              		.loc 1 145 0
 21475 091c 0446     		mov	r4, r0
 21476              	.LVL166:
 147:../src/sdcard.c ****   if (errorstatus != SD_OK)
 21477              		.loc 1 147 0
 21478 091e 0FD1     		bne	.L143
 153:../src/sdcard.c ****   errorstatus = SD_InitializeCards();
 21479              		.loc 1 153 0
 21480 0920 FFF7FEFF 		bl	SD_InitializeCards
 21481              	.LVL167:
 155:../src/sdcard.c ****   if (errorstatus != SD_OK)
 21482              		.loc 1 155 0
 21483 0924 2A28     		cmp	r0, #42
 153:../src/sdcard.c ****   errorstatus = SD_InitializeCards();
 21484              		.loc 1 153 0
 21485 0926 0446     		mov	r4, r0
 21486              	.LVL168:
 155:../src/sdcard.c ****   if (errorstatus != SD_OK)
 21487              		.loc 1 155 0
 21488 0928 0AD1     		bne	.L143
 163:../src/sdcard.c ****   SDIO_InitStructure.SDIO_ClockDiv = SDIO_TRANSFER_CLK_DIV; 
 21489              		.loc 1 163 0
 21490 092a 0848     		ldr	r0, .L144+8
 21491              	.LVL169:
 21492 092c 0123     		movs	r3, #1
 21493 092e 0375     		strb	r3, [r0, #20]
 164:../src/sdcard.c ****   SDIO_InitStructure.SDIO_ClockEdge = SDIO_ClockEdge_Rising;
 21494              		.loc 1 164 0
 21495 0930 013B     		subs	r3, r3, #1
 21496 0932 0360     		str	r3, [r0, #0]
 165:../src/sdcard.c ****   SDIO_InitStructure.SDIO_ClockBypass = SDIO_ClockBypass_Disable;
 21497              		.loc 1 165 0
 21498 0934 4360     		str	r3, [r0, #4]
 166:../src/sdcard.c ****   SDIO_InitStructure.SDIO_ClockPowerSave = SDIO_ClockPowerSave_Disable;
 21499              		.loc 1 166 0
 21500 0936 8360     		str	r3, [r0, #8]
 167:../src/sdcard.c ****   SDIO_InitStructure.SDIO_BusWide = SDIO_BusWide_1b;
 21501              		.loc 1 167 0
 21502 0938 C360     		str	r3, [r0, #12]
 168:../src/sdcard.c ****   SDIO_InitStructure.SDIO_HardwareFlowControl = SDIO_HardwareFlowControl_Disable;
 21503              		.loc 1 168 0
 21504 093a 0361     		str	r3, [r0, #16]
 169:../src/sdcard.c ****   SDIO_Init(&SDIO_InitStructure);
 21505              		.loc 1 169 0
 21506 093c FFF7FEFF 		bl	SDIO_Init
 21507              	.LVL170:
 21508              	.L143:
 172:../src/sdcard.c **** }
 21509              		.loc 1 172 0
 21510 0940 2046     		mov	r0, r4
 21511 0942 1CBD     		pop	{r2, r3, r4, pc}
 21512              	.L145:
 21513              		.align	2
 21514              	.L144:
 21515 0944 00100140 		.word	1073811456
 21516 0948 00140140 		.word	1073812480
 21517 094c 00000000 		.word	SDIO_InitStructure
 21518              		.cfi_endproc
 21519              	.LFE29:
 21521              		.align	1
 21522              		.global	SD_GetCardInfo
 21523              		.thumb
 21524              		.thumb_func
 21526              	SD_GetCardInfo:
 21527              	.LFB33:
 436:../src/sdcard.c **** {
 21528              		.loc 1 436 0
 21529              		.cfi_startproc
 21530              		@ args = 0, pretend = 0, frame = 0
 21531              		@ frame_needed = 0, uses_anonymous_args = 0
 21532              	.LVL171:
 440:../src/sdcard.c ****   cardinfo->CardType = (uint8_t)CardType;
 21533              		.loc 1 440 0
 21534 0950 9F4A     		ldr	r2, .L149
 436:../src/sdcard.c **** {
 21535              		.loc 1 436 0
 21536 0952 70B5     		push	{r4, r5, r6, lr}
 21537              	.LCFI12:
 21538              		.cfi_def_cfa_offset 16
 440:../src/sdcard.c ****   cardinfo->CardType = (uint8_t)CardType;
 21539              		.loc 1 440 0
 21540 0954 5468     		ldr	r4, [r2, #4]
 21541              		.cfi_offset 14, -4
 21542              		.cfi_offset 6, -8
 21543              		.cfi_offset 5, -12
 21544              		.cfi_offset 4, -16
 21545 0956 80F84E40 		strb	r4, [r0, #78]
 441:../src/sdcard.c ****   cardinfo->RCA = (uint16_t)RCA;
 21546              		.loc 1 441 0
 21547 095a 1388     		ldrh	r3, [r2, #0]
 21548 095c A0F84C30 		strh	r3, [r0, #76]	@ movhi
 444:../src/sdcard.c ****   tmp = (uint8_t)((CSD_Tab[0] & 0xFF000000) >> 24);
 21549              		.loc 1 444 0
 21550 0960 9369     		ldr	r3, [r2, #24]
 21551 0962 190E     		lsrs	r1, r3, #24
 21552              	.LVL172:
 445:../src/sdcard.c ****   cardinfo->SD_csd.CSDStruct = (tmp & 0xC0) >> 6;
 21553              		.loc 1 445 0
 21554 0964 8D09     		lsrs	r5, r1, #6
 21555 0966 0570     		strb	r5, [r0, #0]
 446:../src/sdcard.c ****   cardinfo->SD_csd.SysSpecVersion = (tmp & 0x3C) >> 2;
 21556              		.loc 1 446 0
 21557 0968 01F03C05 		and	r5, r1, #60
 21558 096c AD08     		lsrs	r5, r5, #2
 447:../src/sdcard.c ****   cardinfo->SD_csd.Reserved1 = tmp & 0x03;
 21559              		.loc 1 447 0
 21560 096e 01F00301 		and	r1, r1, #3
 21561              	.LVL173:
 446:../src/sdcard.c ****   cardinfo->SD_csd.SysSpecVersion = (tmp & 0x3C) >> 2;
 21562              		.loc 1 446 0
 21563 0972 4570     		strb	r5, [r0, #1]
 447:../src/sdcard.c ****   cardinfo->SD_csd.Reserved1 = tmp & 0x03;
 21564              		.loc 1 447 0
 21565 0974 8170     		strb	r1, [r0, #2]
 450:../src/sdcard.c ****   tmp = (uint8_t)((CSD_Tab[0] & 0x00FF0000) >> 16);
 21566              		.loc 1 450 0
 21567 0976 03F47F01 		and	r1, r3, #16711680
 21568 097a 090C     		lsrs	r1, r1, #16
 21569              	.LVL174:
 451:../src/sdcard.c ****   cardinfo->SD_csd.TAAC = tmp;
 21570              		.loc 1 451 0
 21571 097c C170     		strb	r1, [r0, #3]
 454:../src/sdcard.c ****   tmp = (uint8_t)((CSD_Tab[0] & 0x0000FF00) >> 8);
 21572              		.loc 1 454 0
 21573 097e 03F47F41 		and	r1, r3, #65280
 21574              	.LVL175:
 21575 0982 090A     		lsrs	r1, r1, #8
 21576              	.LVL176:
 458:../src/sdcard.c ****   tmp = (uint8_t)(CSD_Tab[0] & 0x000000FF);
 21577              		.loc 1 458 0
 21578 0984 DBB2     		uxtb	r3, r3
 21579              	.LVL177:
 455:../src/sdcard.c ****   cardinfo->SD_csd.NSAC = tmp;
 21580              		.loc 1 455 0
 21581 0986 0171     		strb	r1, [r0, #4]
 459:../src/sdcard.c ****   cardinfo->SD_csd.MaxBusClkFrec = tmp;
 21582              		.loc 1 459 0
 21583 0988 4371     		strb	r3, [r0, #5]
 462:../src/sdcard.c ****   tmp = (uint8_t)((CSD_Tab[1] & 0xFF000000) >> 24);
 21584              		.loc 1 462 0
 21585 098a D169     		ldr	r1, [r2, #28]
 21586              	.LVL178:
 463:../src/sdcard.c ****   cardinfo->SD_csd.CardComdClasses = tmp << 4;
 21587              		.loc 1 463 0
 21588 098c 0B0E     		lsrs	r3, r1, #24
 21589 098e 1B01     		lsls	r3, r3, #4
 21590 0990 C380     		strh	r3, [r0, #6]	@ movhi
 467:../src/sdcard.c ****   cardinfo->SD_csd.CardComdClasses |= (tmp & 0xF0) >> 4;
 21591              		.loc 1 467 0
 21592 0992 C588     		ldrh	r5, [r0, #6]
 466:../src/sdcard.c ****   tmp = (uint8_t)((CSD_Tab[1] & 0x00FF0000) >> 16);
 21593              		.loc 1 466 0
 21594 0994 01F47F03 		and	r3, r1, #16711680
 21595 0998 1B0C     		lsrs	r3, r3, #16
 21596              	.LVL179:
 467:../src/sdcard.c ****   cardinfo->SD_csd.CardComdClasses |= (tmp & 0xF0) >> 4;
 21597              		.loc 1 467 0
 21598 099a ADB2     		uxth	r5, r5
 21599 099c 45EA1315 		orr	r5, r5, r3, lsr #4
 468:../src/sdcard.c ****   cardinfo->SD_csd.RdBlockLen = tmp & 0x0F;
 21600              		.loc 1 468 0
 21601 09a0 03F00F03 		and	r3, r3, #15
 21602              	.LVL180:
 467:../src/sdcard.c ****   cardinfo->SD_csd.CardComdClasses |= (tmp & 0xF0) >> 4;
 21603              		.loc 1 467 0
 21604 09a4 C580     		strh	r5, [r0, #6]	@ movhi
 468:../src/sdcard.c ****   cardinfo->SD_csd.RdBlockLen = tmp & 0x0F;
 21605              		.loc 1 468 0
 21606 09a6 0372     		strb	r3, [r0, #8]
 471:../src/sdcard.c ****   tmp = (uint8_t)((CSD_Tab[1] & 0x0000FF00) >> 8);
 21607              		.loc 1 471 0
 21608 09a8 01F47F43 		and	r3, r1, #65280
 21609 09ac 1B0A     		lsrs	r3, r3, #8
 21610              	.LVL181:
 472:../src/sdcard.c ****   cardinfo->SD_csd.PartBlockRead = (tmp & 0x80) >> 7;
 21611              		.loc 1 472 0
 21612 09ae DD09     		lsrs	r5, r3, #7
 21613 09b0 4572     		strb	r5, [r0, #9]
 473:../src/sdcard.c ****   cardinfo->SD_csd.WrBlockMisalign = (tmp & 0x40) >> 6;
 21614              		.loc 1 473 0
 21615 09b2 C3F38015 		ubfx	r5, r3, #6, #1
 21616 09b6 8572     		strb	r5, [r0, #10]
 474:../src/sdcard.c ****   cardinfo->SD_csd.RdBlockMisalign = (tmp & 0x20) >> 5;
 21617              		.loc 1 474 0
 21618 09b8 C3F34015 		ubfx	r5, r3, #5, #1
 21619 09bc C572     		strb	r5, [r0, #11]
 475:../src/sdcard.c ****   cardinfo->SD_csd.DSRImpl = (tmp & 0x10) >> 4;
 21620              		.loc 1 475 0
 21621 09be C3F30015 		ubfx	r5, r3, #4, #1
 21622 09c2 0573     		strb	r5, [r0, #12]
 476:../src/sdcard.c ****   cardinfo->SD_csd.Reserved2 = 0; /* Reserved */
 21623              		.loc 1 476 0
 21624 09c4 0025     		movs	r5, #0
 478:../src/sdcard.c ****   if ((CardType == SDIO_STD_CAPACITY_SD_CARD_V1_1) || (CardType == SDIO_STD_CAPACITY_SD_CARD_V2_0))
 21625              		.loc 1 478 0
 21626 09c6 012C     		cmp	r4, #1
 476:../src/sdcard.c ****   cardinfo->SD_csd.Reserved2 = 0; /* Reserved */
 21627              		.loc 1 476 0
 21628 09c8 4573     		strb	r5, [r0, #13]
 478:../src/sdcard.c ****   if ((CardType == SDIO_STD_CAPACITY_SD_CARD_V1_1) || (CardType == SDIO_STD_CAPACITY_SD_CARD_V2_0))
 21629              		.loc 1 478 0
 21630 09ca 37D8     		bhi	.L147
 480:../src/sdcard.c ****     cardinfo->SD_csd.DeviceSize = (tmp & 0x03) << 10;
 21631              		.loc 1 480 0
 21632 09cc 03F00303 		and	r3, r3, #3
 21633              	.LVL182:
 21634 09d0 9B02     		lsls	r3, r3, #10
 21635 09d2 0361     		str	r3, [r0, #16]
 21636              	.LVL183:
 484:../src/sdcard.c ****     cardinfo->SD_csd.DeviceSize |= (tmp) << 2;
 21637              		.loc 1 484 0
 21638 09d4 0369     		ldr	r3, [r0, #16]
 21639 09d6 C9B2     		uxtb	r1, r1
 21640 09d8 43EA8101 		orr	r1, r3, r1, lsl #2
 21641 09dc 0161     		str	r1, [r0, #16]
 487:../src/sdcard.c ****     tmp = (uint8_t)((CSD_Tab[2] & 0xFF000000) >> 24);
 21642              		.loc 1 487 0
 21643 09de 136A     		ldr	r3, [r2, #32]
 488:../src/sdcard.c ****     cardinfo->SD_csd.DeviceSize |= (tmp & 0xC0) >> 6;
 21644              		.loc 1 488 0
 21645 09e0 0469     		ldr	r4, [r0, #16]
 487:../src/sdcard.c ****     tmp = (uint8_t)((CSD_Tab[2] & 0xFF000000) >> 24);
 21646              		.loc 1 487 0
 21647 09e2 190E     		lsrs	r1, r3, #24
 21648              	.LVL184:
 488:../src/sdcard.c ****     cardinfo->SD_csd.DeviceSize |= (tmp & 0xC0) >> 6;
 21649              		.loc 1 488 0
 21650 09e4 44EA9114 		orr	r4, r4, r1, lsr #6
 21651 09e8 0461     		str	r4, [r0, #16]
 490:../src/sdcard.c ****     cardinfo->SD_csd.MaxRdCurrentVDDMin = (tmp & 0x38) >> 3;
 21652              		.loc 1 490 0
 21653 09ea 01F03804 		and	r4, r1, #56
 21654 09ee E408     		lsrs	r4, r4, #3
 491:../src/sdcard.c ****     cardinfo->SD_csd.MaxRdCurrentVDDMax = (tmp & 0x07);
 21655              		.loc 1 491 0
 21656 09f0 01F00701 		and	r1, r1, #7
 21657              	.LVL185:
 490:../src/sdcard.c ****     cardinfo->SD_csd.MaxRdCurrentVDDMin = (tmp & 0x38) >> 3;
 21658              		.loc 1 490 0
 21659 09f4 0475     		strb	r4, [r0, #20]
 491:../src/sdcard.c ****     cardinfo->SD_csd.MaxRdCurrentVDDMax = (tmp & 0x07);
 21660              		.loc 1 491 0
 21661 09f6 4175     		strb	r1, [r0, #21]
 494:../src/sdcard.c ****     tmp = (uint8_t)((CSD_Tab[2] & 0x00FF0000) >> 16);
 21662              		.loc 1 494 0
 21663 09f8 03F47F01 		and	r1, r3, #16711680
 21664 09fc 090C     		lsrs	r1, r1, #16
 21665              	.LVL186:
 495:../src/sdcard.c ****     cardinfo->SD_csd.MaxWrCurrentVDDMin = (tmp & 0xE0) >> 5;
 21666              		.loc 1 495 0
 21667 09fe 4C09     		lsrs	r4, r1, #5
 21668 0a00 8475     		strb	r4, [r0, #22]
 496:../src/sdcard.c ****     cardinfo->SD_csd.MaxWrCurrentVDDMax = (tmp & 0x1C) >> 2;
 21669              		.loc 1 496 0
 21670 0a02 01F01C04 		and	r4, r1, #28
 497:../src/sdcard.c ****     cardinfo->SD_csd.DeviceSizeMul = (tmp & 0x03) << 1;
 21671              		.loc 1 497 0
 21672 0a06 01F00301 		and	r1, r1, #3
 21673              	.LVL187:
 496:../src/sdcard.c ****     cardinfo->SD_csd.MaxWrCurrentVDDMax = (tmp & 0x1C) >> 2;
 21674              		.loc 1 496 0
 21675 0a0a A408     		lsrs	r4, r4, #2
 497:../src/sdcard.c ****     cardinfo->SD_csd.DeviceSizeMul = (tmp & 0x03) << 1;
 21676              		.loc 1 497 0
 21677 0a0c 4900     		lsls	r1, r1, #1
 496:../src/sdcard.c ****     cardinfo->SD_csd.MaxWrCurrentVDDMax = (tmp & 0x1C) >> 2;
 21678              		.loc 1 496 0
 21679 0a0e C475     		strb	r4, [r0, #23]
 497:../src/sdcard.c ****     cardinfo->SD_csd.DeviceSizeMul = (tmp & 0x03) << 1;
 21680              		.loc 1 497 0
 21681 0a10 0176     		strb	r1, [r0, #24]
 500:../src/sdcard.c ****     cardinfo->SD_csd.DeviceSizeMul |= (tmp & 0x80) >> 7;
 21682              		.loc 1 500 0
 21683 0a12 017E     		ldrb	r1, [r0, #24]	@ zero_extendqisi2
 499:../src/sdcard.c ****     tmp = (uint8_t)((CSD_Tab[2] & 0x0000FF00) >> 8);
 21684              		.loc 1 499 0
 21685 0a14 03F47F43 		and	r3, r3, #65280
 21686 0a18 1B0A     		lsrs	r3, r3, #8
 21687              	.LVL188:
 500:../src/sdcard.c ****     cardinfo->SD_csd.DeviceSizeMul |= (tmp & 0x80) >> 7;
 21688              		.loc 1 500 0
 21689 0a1a 41EAD311 		orr	r1, r1, r3, lsr #7
 21690 0a1e 0176     		strb	r1, [r0, #24]
 502:../src/sdcard.c ****     cardinfo->CardCapacity = (cardinfo->SD_csd.DeviceSize + 1) ;
 21691              		.loc 1 502 0
 21692 0a20 0569     		ldr	r5, [r0, #16]
 503:../src/sdcard.c ****     cardinfo->CardCapacity *= (1 << (cardinfo->SD_csd.DeviceSizeMul + 2));
 21693              		.loc 1 503 0
 21694 0a22 047E     		ldrb	r4, [r0, #24]	@ zero_extendqisi2
 504:../src/sdcard.c ****     cardinfo->CardBlockSize = 1 << (cardinfo->SD_csd.RdBlockLen);
 21695              		.loc 1 504 0
 21696 0a24 0126     		movs	r6, #1
 21697 0a26 017A     		ldrb	r1, [r0, #8]	@ zero_extendqisi2
 502:../src/sdcard.c ****     cardinfo->CardCapacity = (cardinfo->SD_csd.DeviceSize + 1) ;
 21698              		.loc 1 502 0
 21699 0a28 AD19     		adds	r5, r5, r6
 503:../src/sdcard.c ****     cardinfo->CardCapacity *= (1 << (cardinfo->SD_csd.DeviceSizeMul + 2));
 21700              		.loc 1 503 0
 21701 0a2a 0234     		adds	r4, r4, #2
 504:../src/sdcard.c ****     cardinfo->CardBlockSize = 1 << (cardinfo->SD_csd.RdBlockLen);
 21702              		.loc 1 504 0
 21703 0a2c 16FA01F1 		lsls	r1, r6, r1
 503:../src/sdcard.c ****     cardinfo->CardCapacity *= (1 << (cardinfo->SD_csd.DeviceSizeMul + 2));
 21704              		.loc 1 503 0
 21705 0a30 15FA04F4 		lsls	r4, r5, r4
 504:../src/sdcard.c ****     cardinfo->CardBlockSize = 1 << (cardinfo->SD_csd.RdBlockLen);
 21706              		.loc 1 504 0
 21707 0a34 8164     		str	r1, [r0, #72]
 505:../src/sdcard.c ****     cardinfo->CardCapacity *= cardinfo->CardBlockSize;
 21708              		.loc 1 505 0
 21709 0a36 6143     		muls	r1, r4, r1
 21710 0a38 4164     		str	r1, [r0, #68]
 21711 0a3a 1BE0     		b	.L148
 21712              	.L147:
 507:../src/sdcard.c ****   else if (CardType == SDIO_HIGH_CAPACITY_SD_CARD)
 21713              		.loc 1 507 0
 21714 0a3c 022C     		cmp	r4, #2
 21715 0a3e 19D1     		bne	.L148
 21716              	.LVL189:
 511:../src/sdcard.c ****     cardinfo->SD_csd.DeviceSize = (tmp & 0x3F) << 16;
 21717              		.loc 1 511 0
 21718 0a40 01F03F01 		and	r1, r1, #63
 21719 0a44 0904     		lsls	r1, r1, #16
 21720 0a46 0161     		str	r1, [r0, #16]
 514:../src/sdcard.c ****     tmp = (uint8_t)((CSD_Tab[2] & 0xFF000000) >> 24);
 21721              		.loc 1 514 0
 21722 0a48 136A     		ldr	r3, [r2, #32]
 21723              	.LVL190:
 516:../src/sdcard.c ****     cardinfo->SD_csd.DeviceSize |= (tmp << 8);
 21724              		.loc 1 516 0
 21725 0a4a 0169     		ldr	r1, [r0, #16]
 21726 0a4c 1C0E     		lsrs	r4, r3, #24
 21727 0a4e 41EA0421 		orr	r1, r1, r4, lsl #8
 21728 0a52 0161     		str	r1, [r0, #16]
 21729              	.LVL191:
 521:../src/sdcard.c ****     cardinfo->SD_csd.DeviceSize |= (tmp);
 21730              		.loc 1 521 0
 21731 0a54 0169     		ldr	r1, [r0, #16]
 519:../src/sdcard.c ****     tmp = (uint8_t)((CSD_Tab[2] & 0x00FF0000) >> 16);
 21732              		.loc 1 519 0
 21733 0a56 03F47F04 		and	r4, r3, #16711680
 521:../src/sdcard.c ****     cardinfo->SD_csd.DeviceSize |= (tmp);
 21734              		.loc 1 521 0
 21735 0a5a 41EA1441 		orr	r1, r1, r4, lsr #16
 21736 0a5e 0161     		str	r1, [r0, #16]
 526:../src/sdcard.c ****     cardinfo->CardCapacity = (cardinfo->SD_csd.DeviceSize + 1) * 512 * 1024;
 21737              		.loc 1 526 0
 21738 0a60 0169     		ldr	r1, [r0, #16]
 524:../src/sdcard.c ****     tmp = (uint8_t)((CSD_Tab[2] & 0x0000FF00) >> 8);
 21739              		.loc 1 524 0
 21740 0a62 03F47F43 		and	r3, r3, #65280
 526:../src/sdcard.c ****     cardinfo->CardCapacity = (cardinfo->SD_csd.DeviceSize + 1) * 512 * 1024;
 21741              		.loc 1 526 0
 21742 0a66 0131     		adds	r1, r1, #1
 21743 0a68 C904     		lsls	r1, r1, #19
 21744 0a6a 4164     		str	r1, [r0, #68]
 527:../src/sdcard.c ****     cardinfo->CardBlockSize = 512;    
 21745              		.loc 1 527 0
 21746 0a6c 4FF40071 		mov	r1, #512
 524:../src/sdcard.c ****     tmp = (uint8_t)((CSD_Tab[2] & 0x0000FF00) >> 8);
 21747              		.loc 1 524 0
 21748 0a70 1B0A     		lsrs	r3, r3, #8
 21749              	.LVL192:
 527:../src/sdcard.c ****     cardinfo->CardBlockSize = 512;    
 21750              		.loc 1 527 0
 21751 0a72 8164     		str	r1, [r0, #72]
 21752              	.LVL193:
 21753              	.L148:
 531:../src/sdcard.c ****   cardinfo->SD_csd.EraseGrSize = (tmp & 0x40) >> 6;
 21754              		.loc 1 531 0
 21755 0a74 C3F38011 		ubfx	r1, r3, #6, #1
 532:../src/sdcard.c ****   cardinfo->SD_csd.EraseGrMul = (tmp & 0x3F) << 1;
 21756              		.loc 1 532 0
 21757 0a78 03F03F03 		and	r3, r3, #63
 21758              	.LVL194:
 21759 0a7c 5B00     		lsls	r3, r3, #1
 531:../src/sdcard.c ****   cardinfo->SD_csd.EraseGrSize = (tmp & 0x40) >> 6;
 21760              		.loc 1 531 0
 21761 0a7e 4176     		strb	r1, [r0, #25]
 532:../src/sdcard.c ****   cardinfo->SD_csd.EraseGrMul = (tmp & 0x3F) << 1;
 21762              		.loc 1 532 0
 21763 0a80 8376     		strb	r3, [r0, #26]
 536:../src/sdcard.c ****   cardinfo->SD_csd.EraseGrMul |= (tmp & 0x80) >> 7;
 21764              		.loc 1 536 0
 21765 0a82 817E     		ldrb	r1, [r0, #26]	@ zero_extendqisi2
 535:../src/sdcard.c ****   tmp = (uint8_t)(CSD_Tab[2] & 0x000000FF);
 21766              		.loc 1 535 0
 21767 0a84 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
 21768              	.LVL195:
 536:../src/sdcard.c ****   cardinfo->SD_csd.EraseGrMul |= (tmp & 0x80) >> 7;
 21769              		.loc 1 536 0
 21770 0a88 41EAD311 		orr	r1, r1, r3, lsr #7
 537:../src/sdcard.c ****   cardinfo->SD_csd.WrProtectGrSize = (tmp & 0x7F);
 21771              		.loc 1 537 0
 21772 0a8c 03F07F03 		and	r3, r3, #127
 21773              	.LVL196:
 536:../src/sdcard.c ****   cardinfo->SD_csd.EraseGrMul |= (tmp & 0x80) >> 7;
 21774              		.loc 1 536 0
 21775 0a90 8176     		strb	r1, [r0, #26]
 537:../src/sdcard.c ****   cardinfo->SD_csd.WrProtectGrSize = (tmp & 0x7F);
 21776              		.loc 1 537 0
 21777 0a92 C376     		strb	r3, [r0, #27]
 540:../src/sdcard.c ****   tmp = (uint8_t)((CSD_Tab[3] & 0xFF000000) >> 24);
 21778              		.loc 1 540 0
 21779 0a94 516A     		ldr	r1, [r2, #36]
 21780 0a96 0B0E     		lsrs	r3, r1, #24
 21781              	.LVL197:
 541:../src/sdcard.c ****   cardinfo->SD_csd.WrProtectGrEnable = (tmp & 0x80) >> 7;
 21782              		.loc 1 541 0
 21783 0a98 DC09     		lsrs	r4, r3, #7
 21784 0a9a 0477     		strb	r4, [r0, #28]
 542:../src/sdcard.c ****   cardinfo->SD_csd.ManDeflECC = (tmp & 0x60) >> 5;
 21785              		.loc 1 542 0
 21786 0a9c 03F06004 		and	r4, r3, #96
 21787 0aa0 6409     		lsrs	r4, r4, #5
 21788 0aa2 4477     		strb	r4, [r0, #29]
 543:../src/sdcard.c ****   cardinfo->SD_csd.WrSpeedFact = (tmp & 0x1C) >> 2;
 21789              		.loc 1 543 0
 21790 0aa4 03F01C04 		and	r4, r3, #28
 544:../src/sdcard.c ****   cardinfo->SD_csd.MaxWrBlockLen = (tmp & 0x03) << 2;
 21791              		.loc 1 544 0
 21792 0aa8 03F00303 		and	r3, r3, #3
 21793              	.LVL198:
 543:../src/sdcard.c ****   cardinfo->SD_csd.WrSpeedFact = (tmp & 0x1C) >> 2;
 21794              		.loc 1 543 0
 21795 0aac A408     		lsrs	r4, r4, #2
 544:../src/sdcard.c ****   cardinfo->SD_csd.MaxWrBlockLen = (tmp & 0x03) << 2;
 21796              		.loc 1 544 0
 21797 0aae 9B00     		lsls	r3, r3, #2
 543:../src/sdcard.c ****   cardinfo->SD_csd.WrSpeedFact = (tmp & 0x1C) >> 2;
 21798              		.loc 1 543 0
 21799 0ab0 8477     		strb	r4, [r0, #30]
 544:../src/sdcard.c ****   cardinfo->SD_csd.MaxWrBlockLen = (tmp & 0x03) << 2;
 21800              		.loc 1 544 0
 21801 0ab2 C377     		strb	r3, [r0, #31]
 548:../src/sdcard.c ****   cardinfo->SD_csd.MaxWrBlockLen |= (tmp & 0xC0) >> 6;
 21802              		.loc 1 548 0
 21803 0ab4 C47F     		ldrb	r4, [r0, #31]	@ zero_extendqisi2
 547:../src/sdcard.c ****   tmp = (uint8_t)((CSD_Tab[3] & 0x00FF0000) >> 16);
 21804              		.loc 1 547 0
 21805 0ab6 01F47F03 		and	r3, r1, #16711680
 21806 0aba 1B0C     		lsrs	r3, r3, #16
 21807              	.LVL199:
 548:../src/sdcard.c ****   cardinfo->SD_csd.MaxWrBlockLen |= (tmp & 0xC0) >> 6;
 21808              		.loc 1 548 0
 21809 0abc 44EA9314 		orr	r4, r4, r3, lsr #6
 21810 0ac0 C477     		strb	r4, [r0, #31]
 549:../src/sdcard.c ****   cardinfo->SD_csd.WriteBlockPaPartial = (tmp & 0x20) >> 5;
 21811              		.loc 1 549 0
 21812 0ac2 C3F34014 		ubfx	r4, r3, #5, #1
 21813 0ac6 80F82040 		strb	r4, [r0, #32]
 551:../src/sdcard.c ****   cardinfo->SD_csd.ContentProtectAppli = (tmp & 0x01);
 21814              		.loc 1 551 0
 21815 0aca 03F00103 		and	r3, r3, #1
 21816              	.LVL200:
 550:../src/sdcard.c ****   cardinfo->SD_csd.Reserved3 = 0;
 21817              		.loc 1 550 0
 21818 0ace 0024     		movs	r4, #0
 21819 0ad0 80F82140 		strb	r4, [r0, #33]
 551:../src/sdcard.c ****   cardinfo->SD_csd.ContentProtectAppli = (tmp & 0x01);
 21820              		.loc 1 551 0
 21821 0ad4 80F82230 		strb	r3, [r0, #34]
 554:../src/sdcard.c ****   tmp = (uint8_t)((CSD_Tab[3] & 0x0000FF00) >> 8);
 21822              		.loc 1 554 0
 21823 0ad8 01F47F43 		and	r3, r1, #65280
 21824 0adc 1B0A     		lsrs	r3, r3, #8
 21825              	.LVL201:
 555:../src/sdcard.c ****   cardinfo->SD_csd.FileFormatGrouop = (tmp & 0x80) >> 7;
 21826              		.loc 1 555 0
 21827 0ade DC09     		lsrs	r4, r3, #7
 21828 0ae0 80F82340 		strb	r4, [r0, #35]
 556:../src/sdcard.c ****   cardinfo->SD_csd.CopyFlag = (tmp & 0x40) >> 6;
 21829              		.loc 1 556 0
 21830 0ae4 C3F38014 		ubfx	r4, r3, #6, #1
 21831 0ae8 80F82440 		strb	r4, [r0, #36]
 557:../src/sdcard.c ****   cardinfo->SD_csd.PermWrProtect = (tmp & 0x20) >> 5;
 21832              		.loc 1 557 0
 21833 0aec C3F34014 		ubfx	r4, r3, #5, #1
 21834 0af0 80F82540 		strb	r4, [r0, #37]
 558:../src/sdcard.c ****   cardinfo->SD_csd.TempWrProtect = (tmp & 0x10) >> 4;
 21835              		.loc 1 558 0
 21836 0af4 C3F30014 		ubfx	r4, r3, #4, #1
 21837 0af8 80F82640 		strb	r4, [r0, #38]
 564:../src/sdcard.c ****   cardinfo->SD_csd.CSD_CRC = (tmp & 0xFE) >> 1;
 21838              		.loc 1 564 0
 21839 0afc C9B2     		uxtb	r1, r1
 559:../src/sdcard.c ****   cardinfo->SD_csd.FileFormat = (tmp & 0x0C) >> 2;
 21840              		.loc 1 559 0
 21841 0afe 03F00C04 		and	r4, r3, #12
 21842 0b02 A408     		lsrs	r4, r4, #2
 564:../src/sdcard.c ****   cardinfo->SD_csd.CSD_CRC = (tmp & 0xFE) >> 1;
 21843              		.loc 1 564 0
 21844 0b04 4908     		lsrs	r1, r1, #1
 560:../src/sdcard.c ****   cardinfo->SD_csd.ECC = (tmp & 0x03);
 21845              		.loc 1 560 0
 21846 0b06 03F00303 		and	r3, r3, #3
 21847              	.LVL202:
 559:../src/sdcard.c ****   cardinfo->SD_csd.FileFormat = (tmp & 0x0C) >> 2;
 21848              		.loc 1 559 0
 21849 0b0a 80F82740 		strb	r4, [r0, #39]
 560:../src/sdcard.c ****   cardinfo->SD_csd.ECC = (tmp & 0x03);
 21850              		.loc 1 560 0
 21851 0b0e 80F82830 		strb	r3, [r0, #40]
 564:../src/sdcard.c ****   cardinfo->SD_csd.CSD_CRC = (tmp & 0xFE) >> 1;
 21852              		.loc 1 564 0
 21853 0b12 80F82910 		strb	r1, [r0, #41]
 565:../src/sdcard.c ****   cardinfo->SD_csd.Reserved4 = 1;
 21854              		.loc 1 565 0
 21855 0b16 0121     		movs	r1, #1
 21856 0b18 80F82A10 		strb	r1, [r0, #42]
 569:../src/sdcard.c ****   tmp = (uint8_t)((CID_Tab[0] & 0xFF000000) >> 24);
 21857              		.loc 1 569 0
 21858 0b1c 9368     		ldr	r3, [r2, #8]
 21859 0b1e 1C0E     		lsrs	r4, r3, #24
 21860              	.LVL203:
 570:../src/sdcard.c ****   cardinfo->SD_cid.ManufacturerID = tmp;
 21861              		.loc 1 570 0
 21862 0b20 80F82C40 		strb	r4, [r0, #44]
 21863              	.LVL204:
 573:../src/sdcard.c ****   tmp = (uint8_t)((CID_Tab[0] & 0x00FF0000) >> 16);
 21864              		.loc 1 573 0
 21865 0b24 03F47F04 		and	r4, r3, #16711680
 574:../src/sdcard.c ****   cardinfo->SD_cid.OEM_AppliID = tmp << 8;
 21866              		.loc 1 574 0
 21867 0b28 240A     		lsrs	r4, r4, #8
 21868 0b2a C485     		strh	r4, [r0, #46]	@ movhi
 21869              	.LVL205:
 578:../src/sdcard.c ****   cardinfo->SD_cid.OEM_AppliID |= tmp;
 21870              		.loc 1 578 0
 21871 0b2c C48D     		ldrh	r4, [r0, #46]
 577:../src/sdcard.c ****   tmp = (uint8_t)((CID_Tab[0] & 0x000000FF00) >> 8);
 21872              		.loc 1 577 0
 21873 0b2e 03F47F45 		and	r5, r3, #65280
 578:../src/sdcard.c ****   cardinfo->SD_cid.OEM_AppliID |= tmp;
 21874              		.loc 1 578 0
 21875 0b32 A4B2     		uxth	r4, r4
 21876 0b34 44EA1524 		orr	r4, r4, r5, lsr #8
 582:../src/sdcard.c ****   cardinfo->SD_cid.ProdName1 = tmp << 24;
 21877              		.loc 1 582 0
 21878 0b38 1B06     		lsls	r3, r3, #24
 578:../src/sdcard.c ****   cardinfo->SD_cid.OEM_AppliID |= tmp;
 21879              		.loc 1 578 0
 21880 0b3a C485     		strh	r4, [r0, #46]	@ movhi
 21881              	.LVL206:
 582:../src/sdcard.c ****   cardinfo->SD_cid.ProdName1 = tmp << 24;
 21882              		.loc 1 582 0
 21883 0b3c 0363     		str	r3, [r0, #48]
 585:../src/sdcard.c ****   tmp = (uint8_t)((CID_Tab[1] & 0xFF000000) >> 24);
 21884              		.loc 1 585 0
 21885 0b3e D368     		ldr	r3, [r2, #12]
 21886              	.LVL207:
 586:../src/sdcard.c ****   cardinfo->SD_cid.ProdName1 |= tmp << 16;
 21887              		.loc 1 586 0
 21888 0b40 046B     		ldr	r4, [r0, #48]
 21889 0b42 1D0E     		lsrs	r5, r3, #24
 21890 0b44 44EA0544 		orr	r4, r4, r5, lsl #16
 21891 0b48 0463     		str	r4, [r0, #48]
 21892              	.LVL208:
 590:../src/sdcard.c ****   cardinfo->SD_cid.ProdName1 |= tmp << 8;
 21893              		.loc 1 590 0
 21894 0b4a 046B     		ldr	r4, [r0, #48]
 589:../src/sdcard.c ****   tmp = (uint8_t)((CID_Tab[1] & 0x00FF0000) >> 16);
 21895              		.loc 1 589 0
 21896 0b4c 03F47F05 		and	r5, r3, #16711680
 590:../src/sdcard.c ****   cardinfo->SD_cid.ProdName1 |= tmp << 8;
 21897              		.loc 1 590 0
 21898 0b50 44EA1524 		orr	r4, r4, r5, lsr #8
 21899 0b54 0463     		str	r4, [r0, #48]
 21900              	.LVL209:
 594:../src/sdcard.c ****   cardinfo->SD_cid.ProdName1 |= tmp;
 21901              		.loc 1 594 0
 21902 0b56 046B     		ldr	r4, [r0, #48]
 593:../src/sdcard.c ****   tmp = (uint8_t)((CID_Tab[1] & 0x0000FF00) >> 8);
 21903              		.loc 1 593 0
 21904 0b58 03F47F45 		and	r5, r3, #65280
 594:../src/sdcard.c ****   cardinfo->SD_cid.ProdName1 |= tmp;
 21905              		.loc 1 594 0
 21906 0b5c 44EA1524 		orr	r4, r4, r5, lsr #8
 597:../src/sdcard.c ****   tmp = (uint8_t)(CID_Tab[1] & 0x000000FF);
 21907              		.loc 1 597 0
 21908 0b60 DBB2     		uxtb	r3, r3
 21909              	.LVL210:
 594:../src/sdcard.c ****   cardinfo->SD_cid.ProdName1 |= tmp;
 21910              		.loc 1 594 0
 21911 0b62 0463     		str	r4, [r0, #48]
 598:../src/sdcard.c ****   cardinfo->SD_cid.ProdName2 = tmp;
 21912              		.loc 1 598 0
 21913 0b64 80F83430 		strb	r3, [r0, #52]
 601:../src/sdcard.c ****   tmp = (uint8_t)((CID_Tab[2] & 0xFF000000) >> 24);
 21914              		.loc 1 601 0
 21915 0b68 1369     		ldr	r3, [r2, #16]
 21916              	.LVL211:
 21917 0b6a 1C0E     		lsrs	r4, r3, #24
 21918              	.LVL212:
 602:../src/sdcard.c ****   cardinfo->SD_cid.ProdRev = tmp;
 21919              		.loc 1 602 0
 21920 0b6c 80F83540 		strb	r4, [r0, #53]
 21921              	.LVL213:
 605:../src/sdcard.c ****   tmp = (uint8_t)((CID_Tab[2] & 0x00FF0000) >> 16);
 21922              		.loc 1 605 0
 21923 0b70 03F47F04 		and	r4, r3, #16711680
 606:../src/sdcard.c ****   cardinfo->SD_cid.ProdSN = tmp << 24;
 21924              		.loc 1 606 0
 21925 0b74 2402     		lsls	r4, r4, #8
 21926 0b76 8463     		str	r4, [r0, #56]
 21927              	.LVL214:
 610:../src/sdcard.c ****   cardinfo->SD_cid.ProdSN |= tmp << 16;
 21928              		.loc 1 610 0
 21929 0b78 846B     		ldr	r4, [r0, #56]
 609:../src/sdcard.c ****   tmp = (uint8_t)((CID_Tab[2] & 0x0000FF00) >> 8);
 21930              		.loc 1 609 0
 21931 0b7a 03F47F45 		and	r5, r3, #65280
 610:../src/sdcard.c ****   cardinfo->SD_cid.ProdSN |= tmp << 16;
 21932              		.loc 1 610 0
 21933 0b7e 44EA0524 		orr	r4, r4, r5, lsl #8
 21934 0b82 8463     		str	r4, [r0, #56]
 21935              	.LVL215:
 614:../src/sdcard.c ****   cardinfo->SD_cid.ProdSN |= tmp << 8;
 21936              		.loc 1 614 0
 21937 0b84 846B     		ldr	r4, [r0, #56]
 21938 0b86 DBB2     		uxtb	r3, r3
 21939 0b88 44EA0323 		orr	r3, r4, r3, lsl #8
 21940 0b8c 8363     		str	r3, [r0, #56]
 617:../src/sdcard.c ****   tmp = (uint8_t)((CID_Tab[3] & 0xFF000000) >> 24);
 21941              		.loc 1 617 0
 21942 0b8e 5369     		ldr	r3, [r2, #20]
 21943              	.LVL216:
 618:../src/sdcard.c ****   cardinfo->SD_cid.ProdSN |= tmp;
 21944              		.loc 1 618 0
 21945 0b90 826B     		ldr	r2, [r0, #56]
 21946 0b92 42EA1362 		orr	r2, r2, r3, lsr #24
 21947 0b96 8263     		str	r2, [r0, #56]
 622:../src/sdcard.c ****   cardinfo->SD_cid.Reserved1 |= (tmp & 0xF0) >> 4;
 21948              		.loc 1 622 0
 21949 0b98 90F83C40 		ldrb	r4, [r0, #60]	@ zero_extendqisi2
 621:../src/sdcard.c ****   tmp = (uint8_t)((CID_Tab[3] & 0x00FF0000) >> 16);
 21950              		.loc 1 621 0
 21951 0b9c 03F47F02 		and	r2, r3, #16711680
 21952 0ba0 120C     		lsrs	r2, r2, #16
 21953              	.LVL217:
 622:../src/sdcard.c ****   cardinfo->SD_cid.Reserved1 |= (tmp & 0xF0) >> 4;
 21954              		.loc 1 622 0
 21955 0ba2 44EA1214 		orr	r4, r4, r2, lsr #4
 21956 0ba6 80F83C40 		strb	r4, [r0, #60]
 626:../src/sdcard.c ****   tmp = (uint8_t)((CID_Tab[3] & 0x0000FF00) >> 8);
 21957              		.loc 1 626 0
 21958 0baa 03F47F44 		and	r4, r3, #65280
 631:../src/sdcard.c ****   cardinfo->SD_cid.CID_CRC = (tmp & 0xFE) >> 1;
 21959              		.loc 1 631 0
 21960 0bae DBB2     		uxtb	r3, r3
 21961 0bb0 CB40     		lsrs	r3, r3, r1
 623:../src/sdcard.c ****   cardinfo->SD_cid.ManufactDate = (tmp & 0x0F) << 8;
 21962              		.loc 1 623 0
 21963 0bb2 02F00F02 		and	r2, r2, #15
 21964              	.LVL218:
 21965 0bb6 1202     		lsls	r2, r2, #8
 21966 0bb8 C287     		strh	r2, [r0, #62]	@ movhi
 627:../src/sdcard.c ****   cardinfo->SD_cid.ManufactDate |= tmp;
 21967              		.loc 1 627 0
 21968 0bba C28F     		ldrh	r2, [r0, #62]
 21969 0bbc 92B2     		uxth	r2, r2
 21970 0bbe 42EA1422 		orr	r2, r2, r4, lsr #8
 21971 0bc2 C287     		strh	r2, [r0, #62]	@ movhi
 631:../src/sdcard.c ****   cardinfo->SD_cid.CID_CRC = (tmp & 0xFE) >> 1;
 21972              		.loc 1 631 0
 21973 0bc4 80F84030 		strb	r3, [r0, #64]
 632:../src/sdcard.c ****   cardinfo->SD_cid.Reserved2 = 1;
 21974              		.loc 1 632 0
 21975 0bc8 80F84110 		strb	r1, [r0, #65]
 635:../src/sdcard.c **** }
 21976              		.loc 1 635 0
 21977 0bcc 2A20     		movs	r0, #42
 21978              	.LVL219:
 21979 0bce 70BD     		pop	{r4, r5, r6, pc}
 21980              	.L150:
 21981              		.align	2
 21982              	.L149:
 21983 0bd0 00000000 		.word	.LANCHOR0
 21984              		.cfi_endproc
 21985              	.LFE33:
 21987              		.align	1
 21988              		.global	SD_EnableWideBusOperation
 21989              		.thumb
 21990              		.thumb_func
 21992              	SD_EnableWideBusOperation:
 21993              	.LFB34:
 650:../src/sdcard.c **** {
 21994              		.loc 1 650 0
 21995              		.cfi_startproc
 21996              		@ args = 0, pretend = 0, frame = 0
 21997              		@ frame_needed = 0, uses_anonymous_args = 0
 21998              	.LVL220:
 21999 0bd4 38B5     		push	{r3, r4, r5, lr}
 22000              	.LCFI13:
 22001              		.cfi_def_cfa_offset 16
 654:../src/sdcard.c ****   if (SDIO_MULTIMEDIA_CARD == CardType)
 22002              		.loc 1 654 0
 22003 0bd6 194B     		ldr	r3, .L158
 22004              		.cfi_offset 14, -4
 22005              		.cfi_offset 5, -8
 22006              		.cfi_offset 4, -12
 22007              		.cfi_offset 3, -16
 650:../src/sdcard.c **** {
 22008              		.loc 1 650 0
 22009 0bd8 0546     		mov	r5, r0
 654:../src/sdcard.c ****   if (SDIO_MULTIMEDIA_CARD == CardType)
 22010              		.loc 1 654 0
 22011 0bda 5B68     		ldr	r3, [r3, #4]
 22012 0bdc 032B     		cmp	r3, #3
 22013 0bde 2AD0     		beq	.L156
 659:../src/sdcard.c ****   else if ((SDIO_STD_CAPACITY_SD_CARD_V1_1 == CardType) || (SDIO_STD_CAPACITY_SD_CARD_V2_0 == CardT
 22014              		.loc 1 659 0
 22015 0be0 022B     		cmp	r3, #2
 22016 0be2 26D8     		bhi	.L155
 661:../src/sdcard.c ****     if (SDIO_BusWide_8b == WideMode)
 22017              		.loc 1 661 0
 22018 0be4 B0F5805F 		cmp	r0, #4096
 22019 0be8 25D0     		beq	.L156
 666:../src/sdcard.c ****     else if (SDIO_BusWide_4b == WideMode)
 22020              		.loc 1 666 0
 22021 0bea B0F5006F 		cmp	r0, #2048
 22022 0bee 0ED1     		bne	.L153
 668:../src/sdcard.c ****       errorstatus = SDEnWideBus(ENABLE);
 22023              		.loc 1 668 0
 22024 0bf0 0120     		movs	r0, #1
 22025              	.LVL221:
 22026 0bf2 FFF7E1FB 		bl	SDEnWideBus
 670:../src/sdcard.c ****       if (SD_OK == errorstatus)
 22027              		.loc 1 670 0
 22028 0bf6 2A28     		cmp	r0, #42
 668:../src/sdcard.c ****       errorstatus = SDEnWideBus(ENABLE);
 22029              		.loc 1 668 0
 22030 0bf8 0446     		mov	r4, r0
 22031              	.LVL222:
 670:../src/sdcard.c ****       if (SD_OK == errorstatus)
 22032              		.loc 1 670 0
 22033 0bfa 1DD1     		bne	.L152
 673:../src/sdcard.c ****         SDIO_InitStructure.SDIO_ClockDiv = SDIO_TRANSFER_CLK_DIV; 
 22034              		.loc 1 673 0
 22035 0bfc 1048     		ldr	r0, .L158+4
 22036              	.LVL223:
 22037 0bfe 0123     		movs	r3, #1
 22038 0c00 0375     		strb	r3, [r0, #20]
 674:../src/sdcard.c ****         SDIO_InitStructure.SDIO_ClockEdge = SDIO_ClockEdge_Rising;
 22039              		.loc 1 674 0
 22040 0c02 013B     		subs	r3, r3, #1
 22041 0c04 0360     		str	r3, [r0, #0]
 675:../src/sdcard.c ****         SDIO_InitStructure.SDIO_ClockBypass = SDIO_ClockBypass_Disable;
 22042              		.loc 1 675 0
 22043 0c06 4360     		str	r3, [r0, #4]
 676:../src/sdcard.c ****         SDIO_InitStructure.SDIO_ClockPowerSave = SDIO_ClockPowerSave_Disable;
 22044              		.loc 1 676 0
 22045 0c08 8360     		str	r3, [r0, #8]
 677:../src/sdcard.c ****         SDIO_InitStructure.SDIO_BusWide = SDIO_BusWide_4b;
 22046              		.loc 1 677 0
 22047 0c0a C560     		str	r5, [r0, #12]
 22048 0c0c 0DE0     		b	.L157
 22049              	.LVL224:
 22050              	.L153:
 684:../src/sdcard.c ****       errorstatus = SDEnWideBus(DISABLE);
 22051              		.loc 1 684 0
 22052 0c0e 0020     		movs	r0, #0
 22053 0c10 FFF7D2FB 		bl	SDEnWideBus
 686:../src/sdcard.c ****       if (SD_OK == errorstatus)
 22054              		.loc 1 686 0
 22055 0c14 2A28     		cmp	r0, #42
 684:../src/sdcard.c ****       errorstatus = SDEnWideBus(DISABLE);
 22056              		.loc 1 684 0
 22057 0c16 0446     		mov	r4, r0
 22058              	.LVL225:
 686:../src/sdcard.c ****       if (SD_OK == errorstatus)
 22059              		.loc 1 686 0
 22060 0c18 0ED1     		bne	.L152
 689:../src/sdcard.c ****         SDIO_InitStructure.SDIO_ClockDiv = SDIO_TRANSFER_CLK_DIV; 
 22061              		.loc 1 689 0
 22062 0c1a 0948     		ldr	r0, .L158+4
 22063              	.LVL226:
 22064 0c1c 0123     		movs	r3, #1
 22065 0c1e 0375     		strb	r3, [r0, #20]
 690:../src/sdcard.c ****         SDIO_InitStructure.SDIO_ClockEdge = SDIO_ClockEdge_Rising;
 22066              		.loc 1 690 0
 22067 0c20 013B     		subs	r3, r3, #1
 22068 0c22 0360     		str	r3, [r0, #0]
 691:../src/sdcard.c ****         SDIO_InitStructure.SDIO_ClockBypass = SDIO_ClockBypass_Disable;
 22069              		.loc 1 691 0
 22070 0c24 4360     		str	r3, [r0, #4]
 692:../src/sdcard.c ****         SDIO_InitStructure.SDIO_ClockPowerSave = SDIO_ClockPowerSave_Disable;
 22071              		.loc 1 692 0
 22072 0c26 8360     		str	r3, [r0, #8]
 693:../src/sdcard.c ****         SDIO_InitStructure.SDIO_BusWide = SDIO_BusWide_1b;
 22073              		.loc 1 693 0
 22074 0c28 C360     		str	r3, [r0, #12]
 22075              	.LVL227:
 22076              	.L157:
 694:../src/sdcard.c ****         SDIO_InitStructure.SDIO_HardwareFlowControl = SDIO_HardwareFlowControl_Disable;
 22077              		.loc 1 694 0
 22078 0c2a 0361     		str	r3, [r0, #16]
 695:../src/sdcard.c ****         SDIO_Init(&SDIO_InitStructure);
 22079              		.loc 1 695 0
 22080 0c2c FFF7FEFF 		bl	SDIO_Init
 22081 0c30 02E0     		b	.L152
 22082              	.LVL228:
 22083              	.L155:
 651:../src/sdcard.c ****   SD_Error errorstatus = SD_OK;
 22084              		.loc 1 651 0
 22085 0c32 2A24     		movs	r4, #42
 22086 0c34 00E0     		b	.L152
 22087              	.L156:
 664:../src/sdcard.c ****       return(errorstatus);
 22088              		.loc 1 664 0
 22089 0c36 2724     		movs	r4, #39
 22090              	.LVL229:
 22091              	.L152:
 701:../src/sdcard.c **** }
 22092              		.loc 1 701 0
 22093 0c38 2046     		mov	r0, r4
 22094 0c3a 38BD     		pop	{r3, r4, r5, pc}
 22095              	.L159:
 22096              		.align	2
 22097              	.L158:
 22098 0c3c 00000000 		.word	.LANCHOR0
 22099 0c40 00000000 		.word	SDIO_InitStructure
 22100              		.cfi_endproc
 22101              	.LFE34:
 22103              		.align	1
 22104              		.global	SD_SetDeviceMode
 22105              		.thumb
 22106              		.thumb_func
 22108              	SD_SetDeviceMode:
 22109              	.LFB35:
 716:../src/sdcard.c **** {
 22110              		.loc 1 716 0
 22111              		.cfi_startproc
 22112              		@ args = 0, pretend = 0, frame = 0
 22113              		@ frame_needed = 0, uses_anonymous_args = 0
 22114              		@ link register save eliminated.
 22115              	.LVL230:
 719:../src/sdcard.c ****   if ((Mode == SD_DMA_MODE) || (Mode == SD_INTERRUPT_MODE) || (Mode == SD_POLLING_MODE))
 22116              		.loc 1 719 0
 22117 0c44 0228     		cmp	r0, #2
 22118 0c46 03D8     		bhi	.L162
 721:../src/sdcard.c ****     DeviceMode = Mode;
 22119              		.loc 1 721 0
 22120 0c48 024B     		ldr	r3, .L163
 22121 0c4a 1860     		str	r0, [r3, #0]
 717:../src/sdcard.c ****   SD_Error errorstatus = SD_OK;
 22122              		.loc 1 717 0
 22123 0c4c 2A20     		movs	r0, #42
 22124              	.LVL231:
 22125 0c4e 7047     		bx	lr
 22126              	.LVL232:
 22127              	.L162:
 725:../src/sdcard.c ****     errorstatus = SD_INVALID_PARAMETER;
 22128              		.loc 1 725 0
 22129 0c50 2620     		movs	r0, #38
 22130              	.LVL233:
 729:../src/sdcard.c **** }
 22131              		.loc 1 729 0
 22132 0c52 7047     		bx	lr
 22133              	.L164:
 22134              		.align	2
 22135              	.L163:
 22136 0c54 00000000 		.word	.LANCHOR1
 22137              		.cfi_endproc
 22138              	.LFE35:
 22140              		.align	1
 22141              		.global	SD_SelectDeselect
 22142              		.thumb
 22143              		.thumb_func
 22145              	SD_SelectDeselect:
 22146              	.LFB36:
 739:../src/sdcard.c **** {
 22147              		.loc 1 739 0
 22148              		.cfi_startproc
 22149              		@ args = 0, pretend = 0, frame = 0
 22150              		@ frame_needed = 0, uses_anonymous_args = 0
 22151              	.LVL234:
 743:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument =  addr;
 22152              		.loc 1 743 0
 22153 0c58 094B     		ldr	r3, .L166
 745:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 22154              		.loc 1 745 0
 22155 0c5a 4022     		movs	r2, #64
 739:../src/sdcard.c **** {
 22156              		.loc 1 739 0
 22157 0c5c 10B5     		push	{r4, lr}
 22158              	.LCFI14:
 22159              		.cfi_def_cfa_offset 8
 745:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 22160              		.loc 1 745 0
 22161 0c5e 9A60     		str	r2, [r3, #8]
 746:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 22162              		.loc 1 746 0
 22163 0c60 403A     		subs	r2, r2, #64
 744:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SEL_DESEL_CARD;
 22164              		.loc 1 744 0
 22165 0c62 0724     		movs	r4, #7
 22166              		.cfi_offset 14, -4
 22167              		.cfi_offset 4, -8
 746:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 22168              		.loc 1 746 0
 22169 0c64 DA60     		str	r2, [r3, #12]
 747:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 22170              		.loc 1 747 0
 22171 0c66 4FF48062 		mov	r2, #1024
 743:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument =  addr;
 22172              		.loc 1 743 0
 22173 0c6a 1860     		str	r0, [r3, #0]
 744:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SEL_DESEL_CARD;
 22174              		.loc 1 744 0
 22175 0c6c 5C60     		str	r4, [r3, #4]
 748:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 22176              		.loc 1 748 0
 22177 0c6e 1846     		mov	r0, r3
 22178              	.LVL235:
 747:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 22179              		.loc 1 747 0
 22180 0c70 1A61     		str	r2, [r3, #16]
 748:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 22181              		.loc 1 748 0
 22182 0c72 FFF7FEFF 		bl	SDIO_SendCommand
 22183              	.LVL236:
 750:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_SEL_DESEL_CARD);
 22184              		.loc 1 750 0
 22185 0c76 2046     		mov	r0, r4
 753:../src/sdcard.c **** }
 22186              		.loc 1 753 0
 22187 0c78 BDE81040 		pop	{r4, lr}
 750:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_SEL_DESEL_CARD);
 22188              		.loc 1 750 0
 22189 0c7c FFF7E8B9 		b	CmdResp1Error
 22190              	.L167:
 22191              		.align	2
 22192              	.L166:
 22193 0c80 00000000 		.word	SDIO_CmdInitStructure
 22194              		.cfi_endproc
 22195              	.LFE36:
 22197              		.align	1
 22198              		.global	SD_ReadBlock
 22199              		.thumb
 22200              		.thumb_func
 22202              	SD_ReadBlock:
 22203              	.LFB37:
 766:../src/sdcard.c **** {
 22204              		.loc 1 766 0
 22205              		.cfi_startproc
 22206              		@ args = 0, pretend = 0, frame = 8
 22207              		@ frame_needed = 0, uses_anonymous_args = 0
 22208              	.LVL237:
 22209 0c84 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 22210              	.LCFI15:
 22211              		.cfi_def_cfa_offset 48
 766:../src/sdcard.c **** {
 22212              		.loc 1 766 0
 22213 0c88 0446     		mov	r4, r0
 22214              		.cfi_offset 14, -4
 22215              		.cfi_offset 11, -8
 22216              		.cfi_offset 10, -12
 22217              		.cfi_offset 9, -16
 22218              		.cfi_offset 8, -20
 22219              		.cfi_offset 7, -24
 22220              		.cfi_offset 6, -28
 22221              		.cfi_offset 5, -32
 22222              		.cfi_offset 4, -36
 22223              		.cfi_offset 2, -40
 22224              		.cfi_offset 1, -44
 22225              		.cfi_offset 0, -48
 22226 0c8a 1646     		mov	r6, r2
 771:../src/sdcard.c ****   if (NULL == readbuff)
 22227              		.loc 1 771 0
 22228 0c8c 0F46     		mov	r7, r1
 22229 0c8e 0029     		cmp	r1, #0
 22230 0c90 00F00281 		beq	.L189
 22231              	.LVL238:
 777:../src/sdcard.c ****   TransferError = SD_OK;
 22232              		.loc 1 777 0
 22233 0c94 DFF818A2 		ldr	sl, .L192+16
 22234 0c98 2A23     		movs	r3, #42
 782:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
 22235              		.loc 1 782 0
 22236 0c9a DFF80892 		ldr	r9, .L192+4
 777:../src/sdcard.c ****   TransferError = SD_OK;
 22237              		.loc 1 777 0
 22238 0c9e 8AF80430 		strb	r3, [sl, #4]
 782:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
 22239              		.loc 1 782 0
 22240 0ca2 7F4B     		ldr	r3, .L192
 778:../src/sdcard.c ****   TransferEnd = 0;
 22241              		.loc 1 778 0
 22242 0ca4 0025     		movs	r5, #0
 22243 0ca6 DFF81082 		ldr	r8, .L192+24
 782:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
 22244              		.loc 1 782 0
 22245 0caa C9F80030 		str	r3, [r9, #0]
 788:../src/sdcard.c ****   SDIO_DataConfig(&SDIO_DataInitStructure);
 22246              		.loc 1 788 0
 22247 0cae 4846     		mov	r0, r9
 22248              	.LVL239:
 783:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataLength = 0;
 22249              		.loc 1 783 0
 22250 0cb0 C9F80450 		str	r5, [r9, #4]
 784:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataBlockSize = SDIO_DataBlockSize_1b;
 22251              		.loc 1 784 0
 22252 0cb4 C9F80850 		str	r5, [r9, #8]
 785:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferDir = SDIO_TransferDir_ToCard;
 22253              		.loc 1 785 0
 22254 0cb8 C9F80C50 		str	r5, [r9, #12]
 786:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferMode = SDIO_TransferMode_Block;
 22255              		.loc 1 786 0
 22256 0cbc C9F81050 		str	r5, [r9, #16]
 787:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DPSM = SDIO_DPSM_Disable;
 22257              		.loc 1 787 0
 22258 0cc0 C9F81450 		str	r5, [r9, #20]
 778:../src/sdcard.c ****   TransferEnd = 0;
 22259              		.loc 1 778 0
 22260 0cc4 C8F82850 		str	r5, [r8, #40]
 779:../src/sdcard.c ****   TotalNumberOfBytes = 0;
 22261              		.loc 1 779 0
 22262 0cc8 C8F82C50 		str	r5, [r8, #44]
 788:../src/sdcard.c ****   SDIO_DataConfig(&SDIO_DataInitStructure);
 22263              		.loc 1 788 0
 22264 0ccc FFF7FEFF 		bl	SDIO_DataConfig
 22265              	.LVL240:
 789:../src/sdcard.c ****   SDIO_DMACmd(DISABLE);
 22266              		.loc 1 789 0
 22267 0cd0 2846     		mov	r0, r5
 22268 0cd2 FFF7FEFF 		bl	SDIO_DMACmd
 791:../src/sdcard.c ****   if (SDIO_GetResponse(SDIO_RESP1) & SD_CARD_LOCKED)
 22269              		.loc 1 791 0
 22270 0cd6 2846     		mov	r0, r5
 22271 0cd8 FFF7FEFF 		bl	SDIO_GetResponse
 22272 0cdc 10F0007F 		tst	r0, #33554432
 22273 0ce0 4B46     		mov	r3, r9
 22274 0ce2 40F0D780 		bne	.L187
 797:../src/sdcard.c ****   if (CardType == SDIO_HIGH_CAPACITY_SD_CARD)
 22275              		.loc 1 797 0
 22276 0ce6 D8F80420 		ldr	r2, [r8, #4]
 22277 0cea 022A     		cmp	r2, #2
 22278 0cec 02D1     		bne	.L170
 22279              	.LVL241:
 800:../src/sdcard.c ****     addr /= 512;
 22280              		.loc 1 800 0
 22281 0cee 640A     		lsrs	r4, r4, #9
 22282              	.LVL242:
 799:../src/sdcard.c ****     BlockSize = 512;
 22283              		.loc 1 799 0
 22284 0cf0 4FF40076 		mov	r6, #512
 22285              	.LVL243:
 22286              	.L170:
 802:../src/sdcard.c ****   if ((BlockSize > 0) && (BlockSize <= 2048) && ((BlockSize & (BlockSize - 1)) == 0))
 22287              		.loc 1 802 0
 22288 0cf4 721E     		subs	r2, r6, #1
 22289 0cf6 91B2     		uxth	r1, r2
 22290 0cf8 B1F5006F 		cmp	r1, #2048
 22291 0cfc 80F0CC80 		bcs	.L189
 802:../src/sdcard.c ****   if ((BlockSize > 0) && (BlockSize <= 2048) && ((BlockSize & (BlockSize - 1)) == 0))
 22292              		.loc 1 802 0 is_stmt 0 discriminator 1
 22293 0d00 3240     		ands	r2, r2, r6
 22294 0d02 0192     		str	r2, [sp, #4]
 22295 0d04 40F0C880 		bne	.L189
 804:../src/sdcard.c ****     power = convert_from_bytes_to_power_of_two(BlockSize);
 22296              		.loc 1 804 0 is_stmt 1
 22297 0d08 3046     		mov	r0, r6
 22298 0d0a 0093     		str	r3, [sp, #0]
 22299 0d0c FFF778F9 		bl	convert_from_bytes_to_power_of_two
 807:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) BlockSize;
 22300              		.loc 1 807 0
 22301 0d10 DFF8A8B1 		ldr	fp, .L192+28
 809:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 22302              		.loc 1 809 0
 22303 0d14 4022     		movs	r2, #64
 22304 0d16 CBF80820 		str	r2, [fp, #8]
 810:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 22305              		.loc 1 810 0
 22306 0d1a 019A     		ldr	r2, [sp, #4]
 808:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SET_BLOCKLEN;
 22307              		.loc 1 808 0
 22308 0d1c 1025     		movs	r5, #16
 810:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 22309              		.loc 1 810 0
 22310 0d1e CBF80C20 		str	r2, [fp, #12]
 804:../src/sdcard.c ****     power = convert_from_bytes_to_power_of_two(BlockSize);
 22311              		.loc 1 804 0
 22312 0d22 8146     		mov	r9, r0
 22313              	.LVL244:
 811:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 22314              		.loc 1 811 0
 22315 0d24 4FF48062 		mov	r2, #1024
 812:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
 22316              		.loc 1 812 0
 22317 0d28 5846     		mov	r0, fp
 22318              	.LVL245:
 808:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SET_BLOCKLEN;
 22319              		.loc 1 808 0
 22320 0d2a CBF80450 		str	r5, [fp, #4]
 811:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 22321              		.loc 1 811 0
 22322 0d2e CBF81020 		str	r2, [fp, #16]
 807:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) BlockSize;
 22323              		.loc 1 807 0
 22324 0d32 CBF80060 		str	r6, [fp, #0]
 812:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
 22325              		.loc 1 812 0
 22326 0d36 FFF7FEFF 		bl	SDIO_SendCommand
 814:../src/sdcard.c ****     errorstatus = CmdResp1Error(SDIO_SET_BLOCKLEN);
 22327              		.loc 1 814 0
 22328 0d3a 2846     		mov	r0, r5
 22329 0d3c FFF788F9 		bl	CmdResp1Error
 816:../src/sdcard.c ****     if (SD_OK != errorstatus)
 22330              		.loc 1 816 0
 22331 0d40 2A28     		cmp	r0, #42
 814:../src/sdcard.c ****     errorstatus = CmdResp1Error(SDIO_SET_BLOCKLEN);
 22332              		.loc 1 814 0
 22333 0d42 0546     		mov	r5, r0
 22334              	.LVL246:
 816:../src/sdcard.c ****     if (SD_OK != errorstatus)
 22335              		.loc 1 816 0
 22336 0d44 009B     		ldr	r3, [sp, #0]
 22337 0d46 40F0A880 		bne	.L169
 827:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
 22338              		.loc 1 827 0
 22339 0d4a 554A     		ldr	r2, .L192
 828:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataLength = BlockSize;
 22340              		.loc 1 828 0
 22341 0d4c 5E60     		str	r6, [r3, #4]
 827:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
 22342              		.loc 1 827 0
 22343 0d4e 1A60     		str	r2, [r3, #0]
 829:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataBlockSize = (uint32_t) power << 4;
 22344              		.loc 1 829 0
 22345 0d50 4FEA0912 		lsl	r2, r9, #4
 22346 0d54 9A60     		str	r2, [r3, #8]
 830:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferDir = SDIO_TransferDir_ToSDIO;
 22347              		.loc 1 830 0
 22348 0d56 0222     		movs	r2, #2
 22349 0d58 DA60     		str	r2, [r3, #12]
 831:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferMode = SDIO_TransferMode_Block;
 22350              		.loc 1 831 0
 22351 0d5a 019A     		ldr	r2, [sp, #4]
 832:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DPSM = SDIO_DPSM_Enable;
 22352              		.loc 1 832 0
 22353 0d5c 4FF00109 		mov	r9, #1
 22354              	.LVL247:
 831:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferMode = SDIO_TransferMode_Block;
 22355              		.loc 1 831 0
 22356 0d60 1A61     		str	r2, [r3, #16]
 832:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DPSM = SDIO_DPSM_Enable;
 22357              		.loc 1 832 0
 22358 0d62 C3F81490 		str	r9, [r3, #20]
 833:../src/sdcard.c ****   SDIO_DataConfig(&SDIO_DataInitStructure);
 22359              		.loc 1 833 0
 22360 0d66 4F48     		ldr	r0, .L192+4
 22361              	.LVL248:
 22362 0d68 FFF7FEFF 		bl	SDIO_DataConfig
 836:../src/sdcard.c ****   StopCondition = 0;
 22363              		.loc 1 836 0
 22364 0d6c 019B     		ldr	r3, [sp, #4]
 842:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 22365              		.loc 1 842 0
 22366 0d6e 4022     		movs	r2, #64
 836:../src/sdcard.c ****   StopCondition = 0;
 22367              		.loc 1 836 0
 22368 0d70 C8F83030 		str	r3, [r8, #48]
 837:../src/sdcard.c ****   DestBuffer = readbuff;
 22369              		.loc 1 837 0
 22370 0d74 4C4B     		ldr	r3, .L192+8
 840:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = (uint32_t)addr;
 22371              		.loc 1 840 0
 22372 0d76 CBF80040 		str	r4, [fp, #0]
 837:../src/sdcard.c ****   DestBuffer = readbuff;
 22373              		.loc 1 837 0
 22374 0d7a 1F60     		str	r7, [r3, #0]
 843:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 22375              		.loc 1 843 0
 22376 0d7c 019B     		ldr	r3, [sp, #4]
 841:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_READ_SINGLE_BLOCK;
 22377              		.loc 1 841 0
 22378 0d7e 1124     		movs	r4, #17
 22379              	.LVL249:
 842:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 22380              		.loc 1 842 0
 22381 0d80 CBF80820 		str	r2, [fp, #8]
 845:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 22382              		.loc 1 845 0
 22383 0d84 5846     		mov	r0, fp
 844:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 22384              		.loc 1 844 0
 22385 0d86 4FF48062 		mov	r2, #1024
 843:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 22386              		.loc 1 843 0
 22387 0d8a CBF80C30 		str	r3, [fp, #12]
 844:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 22388              		.loc 1 844 0
 22389 0d8e CBF81020 		str	r2, [fp, #16]
 835:../src/sdcard.c ****   TotalNumberOfBytes = BlockSize;
 22390              		.loc 1 835 0
 22391 0d92 C8F82C60 		str	r6, [r8, #44]
 841:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_READ_SINGLE_BLOCK;
 22392              		.loc 1 841 0
 22393 0d96 CBF80440 		str	r4, [fp, #4]
 845:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 22394              		.loc 1 845 0
 22395 0d9a FFF7FEFF 		bl	SDIO_SendCommand
 22396              	.LVL250:
 847:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_READ_SINGLE_BLOCK);
 22397              		.loc 1 847 0
 22398 0d9e 2046     		mov	r0, r4
 22399 0da0 FFF756F9 		bl	CmdResp1Error
 849:../src/sdcard.c ****   if (errorstatus != SD_OK)
 22400              		.loc 1 849 0
 22401 0da4 2A28     		cmp	r0, #42
 847:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_READ_SINGLE_BLOCK);
 22402              		.loc 1 847 0
 22403 0da6 0546     		mov	r5, r0
 22404              	.LVL251:
 849:../src/sdcard.c ****   if (errorstatus != SD_OK)
 22405              		.loc 1 849 0
 22406 0da8 77D1     		bne	.L169
 854:../src/sdcard.c ****   if (DeviceMode == SD_POLLING_MODE)
 22407              		.loc 1 854 0
 22408 0daa DAF80010 		ldr	r1, [sl, #0]
 22409 0dae 0229     		cmp	r1, #2
 22410 0db0 49D1     		bne	.L171
 22411 0db2 0BE0     		b	.L191
 22412              	.LVL252:
 22413              	.L175:
 859:../src/sdcard.c ****       if (SDIO_GetFlagStatus(SDIO_FLAG_RXFIFOHF) != RESET)
 22414              		.loc 1 859 0
 22415 0db4 4FF40040 		mov	r0, #32768
 22416 0db8 FFF7FEFF 		bl	SDIO_GetFlagStatus
 22417 0dbc 30B1     		cbz	r0, .L191
 22418              	.L174:
 863:../src/sdcard.c ****           *(tempbuff + count) = SDIO_ReadData();
 22419              		.loc 1 863 0 discriminator 2
 22420 0dbe FFF7FEFF 		bl	SDIO_ReadData
 22421 0dc2 3851     		str	r0, [r7, r4]
 22422 0dc4 0434     		adds	r4, r4, #4
 861:../src/sdcard.c ****         for (count = 0; count < 8; count++)
 22423              		.loc 1 861 0 discriminator 2
 22424 0dc6 202C     		cmp	r4, #32
 22425 0dc8 F9D1     		bne	.L174
 865:../src/sdcard.c ****         tempbuff += 8;
 22426              		.loc 1 865 0
 22427 0dca 2037     		adds	r7, r7, #32
 22428              	.LVL253:
 22429              	.L191:
 857:../src/sdcard.c ****     while (!(SDIO->STA &(SDIO_FLAG_RXOVERR | SDIO_FLAG_DCRCFAIL | SDIO_FLAG_DTIMEOUT | SDIO_FLAG_DB
 22430              		.loc 1 857 0 discriminator 1
 22431 0dcc 374B     		ldr	r3, .L192+12
 22432 0dce 40F22A64 		movw	r4, #1578
 22433 0dd2 5B6B     		ldr	r3, [r3, #52]
 22434 0dd4 03EA0404 		and	r4, r3, r4
 22435 0dd8 002C     		cmp	r4, #0
 22436 0dda EBD0     		beq	.L175
 869:../src/sdcard.c ****     if (SDIO_GetFlagStatus(SDIO_FLAG_DTIMEOUT) != RESET)
 22437              		.loc 1 869 0
 22438 0ddc 0820     		movs	r0, #8
 22439 0dde FFF7FEFF 		bl	SDIO_GetFlagStatus
 22440 0de2 20B1     		cbz	r0, .L176
 871:../src/sdcard.c ****       SDIO_ClearFlag(SDIO_FLAG_DTIMEOUT);
 22441              		.loc 1 871 0
 22442 0de4 0820     		movs	r0, #8
 22443 0de6 FFF7FEFF 		bl	SDIO_ClearFlag
 22444              	.LVL254:
 873:../src/sdcard.c ****       return(errorstatus);
 22445              		.loc 1 873 0
 22446 0dea 0425     		movs	r5, #4
 22447 0dec 55E0     		b	.L169
 22448              	.LVL255:
 22449              	.L176:
 875:../src/sdcard.c ****     else if (SDIO_GetFlagStatus(SDIO_FLAG_DCRCFAIL) != RESET)
 22450              		.loc 1 875 0
 22451 0dee 0220     		movs	r0, #2
 22452 0df0 FFF7FEFF 		bl	SDIO_GetFlagStatus
 22453 0df4 20B1     		cbz	r0, .L177
 877:../src/sdcard.c ****       SDIO_ClearFlag(SDIO_FLAG_DCRCFAIL);
 22454              		.loc 1 877 0
 22455 0df6 0220     		movs	r0, #2
 22456 0df8 FFF7FEFF 		bl	SDIO_ClearFlag
 22457              	.LVL256:
 879:../src/sdcard.c ****       return(errorstatus);
 22458              		.loc 1 879 0
 22459 0dfc 0225     		movs	r5, #2
 22460 0dfe 4CE0     		b	.L169
 22461              	.LVL257:
 22462              	.L177:
 881:../src/sdcard.c ****     else if (SDIO_GetFlagStatus(SDIO_FLAG_RXOVERR) != RESET)
 22463              		.loc 1 881 0
 22464 0e00 2020     		movs	r0, #32
 22465 0e02 FFF7FEFF 		bl	SDIO_GetFlagStatus
 22466 0e06 20B1     		cbz	r0, .L178
 883:../src/sdcard.c ****       SDIO_ClearFlag(SDIO_FLAG_RXOVERR);
 22467              		.loc 1 883 0
 22468 0e08 2020     		movs	r0, #32
 22469 0e0a FFF7FEFF 		bl	SDIO_ClearFlag
 22470              	.LVL258:
 885:../src/sdcard.c ****       return(errorstatus);
 22471              		.loc 1 885 0
 22472 0e0e 0625     		movs	r5, #6
 22473 0e10 43E0     		b	.L169
 22474              	.LVL259:
 22475              	.L178:
 887:../src/sdcard.c ****     else if (SDIO_GetFlagStatus(SDIO_FLAG_STBITERR) != RESET)
 22476              		.loc 1 887 0
 22477 0e12 4FF40070 		mov	r0, #512
 22478 0e16 FFF7FEFF 		bl	SDIO_GetFlagStatus
 22479 0e1a 48B1     		cbz	r0, .L180
 889:../src/sdcard.c ****       SDIO_ClearFlag(SDIO_FLAG_STBITERR);
 22480              		.loc 1 889 0
 22481 0e1c 4FF40070 		mov	r0, #512
 22482 0e20 FFF7FEFF 		bl	SDIO_ClearFlag
 22483              	.LVL260:
 891:../src/sdcard.c ****       return(errorstatus);
 22484              		.loc 1 891 0
 22485 0e24 0725     		movs	r5, #7
 22486 0e26 38E0     		b	.L169
 22487              	.LVL261:
 22488              	.L181:
 895:../src/sdcard.c ****       *tempbuff = SDIO_ReadData();
 22489              		.loc 1 895 0
 22490 0e28 FFF7FEFF 		bl	SDIO_ReadData
 22491 0e2c 47F8040B 		str	r0, [r7], #4
 22492              	.LVL262:
 22493              	.L180:
 893:../src/sdcard.c ****     while (SDIO_GetFlagStatus(SDIO_FLAG_RXDAVL) != RESET)
 22494              		.loc 1 893 0 discriminator 1
 22495 0e30 4FF40010 		mov	r0, #2097152
 22496 0e34 FFF7FEFF 		bl	SDIO_GetFlagStatus
 22497 0e38 0028     		cmp	r0, #0
 22498 0e3a F5D1     		bne	.L181
 900:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_STATIC_FLAGS);
 22499              		.loc 1 900 0
 22500 0e3c 40F2FF50 		movw	r0, #1535
 22501 0e40 FFF7FEFF 		bl	SDIO_ClearFlag
 22502 0e44 29E0     		b	.L169
 22503              	.LVL263:
 22504              	.L171:
 902:../src/sdcard.c ****   else if (DeviceMode == SD_INTERRUPT_MODE)
 22505              		.loc 1 902 0
 22506 0e46 0129     		cmp	r1, #1
 22507 0e48 11D1     		bne	.L182
 904:../src/sdcard.c ****     SDIO_ITConfig(SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_DATAEND | SDIO_IT_RXOVERR | SDIO_IT
 22508              		.loc 1 904 0
 22509 0e4a 48F22A30 		movw	r0, #33578
 22510 0e4e FFF7FEFF 		bl	SDIO_ITConfig
 22511              	.L184:
 905:../src/sdcard.c ****     while ((TransferEnd == 0) && (TransferError == SD_OK))
 22512              		.loc 1 905 0 discriminator 1
 22513 0e52 D8F82830 		ldr	r3, [r8, #40]
 22514 0e56 1BB9     		cbnz	r3, .L183
 905:../src/sdcard.c ****     while ((TransferEnd == 0) && (TransferError == SD_OK))
 22515              		.loc 1 905 0 is_stmt 0 discriminator 2
 22516 0e58 9AF80430 		ldrb	r3, [sl, #4]	@ zero_extendqisi2
 22517 0e5c 2A2B     		cmp	r3, #42
 22518 0e5e F8D0     		beq	.L184
 22519              	.L183:
 907:../src/sdcard.c ****     if (TransferError != SD_OK)
 22520              		.loc 1 907 0 is_stmt 1
 22521 0e60 9AF80430 		ldrb	r3, [sl, #4]	@ zero_extendqisi2
 22522 0e64 2A2B     		cmp	r3, #42
 22523 0e66 18D0     		beq	.L169
 909:../src/sdcard.c ****       return(TransferError);
 22524              		.loc 1 909 0
 22525 0e68 114B     		ldr	r3, .L192+16
 22526 0e6a 1D79     		ldrb	r5, [r3, #4]	@ zero_extendqisi2
 22527              	.LVL264:
 22528 0e6c 15E0     		b	.L169
 22529              	.LVL265:
 22530              	.L182:
 912:../src/sdcard.c ****   else if (DeviceMode == SD_DMA_MODE)
 22531              		.loc 1 912 0
 22532 0e6e A1B9     		cbnz	r1, .L169
 914:../src/sdcard.c ****     SDIO_ITConfig(SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_DATAEND | SDIO_IT_RXOVERR | SDIO_IT
 22533              		.loc 1 914 0
 22534 0e70 4946     		mov	r1, r9
 22535 0e72 40F22A30 		movw	r0, #810
 22536              	.LVL266:
 22537 0e76 FFF7FEFF 		bl	SDIO_ITConfig
 915:../src/sdcard.c ****     SDIO_DMACmd(ENABLE);
 22538              		.loc 1 915 0
 22539 0e7a 4846     		mov	r0, r9
 22540 0e7c FFF7FEFF 		bl	SDIO_DMACmd
 917:../src/sdcard.c ****     DMA_RxConfiguration(readbuff, BlockSize);
 22541              		.loc 1 917 0
 22542 0e80 3846     		mov	r0, r7
 22543 0e82 3146     		mov	r1, r6
 22544 0e84 FFF768FA 		bl	DMA_RxConfiguration
 22545              	.L185:
 918:../src/sdcard.c ****     while (DMA_GetFlagStatus(DMA2_FLAG_TC4) == RESET)
 22546              		.loc 1 918 0 discriminator 1
 22547 0e88 0A48     		ldr	r0, .L192+20
 22548 0e8a FFF7FEFF 		bl	DMA_GetFlagStatus
 22549 0e8e 0028     		cmp	r0, #0
 22550 0e90 FAD0     		beq	.L185
 22551 0e92 02E0     		b	.L169
 22552              	.LVL267:
 22553              	.L187:
 794:../src/sdcard.c ****     return(errorstatus);
 22554              		.loc 1 794 0
 22555 0e94 0E25     		movs	r5, #14
 22556 0e96 00E0     		b	.L169
 22557              	.L189:
 824:../src/sdcard.c ****     return(errorstatus);
 22558              		.loc 1 824 0
 22559 0e98 2625     		movs	r5, #38
 22560              	.LVL268:
 22561              	.L169:
 922:../src/sdcard.c **** }
 22562              		.loc 1 922 0
 22563 0e9a 2846     		mov	r0, r5
 22564 0e9c BDE8FE8F 		pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 22565              	.L193:
 22566              		.align	2
 22567              	.L192:
 22568 0ea0 FFFF0F00 		.word	1048575
 22569 0ea4 00000000 		.word	SDIO_DataInitStructure
 22570 0ea8 00000000 		.word	DestBuffer
 22571 0eac 00800140 		.word	1073840128
 22572 0eb0 00000000 		.word	.LANCHOR1
 22573 0eb4 00200010 		.word	268443648
 22574 0eb8 00000000 		.word	.LANCHOR0
 22575 0ebc 00000000 		.word	SDIO_CmdInitStructure
 22576              		.cfi_endproc
 22577              	.LFE37:
 22579              		.align	1
 22580              		.global	SD_ReadMultiBlocks
 22581              		.thumb
 22582              		.thumb_func
 22584              	SD_ReadMultiBlocks:
 22585              	.LFB38:
 936:../src/sdcard.c **** {
 22586              		.loc 1 936 0
 22587              		.cfi_startproc
 22588              		@ args = 0, pretend = 0, frame = 16
 22589              		@ frame_needed = 0, uses_anonymous_args = 0
 22590              	.LVL269:
 22591 0ec0 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 22592              	.LCFI16:
 22593              		.cfi_def_cfa_offset 36
 22594 0ec4 85B0     		sub	sp, sp, #20
 22595              	.LCFI17:
 22596              		.cfi_def_cfa_offset 56
 936:../src/sdcard.c **** {
 22597              		.loc 1 936 0
 22598 0ec6 0290     		str	r0, [sp, #8]
 22599 0ec8 1446     		mov	r4, r2
 22600              		.cfi_offset 14, -4
 22601              		.cfi_offset 11, -8
 22602              		.cfi_offset 10, -12
 22603              		.cfi_offset 9, -16
 22604              		.cfi_offset 8, -20
 22605              		.cfi_offset 7, -24
 22606              		.cfi_offset 6, -28
 22607              		.cfi_offset 5, -32
 22608              		.cfi_offset 4, -36
 22609 0eca 9946     		mov	r9, r3
 941:../src/sdcard.c ****   if (NULL == readbuff)
 22610              		.loc 1 941 0
 22611 0ecc 8846     		mov	r8, r1
 22612 0ece 0029     		cmp	r1, #0
 22613 0ed0 00F03081 		beq	.L220
 22614              	.LVL270:
 947:../src/sdcard.c ****   TransferError = SD_OK;
 22615              		.loc 1 947 0
 22616 0ed4 9B4F     		ldr	r7, .L227
 952:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
 22617              		.loc 1 952 0
 22618 0ed6 DFF87CB2 		ldr	fp, .L227+16
 947:../src/sdcard.c ****   TransferError = SD_OK;
 22619              		.loc 1 947 0
 22620 0eda 2A23     		movs	r3, #42
 22621              	.LVL271:
 22622 0edc 3B71     		strb	r3, [r7, #4]
 948:../src/sdcard.c ****   TransferEnd = 0;
 22623              		.loc 1 948 0
 22624 0ede 9A4E     		ldr	r6, .L227+4
 952:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
 22625              		.loc 1 952 0
 22626 0ee0 9A4B     		ldr	r3, .L227+8
 948:../src/sdcard.c ****   TransferEnd = 0;
 22627              		.loc 1 948 0
 22628 0ee2 0025     		movs	r5, #0
 958:../src/sdcard.c ****   SDIO_DataConfig(&SDIO_DataInitStructure);
 22629              		.loc 1 958 0
 22630 0ee4 5846     		mov	r0, fp
 22631              	.LVL272:
 952:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
 22632              		.loc 1 952 0
 22633 0ee6 CBF80030 		str	r3, [fp, #0]
 948:../src/sdcard.c ****   TransferEnd = 0;
 22634              		.loc 1 948 0
 22635 0eea B562     		str	r5, [r6, #40]
 949:../src/sdcard.c ****   TotalNumberOfBytes = 0;
 22636              		.loc 1 949 0
 22637 0eec F562     		str	r5, [r6, #44]
 953:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataLength = 0;
 22638              		.loc 1 953 0
 22639 0eee CBF80450 		str	r5, [fp, #4]
 954:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataBlockSize = SDIO_DataBlockSize_1b;
 22640              		.loc 1 954 0
 22641 0ef2 CBF80850 		str	r5, [fp, #8]
 955:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferDir = SDIO_TransferDir_ToCard;
 22642              		.loc 1 955 0
 22643 0ef6 CBF80C50 		str	r5, [fp, #12]
 956:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferMode = SDIO_TransferMode_Block;
 22644              		.loc 1 956 0
 22645 0efa CBF81050 		str	r5, [fp, #16]
 957:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DPSM = SDIO_DPSM_Disable;
 22646              		.loc 1 957 0
 22647 0efe CBF81450 		str	r5, [fp, #20]
 958:../src/sdcard.c ****   SDIO_DataConfig(&SDIO_DataInitStructure);
 22648              		.loc 1 958 0
 22649 0f02 FFF7FEFF 		bl	SDIO_DataConfig
 22650              	.LVL273:
 959:../src/sdcard.c ****   SDIO_DMACmd(DISABLE);
 22651              		.loc 1 959 0
 22652 0f06 2846     		mov	r0, r5
 22653 0f08 FFF7FEFF 		bl	SDIO_DMACmd
 961:../src/sdcard.c ****   if (SDIO_GetResponse(SDIO_RESP1) & SD_CARD_LOCKED)
 22654              		.loc 1 961 0
 22655 0f0c 2846     		mov	r0, r5
 22656 0f0e FFF7FEFF 		bl	SDIO_GetResponse
 22657 0f12 10F0007F 		tst	r0, #33554432
 22658 0f16 40F00B81 		bne	.L217
 967:../src/sdcard.c ****   if (CardType == SDIO_HIGH_CAPACITY_SD_CARD)
 22659              		.loc 1 967 0
 22660 0f1a 7368     		ldr	r3, [r6, #4]
 22661 0f1c 022B     		cmp	r3, #2
 22662 0f1e 04D1     		bne	.L196
 22663              	.LVL274:
 970:../src/sdcard.c ****     addr /= 512;
 22664              		.loc 1 970 0
 22665 0f20 029A     		ldr	r2, [sp, #8]
 969:../src/sdcard.c ****     BlockSize = 512;
 22666              		.loc 1 969 0
 22667 0f22 4FF40074 		mov	r4, #512
 970:../src/sdcard.c ****     addr /= 512;
 22668              		.loc 1 970 0
 22669 0f26 520A     		lsrs	r2, r2, #9
 22670 0f28 0292     		str	r2, [sp, #8]
 22671              	.LVL275:
 22672              	.L196:
 973:../src/sdcard.c ****   if ((BlockSize > 0) && (BlockSize <= 2048) && (0 == (BlockSize & (BlockSize - 1))))
 22673              		.loc 1 973 0
 22674 0f2a 631E     		subs	r3, r4, #1
 22675 0f2c 9AB2     		uxth	r2, r3
 22676 0f2e B2F5006F 		cmp	r2, #2048
 22677 0f32 80F0FF80 		bcs	.L220
 973:../src/sdcard.c ****   if ((BlockSize > 0) && (BlockSize <= 2048) && (0 == (BlockSize & (BlockSize - 1))))
 22678              		.loc 1 973 0 is_stmt 0 discriminator 1
 22679 0f36 2340     		ands	r3, r3, r4
 22680 0f38 0393     		str	r3, [sp, #12]
 22681 0f3a 40F0FB80 		bne	.L220
 975:../src/sdcard.c ****     power = convert_from_bytes_to_power_of_two(BlockSize);
 22682              		.loc 1 975 0 is_stmt 1
 22683 0f3e 2046     		mov	r0, r4
 22684 0f40 FFF75EF8 		bl	convert_from_bytes_to_power_of_two
 978:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) BlockSize;
 22685              		.loc 1 978 0
 22686 0f44 DFF814A2 		ldr	sl, .L227+24
 980:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 22687              		.loc 1 980 0
 22688 0f48 4022     		movs	r2, #64
 22689 0f4a CAF80820 		str	r2, [sl, #8]
 981:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 22690              		.loc 1 981 0
 22691 0f4e 039A     		ldr	r2, [sp, #12]
 975:../src/sdcard.c ****     power = convert_from_bytes_to_power_of_two(BlockSize);
 22692              		.loc 1 975 0
 22693 0f50 0346     		mov	r3, r0
 22694              	.LVL276:
 979:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SET_BLOCKLEN;
 22695              		.loc 1 979 0
 22696 0f52 1025     		movs	r5, #16
 981:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 22697              		.loc 1 981 0
 22698 0f54 CAF80C20 		str	r2, [sl, #12]
 983:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
 22699              		.loc 1 983 0
 22700 0f58 5046     		mov	r0, sl
 22701              	.LVL277:
 982:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 22702              		.loc 1 982 0
 22703 0f5a 4FF48062 		mov	r2, #1024
 983:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
 22704              		.loc 1 983 0
 22705 0f5e 0193     		str	r3, [sp, #4]
 979:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SET_BLOCKLEN;
 22706              		.loc 1 979 0
 22707 0f60 CAF80450 		str	r5, [sl, #4]
 982:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 22708              		.loc 1 982 0
 22709 0f64 CAF81020 		str	r2, [sl, #16]
 978:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) BlockSize;
 22710              		.loc 1 978 0
 22711 0f68 CAF80040 		str	r4, [sl, #0]
 983:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
 22712              		.loc 1 983 0
 22713 0f6c FFF7FEFF 		bl	SDIO_SendCommand
 22714              	.LVL278:
 985:../src/sdcard.c ****     errorstatus = CmdResp1Error(SDIO_SET_BLOCKLEN);
 22715              		.loc 1 985 0
 22716 0f70 2846     		mov	r0, r5
 22717 0f72 FFF76DF8 		bl	CmdResp1Error
 987:../src/sdcard.c ****     if (SD_OK != errorstatus)
 22718              		.loc 1 987 0
 22719 0f76 2A28     		cmp	r0, #42
 985:../src/sdcard.c ****     errorstatus = CmdResp1Error(SDIO_SET_BLOCKLEN);
 22720              		.loc 1 985 0
 22721 0f78 0546     		mov	r5, r0
 22722              	.LVL279:
 987:../src/sdcard.c ****     if (SD_OK != errorstatus)
 22723              		.loc 1 987 0
 22724 0f7a 019B     		ldr	r3, [sp, #4]
 22725 0f7c 40F0DD80 		bne	.L195
 998:../src/sdcard.c ****   if (NumberOfBlocks > 1)
 22726              		.loc 1 998 0
 22727 0f80 B9F1010F 		cmp	r9, #1
 22728 0f84 40F2D980 		bls	.L195
1001:../src/sdcard.c ****     if (NumberOfBlocks * BlockSize > SD_MAX_DATA_LENGTH)
 22729              		.loc 1 1001 0
 22730 0f88 09FB04F4 		mul	r4, r9, r4
 22731              	.LVL280:
 22732 0f8c B4F1007F 		cmp	r4, #33554432
 22733 0f90 80F0D080 		bcs	.L220
1013:../src/sdcard.c ****     SDIO_DataInitStructure.SDIO_DataBlockSize = (uint32_t) power << 4;
 22734              		.loc 1 1013 0
 22735 0f94 1B01     		lsls	r3, r3, #4
1009:../src/sdcard.c ****     DestBuffer = readbuff;
 22736              		.loc 1 1009 0
 22737 0f96 6E4A     		ldr	r2, .L227+12
1013:../src/sdcard.c ****     SDIO_DataInitStructure.SDIO_DataBlockSize = (uint32_t) power << 4;
 22738              		.loc 1 1013 0
 22739 0f98 CBF80830 		str	r3, [fp, #8]
1014:../src/sdcard.c ****     SDIO_DataInitStructure.SDIO_TransferDir = SDIO_TransferDir_ToSDIO;
 22740              		.loc 1 1014 0
 22741 0f9c 0223     		movs	r3, #2
1009:../src/sdcard.c ****     DestBuffer = readbuff;
 22742              		.loc 1 1009 0
 22743 0f9e C2F80080 		str	r8, [r2, #0]
1014:../src/sdcard.c ****     SDIO_DataInitStructure.SDIO_TransferDir = SDIO_TransferDir_ToSDIO;
 22744              		.loc 1 1014 0
 22745 0fa2 CBF80C30 		str	r3, [fp, #12]
1011:../src/sdcard.c ****     SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
 22746              		.loc 1 1011 0
 22747 0fa6 694A     		ldr	r2, .L227+8
1015:../src/sdcard.c ****     SDIO_DataInitStructure.SDIO_TransferMode = SDIO_TransferMode_Block;
 22748              		.loc 1 1015 0
 22749 0fa8 039B     		ldr	r3, [sp, #12]
1008:../src/sdcard.c ****     StopCondition = 1;
 22750              		.loc 1 1008 0
 22751 0faa 4FF00109 		mov	r9, #1
 22752              	.LVL281:
1017:../src/sdcard.c ****     SDIO_DataConfig(&SDIO_DataInitStructure);
 22753              		.loc 1 1017 0
 22754 0fae 6948     		ldr	r0, .L227+16
 22755              	.LVL282:
1011:../src/sdcard.c ****     SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
 22756              		.loc 1 1011 0
 22757 0fb0 CBF80020 		str	r2, [fp, #0]
1015:../src/sdcard.c ****     SDIO_DataInitStructure.SDIO_TransferMode = SDIO_TransferMode_Block;
 22758              		.loc 1 1015 0
 22759 0fb4 CBF81030 		str	r3, [fp, #16]
1007:../src/sdcard.c ****     TotalNumberOfBytes = NumberOfBlocks * BlockSize;
 22760              		.loc 1 1007 0
 22761 0fb8 F462     		str	r4, [r6, #44]
1008:../src/sdcard.c ****     StopCondition = 1;
 22762              		.loc 1 1008 0
 22763 0fba C6F83090 		str	r9, [r6, #48]
1012:../src/sdcard.c ****     SDIO_DataInitStructure.SDIO_DataLength = NumberOfBlocks * BlockSize;
 22764              		.loc 1 1012 0
 22765 0fbe CBF80440 		str	r4, [fp, #4]
1016:../src/sdcard.c ****     SDIO_DataInitStructure.SDIO_DPSM = SDIO_DPSM_Enable;
 22766              		.loc 1 1016 0
 22767 0fc2 CBF81490 		str	r9, [fp, #20]
1017:../src/sdcard.c ****     SDIO_DataConfig(&SDIO_DataInitStructure);
 22768              		.loc 1 1017 0
 22769 0fc6 FFF7FEFF 		bl	SDIO_DataConfig
1020:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = (uint32_t)addr;
 22770              		.loc 1 1020 0
 22771 0fca 029A     		ldr	r2, [sp, #8]
1022:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 22772              		.loc 1 1022 0
 22773 0fcc 4023     		movs	r3, #64
1020:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = (uint32_t)addr;
 22774              		.loc 1 1020 0
 22775 0fce CAF80020 		str	r2, [sl, #0]
1023:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 22776              		.loc 1 1023 0
 22777 0fd2 039A     		ldr	r2, [sp, #12]
1021:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_READ_MULT_BLOCK;
 22778              		.loc 1 1021 0
 22779 0fd4 183D     		subs	r5, r5, #24
 22780              	.LVL283:
1022:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 22781              		.loc 1 1022 0
 22782 0fd6 CAF80830 		str	r3, [sl, #8]
1025:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
 22783              		.loc 1 1025 0
 22784 0fda 5046     		mov	r0, sl
1024:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 22785              		.loc 1 1024 0
 22786 0fdc 4FF48063 		mov	r3, #1024
1021:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_READ_MULT_BLOCK;
 22787              		.loc 1 1021 0
 22788 0fe0 CAF80450 		str	r5, [sl, #4]
1023:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 22789              		.loc 1 1023 0
 22790 0fe4 CAF80C20 		str	r2, [sl, #12]
1024:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 22791              		.loc 1 1024 0
 22792 0fe8 CAF81030 		str	r3, [sl, #16]
1025:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
 22793              		.loc 1 1025 0
 22794 0fec FFF7FEFF 		bl	SDIO_SendCommand
1027:../src/sdcard.c ****     errorstatus = CmdResp1Error(SDIO_READ_MULT_BLOCK);
 22795              		.loc 1 1027 0
 22796 0ff0 2846     		mov	r0, r5
 22797 0ff2 FFF72DF8 		bl	CmdResp1Error
1029:../src/sdcard.c ****     if (errorstatus != SD_OK)
 22798              		.loc 1 1029 0
 22799 0ff6 2A28     		cmp	r0, #42
1027:../src/sdcard.c ****     errorstatus = CmdResp1Error(SDIO_READ_MULT_BLOCK);
 22800              		.loc 1 1027 0
 22801 0ff8 0546     		mov	r5, r0
 22802              	.LVL284:
1029:../src/sdcard.c ****     if (errorstatus != SD_OK)
 22803              		.loc 1 1029 0
 22804 0ffa 40F09E80 		bne	.L195
1034:../src/sdcard.c ****     if (DeviceMode == SD_POLLING_MODE)
 22805              		.loc 1 1034 0
 22806 0ffe 3968     		ldr	r1, [r7, #0]
 22807 1000 0229     		cmp	r1, #2
 22808 1002 6CD1     		bne	.L197
1034:../src/sdcard.c ****     if (DeviceMode == SD_POLLING_MODE)
 22809              		.loc 1 1034 0 is_stmt 0 discriminator 1
 22810 1004 4446     		mov	r4, r8
 22811 1006 0BE0     		b	.L223
 22812              	.LVL285:
 22813              	.L201:
1039:../src/sdcard.c ****         if (SDIO_GetFlagStatus(SDIO_FLAG_RXFIFOHF) != RESET)
 22814              		.loc 1 1039 0 is_stmt 1
 22815 1008 4FF40040 		mov	r0, #32768
 22816 100c FFF7FEFF 		bl	SDIO_GetFlagStatus
 22817 1010 30B1     		cbz	r0, .L223
 22818              	.L200:
1043:../src/sdcard.c ****             *(tempbuff + count) = SDIO_ReadData();
 22819              		.loc 1 1043 0 discriminator 2
 22820 1012 FFF7FEFF 		bl	SDIO_ReadData
 22821 1016 E051     		str	r0, [r4, r7]
 22822 1018 0437     		adds	r7, r7, #4
1041:../src/sdcard.c ****           for (count = 0; count < SD_HALFFIFO; count++)
 22823              		.loc 1 1041 0 discriminator 2
 22824 101a 202F     		cmp	r7, #32
 22825 101c F9D1     		bne	.L200
1045:../src/sdcard.c ****           tempbuff += SD_HALFFIFO;
 22826              		.loc 1 1045 0
 22827 101e 2034     		adds	r4, r4, #32
 22828              	.LVL286:
 22829              	.L223:
1037:../src/sdcard.c ****       while (!(SDIO->STA &(SDIO_FLAG_RXOVERR | SDIO_FLAG_DCRCFAIL | SDIO_FLAG_DATAEND | SDIO_FLAG_D
 22830              		.loc 1 1037 0 discriminator 1
 22831 1020 4D4B     		ldr	r3, .L227+20
 22832 1022 40F22A37 		movw	r7, #810
 22833 1026 5B6B     		ldr	r3, [r3, #52]
 22834 1028 03EA0707 		and	r7, r3, r7
 22835 102c 002F     		cmp	r7, #0
 22836 102e EBD0     		beq	.L201
1049:../src/sdcard.c ****       if (SDIO_GetFlagStatus(SDIO_FLAG_DTIMEOUT) != RESET)
 22837              		.loc 1 1049 0
 22838 1030 0820     		movs	r0, #8
 22839 1032 FFF7FEFF 		bl	SDIO_GetFlagStatus
 22840 1036 20B1     		cbz	r0, .L202
1051:../src/sdcard.c ****         SDIO_ClearFlag(SDIO_FLAG_DTIMEOUT);
 22841              		.loc 1 1051 0
 22842 1038 0820     		movs	r0, #8
 22843 103a FFF7FEFF 		bl	SDIO_ClearFlag
 22844              	.LVL287:
1053:../src/sdcard.c ****         return(errorstatus);
 22845              		.loc 1 1053 0
 22846 103e 0425     		movs	r5, #4
 22847 1040 7BE0     		b	.L195
 22848              	.LVL288:
 22849              	.L202:
1055:../src/sdcard.c ****       else if (SDIO_GetFlagStatus(SDIO_FLAG_DCRCFAIL) != RESET)
 22850              		.loc 1 1055 0
 22851 1042 0220     		movs	r0, #2
 22852 1044 FFF7FEFF 		bl	SDIO_GetFlagStatus
 22853 1048 20B1     		cbz	r0, .L203
1057:../src/sdcard.c ****         SDIO_ClearFlag(SDIO_FLAG_DCRCFAIL);
 22854              		.loc 1 1057 0
 22855 104a 0220     		movs	r0, #2
 22856 104c FFF7FEFF 		bl	SDIO_ClearFlag
 22857              	.LVL289:
1059:../src/sdcard.c ****         return(errorstatus);
 22858              		.loc 1 1059 0
 22859 1050 0225     		movs	r5, #2
 22860 1052 72E0     		b	.L195
 22861              	.LVL290:
 22862              	.L203:
1061:../src/sdcard.c ****       else if (SDIO_GetFlagStatus(SDIO_FLAG_RXOVERR) != RESET)
 22863              		.loc 1 1061 0
 22864 1054 2020     		movs	r0, #32
 22865 1056 FFF7FEFF 		bl	SDIO_GetFlagStatus
 22866 105a 20B1     		cbz	r0, .L204
1063:../src/sdcard.c ****         SDIO_ClearFlag(SDIO_FLAG_RXOVERR);
 22867              		.loc 1 1063 0
 22868 105c 2020     		movs	r0, #32
 22869 105e FFF7FEFF 		bl	SDIO_ClearFlag
 22870              	.LVL291:
1065:../src/sdcard.c ****         return(errorstatus);
 22871              		.loc 1 1065 0
 22872 1062 0625     		movs	r5, #6
 22873 1064 69E0     		b	.L195
 22874              	.LVL292:
 22875              	.L204:
1067:../src/sdcard.c ****       else if (SDIO_GetFlagStatus(SDIO_FLAG_STBITERR) != RESET)
 22876              		.loc 1 1067 0
 22877 1066 4FF40070 		mov	r0, #512
 22878 106a FFF7FEFF 		bl	SDIO_GetFlagStatus
 22879 106e 48B1     		cbz	r0, .L206
1069:../src/sdcard.c ****         SDIO_ClearFlag(SDIO_FLAG_STBITERR);
 22880              		.loc 1 1069 0
 22881 1070 4FF40070 		mov	r0, #512
 22882 1074 FFF7FEFF 		bl	SDIO_ClearFlag
 22883              	.LVL293:
1071:../src/sdcard.c ****         return(errorstatus);
 22884              		.loc 1 1071 0
 22885 1078 0725     		movs	r5, #7
 22886 107a 5EE0     		b	.L195
 22887              	.LVL294:
 22888              	.L207:
1075:../src/sdcard.c ****         *tempbuff = SDIO_ReadData();
 22889              		.loc 1 1075 0
 22890 107c FFF7FEFF 		bl	SDIO_ReadData
 22891 1080 44F8040B 		str	r0, [r4], #4
 22892              	.LVL295:
 22893              	.L206:
1073:../src/sdcard.c ****       while (SDIO_GetFlagStatus(SDIO_FLAG_RXDAVL) != RESET)
 22894              		.loc 1 1073 0 discriminator 1
 22895 1084 4FF40010 		mov	r0, #2097152
 22896 1088 FFF7FEFF 		bl	SDIO_GetFlagStatus
 22897 108c 0028     		cmp	r0, #0
 22898 108e F5D1     		bne	.L207
1079:../src/sdcard.c ****       if (SDIO_GetFlagStatus(SDIO_FLAG_DATAEND) != RESET)
 22899              		.loc 1 1079 0
 22900 1090 4FF48070 		mov	r0, #256
 22901 1094 FFF7FEFF 		bl	SDIO_GetFlagStatus
 22902 1098 E0B1     		cbz	r0, .L208
1082:../src/sdcard.c ****         if ((SDIO_STD_CAPACITY_SD_CARD_V1_1 == CardType) || (SDIO_HIGH_CAPACITY_SD_CARD == CardType
 22903              		.loc 1 1082 0
 22904 109a 7368     		ldr	r3, [r6, #4]
 22905 109c 1BB1     		cbz	r3, .L209
1082:../src/sdcard.c ****         if ((SDIO_STD_CAPACITY_SD_CARD_V1_1 == CardType) || (SDIO_HIGH_CAPACITY_SD_CARD == CardType
 22906              		.loc 1 1082 0 is_stmt 0 discriminator 1
 22907 109e 022B     		cmp	r3, #2
 22908 10a0 01D0     		beq	.L209
 22909 10a2 012B     		cmp	r3, #1
 22910 10a4 16D1     		bne	.L208
 22911              	.L209:
1085:../src/sdcard.c ****           SDIO_CmdInitStructure.SDIO_Argument = 0x0;
 22912              		.loc 1 1085 0 is_stmt 1
 22913 10a6 0023     		movs	r3, #0
1087:../src/sdcard.c ****           SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 22914              		.loc 1 1087 0
 22915 10a8 4022     		movs	r2, #64
1086:../src/sdcard.c ****           SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_STOP_TRANSMISSION;
 22916              		.loc 1 1086 0
 22917 10aa 0C24     		movs	r4, #12
 22918              	.LVL296:
1085:../src/sdcard.c ****           SDIO_CmdInitStructure.SDIO_Argument = 0x0;
 22919              		.loc 1 1085 0
 22920 10ac CAF80030 		str	r3, [sl, #0]
1088:../src/sdcard.c ****           SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 22921              		.loc 1 1088 0
 22922 10b0 CAF80C30 		str	r3, [sl, #12]
1090:../src/sdcard.c ****           SDIO_SendCommand(&SDIO_CmdInitStructure);
 22923              		.loc 1 1090 0
 22924 10b4 2948     		ldr	r0, .L227+24
1089:../src/sdcard.c ****           SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 22925              		.loc 1 1089 0
 22926 10b6 4FF48063 		mov	r3, #1024
1087:../src/sdcard.c ****           SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 22927              		.loc 1 1087 0
 22928 10ba CAF80820 		str	r2, [sl, #8]
1089:../src/sdcard.c ****           SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 22929              		.loc 1 1089 0
 22930 10be CAF81030 		str	r3, [sl, #16]
1086:../src/sdcard.c ****           SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_STOP_TRANSMISSION;
 22931              		.loc 1 1086 0
 22932 10c2 CAF80440 		str	r4, [sl, #4]
1090:../src/sdcard.c ****           SDIO_SendCommand(&SDIO_CmdInitStructure);
 22933              		.loc 1 1090 0
 22934 10c6 FFF7FEFF 		bl	SDIO_SendCommand
1092:../src/sdcard.c ****           errorstatus = CmdResp1Error(SDIO_STOP_TRANSMISSION);
 22935              		.loc 1 1092 0
 22936 10ca 2046     		mov	r0, r4
 22937 10cc FEF7C0FF 		bl	CmdResp1Error
 22938              	.LVL297:
1094:../src/sdcard.c ****           if (errorstatus != SD_OK)
 22939              		.loc 1 1094 0
 22940 10d0 2A28     		cmp	r0, #42
 22941 10d2 31D1     		bne	.L221
 22942              	.LVL298:
 22943              	.L208:
1101:../src/sdcard.c ****       SDIO_ClearFlag(SDIO_STATIC_FLAGS);
 22944              		.loc 1 1101 0
 22945 10d4 40F2FF50 		movw	r0, #1535
 22946 10d8 FFF7FEFF 		bl	SDIO_ClearFlag
 22947 10dc 2DE0     		b	.L195
 22948              	.LVL299:
 22949              	.L197:
1103:../src/sdcard.c ****     else if (DeviceMode == SD_INTERRUPT_MODE)
 22950              		.loc 1 1103 0
 22951 10de 0129     		cmp	r1, #1
 22952 10e0 09D1     		bne	.L210
1105:../src/sdcard.c ****       SDIO_ITConfig(SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_DATAEND | SDIO_IT_RXOVERR | SDIO_
 22953              		.loc 1 1105 0
 22954 10e2 48F22A30 		movw	r0, #33578
 22955 10e6 FFF7FEFF 		bl	SDIO_ITConfig
 22956              	.L212:
1106:../src/sdcard.c ****       while ((TransferEnd == 0) && (TransferError == SD_OK))
 22957              		.loc 1 1106 0 discriminator 1
 22958 10ea B36A     		ldr	r3, [r6, #40]
 22959 10ec D3B9     		cbnz	r3, .L214
1106:../src/sdcard.c ****       while ((TransferEnd == 0) && (TransferError == SD_OK))
 22960              		.loc 1 1106 0 is_stmt 0 discriminator 2
 22961 10ee 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 22962 10f0 2A2B     		cmp	r3, #42
 22963 10f2 FAD0     		beq	.L212
 22964 10f4 16E0     		b	.L214
 22965              	.L210:
1113:../src/sdcard.c ****     else if (DeviceMode == SD_DMA_MODE)
 22966              		.loc 1 1113 0 is_stmt 1
 22967 10f6 01BB     		cbnz	r1, .L195
1115:../src/sdcard.c ****       SDIO_ITConfig(SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_DATAEND | SDIO_IT_RXOVERR | SDIO_
 22968              		.loc 1 1115 0
 22969 10f8 4946     		mov	r1, r9
 22970 10fa 40F22A30 		movw	r0, #810
 22971 10fe FFF7FEFF 		bl	SDIO_ITConfig
1116:../src/sdcard.c ****       SDIO_DMACmd(ENABLE);
 22972              		.loc 1 1116 0
 22973 1102 4846     		mov	r0, r9
 22974 1104 FFF7FEFF 		bl	SDIO_DMACmd
1117:../src/sdcard.c ****       DMA_RxConfiguration(readbuff, (NumberOfBlocks * BlockSize));
 22975              		.loc 1 1117 0
 22976 1108 4046     		mov	r0, r8
 22977 110a 2146     		mov	r1, r4
 22978 110c FFF724F9 		bl	DMA_RxConfiguration
 22979              	.L213:
1118:../src/sdcard.c ****       while (DMA_GetFlagStatus(DMA2_FLAG_TC4) == RESET)
 22980              		.loc 1 1118 0 discriminator 1
 22981 1110 1348     		ldr	r0, .L227+28
 22982 1112 FFF7FEFF 		bl	DMA_GetFlagStatus
 22983 1116 0028     		cmp	r0, #0
 22984 1118 FAD0     		beq	.L213
 22985              	.L215:
1120:../src/sdcard.c ****       while ((TransferEnd == 0) && (TransferError == SD_OK))
 22986              		.loc 1 1120 0 discriminator 1
 22987 111a B36A     		ldr	r3, [r6, #40]
 22988 111c 13B9     		cbnz	r3, .L214
1120:../src/sdcard.c ****       while ((TransferEnd == 0) && (TransferError == SD_OK))
 22989              		.loc 1 1120 0 is_stmt 0 discriminator 2
 22990 111e 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 22991 1120 2A2B     		cmp	r3, #42
 22992 1122 FAD0     		beq	.L215
 22993              	.L214:
1122:../src/sdcard.c ****       if (TransferError != SD_OK)
 22994              		.loc 1 1122 0 is_stmt 1
 22995 1124 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 22996 1126 2A2B     		cmp	r3, #42
 22997 1128 07D0     		beq	.L195
1124:../src/sdcard.c ****         return(TransferError);
 22998              		.loc 1 1124 0
 22999 112a 064B     		ldr	r3, .L227
 23000 112c 1D79     		ldrb	r5, [r3, #4]	@ zero_extendqisi2
 23001              	.LVL300:
 23002 112e 04E0     		b	.L195
 23003              	.LVL301:
 23004              	.L217:
 964:../src/sdcard.c ****     return(errorstatus);
 23005              		.loc 1 964 0
 23006 1130 0E25     		movs	r5, #14
 23007 1132 02E0     		b	.L195
 23008              	.LVL302:
 23009              	.L220:
1004:../src/sdcard.c ****       return(errorstatus);
 23010              		.loc 1 1004 0
 23011 1134 2625     		movs	r5, #38
 23012 1136 00E0     		b	.L195
 23013              	.LVL303:
 23014              	.L221:
1094:../src/sdcard.c ****           if (errorstatus != SD_OK)
 23015              		.loc 1 1094 0
 23016 1138 0546     		mov	r5, r0
 23017              	.LVL304:
 23018              	.L195:
1129:../src/sdcard.c **** }
 23019              		.loc 1 1129 0
 23020 113a 2846     		mov	r0, r5
 23021 113c 05B0     		add	sp, sp, #20
 23022 113e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 23023              	.L228:
 23024 1142 00BF     		.align	2
 23025              	.L227:
 23026 1144 00000000 		.word	.LANCHOR1
 23027 1148 00000000 		.word	.LANCHOR0
 23028 114c FFFF0F00 		.word	1048575
 23029 1150 00000000 		.word	DestBuffer
 23030 1154 00000000 		.word	SDIO_DataInitStructure
 23031 1158 00800140 		.word	1073840128
 23032 115c 00000000 		.word	SDIO_CmdInitStructure
 23033 1160 00200010 		.word	268443648
 23034              		.cfi_endproc
 23035              	.LFE38:
 23037              		.align	1
 23038              		.global	SD_WriteBlock
 23039              		.thumb
 23040              		.thumb_func
 23042              	SD_WriteBlock:
 23043              	.LFB39:
1143:../src/sdcard.c **** {
 23044              		.loc 1 1143 0
 23045              		.cfi_startproc
 23046              		@ args = 0, pretend = 0, frame = 24
 23047              		@ frame_needed = 0, uses_anonymous_args = 0
 23048              	.LVL305:
 23049 1164 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 23050              	.LCFI18:
 23051              		.cfi_def_cfa_offset 36
1145:../src/sdcard.c ****   uint8_t  power = 0, cardstate = 0;
 23052              		.loc 1 1145 0
 23053 1168 0026     		movs	r6, #0
 23054              		.cfi_offset 14, -4
 23055              		.cfi_offset 11, -8
 23056              		.cfi_offset 10, -12
 23057              		.cfi_offset 9, -16
 23058              		.cfi_offset 8, -20
 23059              		.cfi_offset 7, -24
 23060              		.cfi_offset 6, -28
 23061              		.cfi_offset 5, -32
 23062              		.cfi_offset 4, -36
1143:../src/sdcard.c **** {
 23063              		.loc 1 1143 0
 23064 116a 87B0     		sub	sp, sp, #28
 23065              	.LCFI19:
 23066              		.cfi_def_cfa_offset 64
1143:../src/sdcard.c **** {
 23067              		.loc 1 1143 0
 23068 116c 0446     		mov	r4, r0
 23069 116e 1546     		mov	r5, r2
1145:../src/sdcard.c ****   uint8_t  power = 0, cardstate = 0;
 23070              		.loc 1 1145 0
 23071 1170 8DF81760 		strb	r6, [sp, #23]
 23072              	.LVL306:
1150:../src/sdcard.c ****   if (writebuff == NULL)
 23073              		.loc 1 1150 0
 23074 1174 8846     		mov	r8, r1
 23075 1176 0029     		cmp	r1, #0
 23076 1178 00F07081 		beq	.L261
 23077              	.LVL307:
1156:../src/sdcard.c ****   TransferError = SD_OK;
 23078              		.loc 1 1156 0
 23079 117c B84F     		ldr	r7, .L267
1160:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
 23080              		.loc 1 1160 0
 23081 117e DFF8F0A2 		ldr	sl, .L267+16
1156:../src/sdcard.c ****   TransferError = SD_OK;
 23082              		.loc 1 1156 0
 23083 1182 2A23     		movs	r3, #42
1157:../src/sdcard.c ****   TransferEnd = 0;
 23084              		.loc 1 1157 0
 23085 1184 DFF8F492 		ldr	r9, .L267+28
1156:../src/sdcard.c ****   TransferError = SD_OK;
 23086              		.loc 1 1156 0
 23087 1188 3B71     		strb	r3, [r7, #4]
1160:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
 23088              		.loc 1 1160 0
 23089 118a B64B     		ldr	r3, .L267+4
1157:../src/sdcard.c ****   TransferEnd = 0;
 23090              		.loc 1 1157 0
 23091 118c C9F82860 		str	r6, [r9, #40]
1158:../src/sdcard.c ****   TotalNumberOfBytes = 0;
 23092              		.loc 1 1158 0
 23093 1190 C9F82C60 		str	r6, [r9, #44]
1166:../src/sdcard.c ****   SDIO_DataConfig(&SDIO_DataInitStructure);
 23094              		.loc 1 1166 0
 23095 1194 5046     		mov	r0, sl
 23096              	.LVL308:
1160:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
 23097              		.loc 1 1160 0
 23098 1196 CAF80030 		str	r3, [sl, #0]
1161:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataLength = 0;
 23099              		.loc 1 1161 0
 23100 119a CAF80460 		str	r6, [sl, #4]
1162:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataBlockSize = SDIO_DataBlockSize_1b;
 23101              		.loc 1 1162 0
 23102 119e CAF80860 		str	r6, [sl, #8]
1163:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferDir = SDIO_TransferDir_ToCard;
 23103              		.loc 1 1163 0
 23104 11a2 CAF80C60 		str	r6, [sl, #12]
1164:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferMode = SDIO_TransferMode_Block;
 23105              		.loc 1 1164 0
 23106 11a6 CAF81060 		str	r6, [sl, #16]
1165:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DPSM = SDIO_DPSM_Disable;
 23107              		.loc 1 1165 0
 23108 11aa CAF81460 		str	r6, [sl, #20]
1166:../src/sdcard.c ****   SDIO_DataConfig(&SDIO_DataInitStructure);
 23109              		.loc 1 1166 0
 23110 11ae FFF7FEFF 		bl	SDIO_DataConfig
 23111              	.LVL309:
1167:../src/sdcard.c ****   SDIO_DMACmd(DISABLE);
 23112              		.loc 1 1167 0
 23113 11b2 3046     		mov	r0, r6
 23114 11b4 FFF7FEFF 		bl	SDIO_DMACmd
1169:../src/sdcard.c ****   if (SDIO_GetResponse(SDIO_RESP1) & SD_CARD_LOCKED)
 23115              		.loc 1 1169 0
 23116 11b8 3046     		mov	r0, r6
 23117 11ba FFF7FEFF 		bl	SDIO_GetResponse
 23118 11be 10F0007F 		tst	r0, #33554432
 23119 11c2 4E46     		mov	r6, r9
 23120 11c4 40F04881 		bne	.L259
1175:../src/sdcard.c ****   if (CardType == SDIO_HIGH_CAPACITY_SD_CARD)
 23121              		.loc 1 1175 0
 23122 11c8 7368     		ldr	r3, [r6, #4]
 23123 11ca 022B     		cmp	r3, #2
 23124 11cc 02D1     		bne	.L231
 23125              	.LVL310:
1178:../src/sdcard.c ****     addr /= 512;
 23126              		.loc 1 1178 0
 23127 11ce 640A     		lsrs	r4, r4, #9
 23128              	.LVL311:
1177:../src/sdcard.c ****     BlockSize = 512;
 23129              		.loc 1 1177 0
 23130 11d0 4FF40075 		mov	r5, #512
 23131              	.LVL312:
 23132              	.L231:
1182:../src/sdcard.c ****   if ((BlockSize > 0) && (BlockSize <= 2048) && ((BlockSize & (BlockSize - 1)) == 0))
 23133              		.loc 1 1182 0
 23134 11d4 05F1FF3B 		add	fp, r5, #-1
 23135 11d8 1FFA8BF3 		uxth	r3, fp
 23136 11dc B3F5006F 		cmp	r3, #2048
 23137 11e0 80F03C81 		bcs	.L261
1182:../src/sdcard.c ****   if ((BlockSize > 0) && (BlockSize <= 2048) && ((BlockSize & (BlockSize - 1)) == 0))
 23138              		.loc 1 1182 0 is_stmt 0 discriminator 1
 23139 11e4 1BEA050B 		ands	fp, fp, r5
 23140 11e8 40F03881 		bne	.L261
1184:../src/sdcard.c ****     power = convert_from_bytes_to_power_of_two(BlockSize);
 23141              		.loc 1 1184 0 is_stmt 1
 23142 11ec 2846     		mov	r0, r5
 23143 11ee FEF707FF 		bl	convert_from_bytes_to_power_of_two
1186:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) BlockSize;
 23144              		.loc 1 1186 0
 23145 11f2 DFF87492 		ldr	r9, .L267+8
1188:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 23146              		.loc 1 1188 0
 23147 11f6 4023     		movs	r3, #64
1187:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SET_BLOCKLEN;
 23148              		.loc 1 1187 0
 23149 11f8 1022     		movs	r2, #16
1190:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 23150              		.loc 1 1190 0
 23151 11fa 4FF48061 		mov	r1, #1024
1188:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 23152              		.loc 1 1188 0
 23153 11fe C9F80830 		str	r3, [r9, #8]
1190:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 23154              		.loc 1 1190 0
 23155 1202 C9F81010 		str	r1, [r9, #16]
1187:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SET_BLOCKLEN;
 23156              		.loc 1 1187 0
 23157 1206 C9F80420 		str	r2, [r9, #4]
1186:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) BlockSize;
 23158              		.loc 1 1186 0
 23159 120a C9F80050 		str	r5, [r9, #0]
1189:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 23160              		.loc 1 1189 0
 23161 120e C9F80CB0 		str	fp, [r9, #12]
1184:../src/sdcard.c ****     power = convert_from_bytes_to_power_of_two(BlockSize);
 23162              		.loc 1 1184 0
 23163 1212 0390     		str	r0, [sp, #12]
 23164              	.LVL313:
1191:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
 23165              		.loc 1 1191 0
 23166 1214 4846     		mov	r0, r9
 23167 1216 0291     		str	r1, [sp, #8]
 23168 1218 0093     		str	r3, [sp, #0]
 23169 121a 0192     		str	r2, [sp, #4]
 23170 121c FFF7FEFF 		bl	SDIO_SendCommand
1193:../src/sdcard.c ****     errorstatus = CmdResp1Error(SDIO_SET_BLOCKLEN);
 23171              		.loc 1 1193 0
 23172 1220 019A     		ldr	r2, [sp, #4]
 23173 1222 1046     		mov	r0, r2
 23174 1224 FEF714FF 		bl	CmdResp1Error
 23175              	.LVL314:
1195:../src/sdcard.c ****     if (errorstatus != SD_OK)
 23176              		.loc 1 1195 0
 23177 1228 2A28     		cmp	r0, #42
 23178 122a 0299     		ldr	r1, [sp, #8]
 23179 122c 009B     		ldr	r3, [sp, #0]
 23180 122e 40F02881 		bne	.L230
1207:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) (RCA << 16);
 23181              		.loc 1 1207 0
 23182 1232 3268     		ldr	r2, [r6, #0]
1209:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 23183              		.loc 1 1209 0
 23184 1234 C9F80830 		str	r3, [r9, #8]
1207:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) (RCA << 16);
 23185              		.loc 1 1207 0
 23186 1238 1204     		lsls	r2, r2, #16
 23187 123a C9F80020 		str	r2, [r9, #0]
1208:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SEND_STATUS;
 23188              		.loc 1 1208 0
 23189 123e 0D22     		movs	r2, #13
 23190 1240 C9F80420 		str	r2, [r9, #4]
1211:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 23191              		.loc 1 1211 0
 23192 1244 C9F81010 		str	r1, [r9, #16]
1210:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 23193              		.loc 1 1210 0
 23194 1248 C9F80CB0 		str	fp, [r9, #12]
1212:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 23195              		.loc 1 1212 0
 23196 124c 4846     		mov	r0, r9
 23197              	.LVL315:
 23198 124e 0192     		str	r2, [sp, #4]
 23199 1250 FFF7FEFF 		bl	SDIO_SendCommand
1214:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_SEND_STATUS);
 23200              		.loc 1 1214 0
 23201 1254 019A     		ldr	r2, [sp, #4]
 23202 1256 1046     		mov	r0, r2
 23203 1258 FEF7FAFE 		bl	CmdResp1Error
 23204              	.LVL316:
1216:../src/sdcard.c ****   if (errorstatus != SD_OK)
 23205              		.loc 1 1216 0
 23206 125c 2A28     		cmp	r0, #42
 23207 125e 40F01081 		bne	.L230
1221:../src/sdcard.c ****   cardstatus = SDIO_GetResponse(SDIO_RESP1);
 23208              		.loc 1 1221 0
 23209 1262 5846     		mov	r0, fp
 23210              	.LVL317:
 23211 1264 FFF7FEFF 		bl	SDIO_GetResponse
 23212              	.LVL318:
1223:../src/sdcard.c ****   timeout = SD_DATATIMEOUT;
 23213              		.loc 1 1223 0
 23214 1268 DFF8F8B1 		ldr	fp, .L267+4
1225:../src/sdcard.c ****   while (((cardstatus & 0x00000100) == 0) && (timeout > 0))
 23215              		.loc 1 1225 0
 23216 126c 21E0     		b	.L232
 23217              	.LVL319:
 23218              	.L234:
1228:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) (RCA << 16);
 23219              		.loc 1 1228 0
 23220 126e 3268     		ldr	r2, [r6, #0]
1230:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 23221              		.loc 1 1230 0
 23222 1270 4021     		movs	r1, #64
1228:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) (RCA << 16);
 23223              		.loc 1 1228 0
 23224 1272 1204     		lsls	r2, r2, #16
 23225 1274 C9F80020 		str	r2, [r9, #0]
1230:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 23226              		.loc 1 1230 0
 23227 1278 C9F80810 		str	r1, [r9, #8]
1229:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SEND_STATUS;
 23228              		.loc 1 1229 0
 23229 127c 0D22     		movs	r2, #13
1232:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 23230              		.loc 1 1232 0
 23231 127e 4FF48061 		mov	r1, #1024
1231:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 23232              		.loc 1 1231 0
 23233 1282 C9F80C30 		str	r3, [r9, #12]
1229:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SEND_STATUS;
 23234              		.loc 1 1229 0
 23235 1286 C9F80420 		str	r2, [r9, #4]
1232:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 23236              		.loc 1 1232 0
 23237 128a C9F81010 		str	r1, [r9, #16]
1233:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
 23238              		.loc 1 1233 0
 23239 128e 7648     		ldr	r0, .L267+8
 23240              	.LVL320:
 23241 1290 0093     		str	r3, [sp, #0]
 23242 1292 0192     		str	r2, [sp, #4]
 23243 1294 FFF7FEFF 		bl	SDIO_SendCommand
1235:../src/sdcard.c ****     errorstatus = CmdResp1Error(SDIO_SEND_STATUS);
 23244              		.loc 1 1235 0
 23245 1298 019A     		ldr	r2, [sp, #4]
 23246 129a 1046     		mov	r0, r2
 23247 129c FEF7D8FE 		bl	CmdResp1Error
 23248              	.LVL321:
1237:../src/sdcard.c ****     if (errorstatus != SD_OK)
 23249              		.loc 1 1237 0
 23250 12a0 2A28     		cmp	r0, #42
 23251 12a2 009B     		ldr	r3, [sp, #0]
 23252 12a4 40F0ED80 		bne	.L230
1241:../src/sdcard.c ****     cardstatus = SDIO_GetResponse(SDIO_RESP1);
 23253              		.loc 1 1241 0
 23254 12a8 1846     		mov	r0, r3
 23255              	.LVL322:
1227:../src/sdcard.c ****     timeout--;
 23256              		.loc 1 1227 0
 23257 12aa 0BF1FF3B 		add	fp, fp, #-1
 23258              	.LVL323:
1241:../src/sdcard.c ****     cardstatus = SDIO_GetResponse(SDIO_RESP1);
 23259              		.loc 1 1241 0
 23260 12ae FFF7FEFF 		bl	SDIO_GetResponse
 23261              	.LVL324:
 23262              	.L232:
1225:../src/sdcard.c ****   while (((cardstatus & 0x00000100) == 0) && (timeout > 0))
 23263              		.loc 1 1225 0 discriminator 1
 23264 12b2 10F48073 		ands	r3, r0, #256
 23265 12b6 03D1     		bne	.L233
1225:../src/sdcard.c ****   while (((cardstatus & 0x00000100) == 0) && (timeout > 0))
 23266              		.loc 1 1225 0 is_stmt 0 discriminator 2
 23267 12b8 BBF1000F 		cmp	fp, #0
 23268 12bc D7D1     		bne	.L234
 23269 12be DFE0     		b	.L262
 23270              	.L233:
1244:../src/sdcard.c ****   if (timeout == 0)
 23271              		.loc 1 1244 0 is_stmt 1
 23272 12c0 BBF1000F 		cmp	fp, #0
 23273 12c4 00F0DC80 		beq	.L262
1252:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 23274              		.loc 1 1252 0
 23275 12c8 4023     		movs	r3, #64
1250:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = addr;
 23276              		.loc 1 1250 0
 23277 12ca C9F80040 		str	r4, [r9, #0]
1252:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 23278              		.loc 1 1252 0
 23279 12ce C9F80830 		str	r3, [r9, #8]
1251:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_WRITE_SINGLE_BLOCK;
 23280              		.loc 1 1251 0
 23281 12d2 1824     		movs	r4, #24
 23282              	.LVL325:
1254:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 23283              		.loc 1 1254 0
 23284 12d4 4FF48063 		mov	r3, #1024
1253:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 23285              		.loc 1 1253 0
 23286 12d8 4FF0000B 		mov	fp, #0
 23287              	.LVL326:
1254:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 23288              		.loc 1 1254 0
 23289 12dc C9F81030 		str	r3, [r9, #16]
1255:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 23290              		.loc 1 1255 0
 23291 12e0 6148     		ldr	r0, .L267+8
 23292              	.LVL327:
1251:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_WRITE_SINGLE_BLOCK;
 23293              		.loc 1 1251 0
 23294 12e2 C9F80440 		str	r4, [r9, #4]
1253:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 23295              		.loc 1 1253 0
 23296 12e6 C9F80CB0 		str	fp, [r9, #12]
1255:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 23297              		.loc 1 1255 0
 23298 12ea FFF7FEFF 		bl	SDIO_SendCommand
 23299              	.LVL328:
1257:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_WRITE_SINGLE_BLOCK);
 23300              		.loc 1 1257 0
 23301 12ee 2046     		mov	r0, r4
 23302 12f0 FEF7AEFE 		bl	CmdResp1Error
 23303              	.LVL329:
1259:../src/sdcard.c ****   if (errorstatus != SD_OK)
 23304              		.loc 1 1259 0
 23305 12f4 2A28     		cmp	r0, #42
 23306 12f6 40F0C480 		bne	.L230
1266:../src/sdcard.c ****   SrcBuffer = writebuff;
 23307              		.loc 1 1266 0
 23308 12fa 5C4B     		ldr	r3, .L267+12
1270:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataBlockSize = (uint32_t) power << 4;
 23309              		.loc 1 1270 0
 23310 12fc 039A     		ldr	r2, [sp, #12]
1266:../src/sdcard.c ****   SrcBuffer = writebuff;
 23311              		.loc 1 1266 0
 23312 12fe C3F80080 		str	r8, [r3, #0]
1268:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
 23313              		.loc 1 1268 0
 23314 1302 584B     		ldr	r3, .L267+4
1273:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DPSM = SDIO_DPSM_Enable;
 23315              		.loc 1 1273 0
 23316 1304 173C     		subs	r4, r4, #23
1268:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
 23317              		.loc 1 1268 0
 23318 1306 CAF80030 		str	r3, [sl, #0]
1264:../src/sdcard.c ****   TotalNumberOfBytes = BlockSize;
 23319              		.loc 1 1264 0
 23320 130a F562     		str	r5, [r6, #44]
1270:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataBlockSize = (uint32_t) power << 4;
 23321              		.loc 1 1270 0
 23322 130c 1301     		lsls	r3, r2, #4
1265:../src/sdcard.c ****   StopCondition = 0;
 23323              		.loc 1 1265 0
 23324 130e C6F830B0 		str	fp, [r6, #48]
1274:../src/sdcard.c ****   SDIO_DataConfig(&SDIO_DataInitStructure);
 23325              		.loc 1 1274 0
 23326 1312 5748     		ldr	r0, .L267+16
 23327              	.LVL330:
1269:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataLength = BlockSize;
 23328              		.loc 1 1269 0
 23329 1314 CAF80450 		str	r5, [sl, #4]
1270:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataBlockSize = (uint32_t) power << 4;
 23330              		.loc 1 1270 0
 23331 1318 CAF80830 		str	r3, [sl, #8]
1271:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferDir = SDIO_TransferDir_ToCard;
 23332              		.loc 1 1271 0
 23333 131c CAF80CB0 		str	fp, [sl, #12]
1272:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferMode = SDIO_TransferMode_Block;
 23334              		.loc 1 1272 0
 23335 1320 CAF810B0 		str	fp, [sl, #16]
1273:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DPSM = SDIO_DPSM_Enable;
 23336              		.loc 1 1273 0
 23337 1324 CAF81440 		str	r4, [sl, #20]
1274:../src/sdcard.c ****   SDIO_DataConfig(&SDIO_DataInitStructure);
 23338              		.loc 1 1274 0
 23339 1328 FFF7FEFF 		bl	SDIO_DataConfig
1277:../src/sdcard.c ****   if (DeviceMode == SD_POLLING_MODE)
 23340              		.loc 1 1277 0
 23341 132c 3968     		ldr	r1, [r7, #0]
 23342 132e 0229     		cmp	r1, #2
 23343 1330 58D1     		bne	.L235
 23344 1332 28E0     		b	.L264
 23345              	.LVL331:
 23346              	.L245:
1281:../src/sdcard.c ****       if (SDIO_GetFlagStatus(SDIO_FLAG_TXFIFOHE) != RESET)
 23347              		.loc 1 1281 0
 23348 1334 4FF48040 		mov	r0, #16384
 23349 1338 FFF7FEFF 		bl	SDIO_GetFlagStatus
 23350 133c 18B3     		cbz	r0, .L264
1283:../src/sdcard.c ****         if ((TotalNumberOfBytes - bytestransferred) < 32)
 23351              		.loc 1 1283 0
 23352 133e F36A     		ldr	r3, [r6, #44]
 23353 1340 CBEB0303 		rsb	r3, fp, r3
 23354 1344 1F2B     		cmp	r3, #31
 23355 1346 13D8     		bhi	.L244
1285:../src/sdcard.c ****           restwords = ((TotalNumberOfBytes - bytestransferred) % 4 == 0) ? ((TotalNumberOfBytes - b
 23356              		.loc 1 1285 0
 23357 1348 13F0030F 		tst	r3, #3
 23358 134c 4FEA9304 		lsr	r4, r3, #2
 23359 1350 18BF     		it	ne
 23360 1352 0134     		addne	r4, r4, #1
 23361              	.LVL332:
1287:../src/sdcard.c ****           for (count = 0; count < restwords; count++, tempbuff++, bytestransferred += 4)
 23362              		.loc 1 1287 0
 23363 1354 4746     		mov	r7, r8
 23364 1356 0025     		movs	r5, #0
 23365 1358 04E0     		b	.L241
 23366              	.LVL333:
 23367              	.L242:
1289:../src/sdcard.c ****             SDIO_WriteData(*tempbuff);
 23368              		.loc 1 1289 0 discriminator 2
 23369 135a 57F8040B 		ldr	r0, [r7], #4
 23370              	.LVL334:
 23371 135e FFF7FEFF 		bl	SDIO_WriteData
1287:../src/sdcard.c ****           for (count = 0; count < restwords; count++, tempbuff++, bytestransferred += 4)
 23372              		.loc 1 1287 0 discriminator 2
 23373 1362 0135     		adds	r5, r5, #1
 23374              	.LVL335:
 23375              	.L241:
1287:../src/sdcard.c ****           for (count = 0; count < restwords; count++, tempbuff++, bytestransferred += 4)
 23376              		.loc 1 1287 0 is_stmt 0 discriminator 1
 23377 1364 A542     		cmp	r5, r4
 23378 1366 F8D3     		bcc	.L242
1142:../src/sdcard.c **** SD_Error SD_WriteBlock(uint32_t addr, uint32_t *writebuff, uint16_t BlockSize)
 23379              		.loc 1 1142 0 is_stmt 1
 23380 1368 A400     		lsls	r4, r4, #2
 23381              	.LVL336:
 23382 136a A344     		add	fp, fp, r4
 23383 136c A044     		add	r8, r8, r4
 23384 136e 0AE0     		b	.L264
 23385              	.LVL337:
 23386              	.L244:
1296:../src/sdcard.c ****             SDIO_WriteData(*(tempbuff + count));
 23387              		.loc 1 1296 0 discriminator 2
 23388 1370 58F80400 		ldr	r0, [r8, r4]
 23389 1374 0434     		adds	r4, r4, #4
 23390 1376 FFF7FEFF 		bl	SDIO_WriteData
1294:../src/sdcard.c ****           for (count = 0; count < 8; count++)
 23391              		.loc 1 1294 0 discriminator 2
 23392 137a 202C     		cmp	r4, #32
 23393 137c F8D1     		bne	.L244
1298:../src/sdcard.c ****           tempbuff += 8;
 23394              		.loc 1 1298 0
 23395 137e 08F12008 		add	r8, r8, #32
 23396              	.LVL338:
1299:../src/sdcard.c ****           bytestransferred += 32;
 23397              		.loc 1 1299 0
 23398 1382 0BF1200B 		add	fp, fp, #32
 23399              	.LVL339:
 23400              	.L264:
1279:../src/sdcard.c ****     while (!(SDIO->STA & (SDIO_FLAG_DBCKEND | SDIO_FLAG_TXUNDERR | SDIO_FLAG_DCRCFAIL | SDIO_FLAG_D
 23401              		.loc 1 1279 0 discriminator 1
 23402 1386 3B4B     		ldr	r3, .L267+20
 23403 1388 40F21A64 		movw	r4, #1562
 23404 138c 5B6B     		ldr	r3, [r3, #52]
 23405 138e 03EA0404 		and	r4, r3, r4
 23406 1392 002C     		cmp	r4, #0
 23407 1394 CED0     		beq	.L245
1303:../src/sdcard.c ****     if (SDIO_GetFlagStatus(SDIO_FLAG_DTIMEOUT) != RESET)
 23408              		.loc 1 1303 0
 23409 1396 0820     		movs	r0, #8
 23410 1398 FFF7FEFF 		bl	SDIO_GetFlagStatus
 23411 139c 20B1     		cbz	r0, .L246
1305:../src/sdcard.c ****       SDIO_ClearFlag(SDIO_FLAG_DTIMEOUT);
 23412              		.loc 1 1305 0
 23413 139e 0820     		movs	r0, #8
 23414 13a0 FFF7FEFF 		bl	SDIO_ClearFlag
 23415              	.LVL340:
1307:../src/sdcard.c ****       return(errorstatus);
 23416              		.loc 1 1307 0
 23417 13a4 0420     		movs	r0, #4
 23418 13a6 6CE0     		b	.L230
 23419              	.LVL341:
 23420              	.L246:
1309:../src/sdcard.c ****     else if (SDIO_GetFlagStatus(SDIO_FLAG_DCRCFAIL) != RESET)
 23421              		.loc 1 1309 0
 23422 13a8 0220     		movs	r0, #2
 23423 13aa FFF7FEFF 		bl	SDIO_GetFlagStatus
 23424 13ae 20B1     		cbz	r0, .L247
1311:../src/sdcard.c ****       SDIO_ClearFlag(SDIO_FLAG_DCRCFAIL);
 23425              		.loc 1 1311 0
 23426 13b0 0220     		movs	r0, #2
 23427 13b2 FFF7FEFF 		bl	SDIO_ClearFlag
 23428              	.LVL342:
1313:../src/sdcard.c ****       return(errorstatus);
 23429              		.loc 1 1313 0
 23430 13b6 0220     		movs	r0, #2
 23431 13b8 63E0     		b	.L230
 23432              	.LVL343:
 23433              	.L247:
1315:../src/sdcard.c ****     else if (SDIO_GetFlagStatus(SDIO_FLAG_TXUNDERR) != RESET)
 23434              		.loc 1 1315 0
 23435 13ba 1020     		movs	r0, #16
 23436 13bc FFF7FEFF 		bl	SDIO_GetFlagStatus
 23437 13c0 20B1     		cbz	r0, .L248
1317:../src/sdcard.c ****       SDIO_ClearFlag(SDIO_FLAG_TXUNDERR);
 23438              		.loc 1 1317 0
 23439 13c2 1020     		movs	r0, #16
 23440 13c4 FFF7FEFF 		bl	SDIO_ClearFlag
 23441              	.LVL344:
1319:../src/sdcard.c ****       return(errorstatus);
 23442              		.loc 1 1319 0
 23443 13c8 0520     		movs	r0, #5
 23444 13ca 5AE0     		b	.L230
 23445              	.LVL345:
 23446              	.L248:
1321:../src/sdcard.c ****     else if (SDIO_GetFlagStatus(SDIO_FLAG_STBITERR) != RESET)
 23447              		.loc 1 1321 0
 23448 13cc 4FF40070 		mov	r0, #512
 23449 13d0 FFF7FEFF 		bl	SDIO_GetFlagStatus
 23450 13d4 0028     		cmp	r0, #0
 23451 13d6 2ED0     		beq	.L249
1323:../src/sdcard.c ****       SDIO_ClearFlag(SDIO_FLAG_STBITERR);
 23452              		.loc 1 1323 0
 23453 13d8 4FF40070 		mov	r0, #512
 23454 13dc FFF7FEFF 		bl	SDIO_ClearFlag
 23455              	.LVL346:
1325:../src/sdcard.c ****       return(errorstatus);
 23456              		.loc 1 1325 0
 23457 13e0 0720     		movs	r0, #7
 23458 13e2 4EE0     		b	.L230
 23459              	.LVL347:
 23460              	.L235:
1328:../src/sdcard.c ****   else if (DeviceMode == SD_INTERRUPT_MODE)
 23461              		.loc 1 1328 0
 23462 13e4 0129     		cmp	r1, #1
 23463 13e6 09D1     		bne	.L250
1330:../src/sdcard.c ****     SDIO_ITConfig(SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_DATAEND | SDIO_FLAG_TXFIFOHE | SDIO
 23464              		.loc 1 1330 0
 23465 13e8 44F21A30 		movw	r0, #17178
 23466 13ec FFF7FEFF 		bl	SDIO_ITConfig
 23467              	.L252:
1331:../src/sdcard.c ****     while ((TransferEnd == 0) && (TransferError == SD_OK))
 23468              		.loc 1 1331 0 discriminator 1
 23469 13f0 B36A     		ldr	r3, [r6, #40]
 23470 13f2 D3B9     		cbnz	r3, .L254
1331:../src/sdcard.c ****     while ((TransferEnd == 0) && (TransferError == SD_OK))
 23471              		.loc 1 1331 0 is_stmt 0 discriminator 2
 23472 13f4 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 23473 13f6 2A2B     		cmp	r3, #42
 23474 13f8 FAD0     		beq	.L252
 23475 13fa 16E0     		b	.L254
 23476              	.L250:
1338:../src/sdcard.c ****   else if (DeviceMode == SD_DMA_MODE)
 23477              		.loc 1 1338 0 is_stmt 1
 23478 13fc D9B9     		cbnz	r1, .L249
1340:../src/sdcard.c ****     SDIO_ITConfig(SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_DATAEND | SDIO_IT_TXUNDERR | SDIO_I
 23479              		.loc 1 1340 0
 23480 13fe 40F21A30 		movw	r0, #794
 23481 1402 2146     		mov	r1, r4
 23482 1404 FFF7FEFF 		bl	SDIO_ITConfig
1341:../src/sdcard.c ****     DMA_TxConfiguration(writebuff, BlockSize);
 23483              		.loc 1 1341 0
 23484 1408 4046     		mov	r0, r8
 23485 140a 2946     		mov	r1, r5
 23486 140c FEF772FF 		bl	DMA_TxConfiguration
1342:../src/sdcard.c ****     SDIO_DMACmd(ENABLE);
 23487              		.loc 1 1342 0
 23488 1410 2046     		mov	r0, r4
 23489 1412 FFF7FEFF 		bl	SDIO_DMACmd
 23490              	.L253:
1343:../src/sdcard.c ****     while (DMA_GetFlagStatus(DMA2_FLAG_TC4) == RESET)
 23491              		.loc 1 1343 0 discriminator 1
 23492 1416 1848     		ldr	r0, .L267+24
 23493 1418 FFF7FEFF 		bl	DMA_GetFlagStatus
 23494 141c 0028     		cmp	r0, #0
 23495 141e FAD0     		beq	.L253
 23496              	.L255:
1345:../src/sdcard.c ****     while ((TransferEnd == 0) && (TransferError == SD_OK))
 23497              		.loc 1 1345 0 discriminator 1
 23498 1420 B36A     		ldr	r3, [r6, #40]
 23499 1422 13B9     		cbnz	r3, .L254
1345:../src/sdcard.c ****     while ((TransferEnd == 0) && (TransferError == SD_OK))
 23500              		.loc 1 1345 0 is_stmt 0 discriminator 2
 23501 1424 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 23502 1426 2A2B     		cmp	r3, #42
 23503 1428 FAD0     		beq	.L255
 23504              	.L254:
1347:../src/sdcard.c ****     if (TransferError != SD_OK)
 23505              		.loc 1 1347 0 is_stmt 1
 23506 142a 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 23507 142c 2A2B     		cmp	r3, #42
 23508 142e 02D0     		beq	.L249
1349:../src/sdcard.c ****       return(TransferError);
 23509              		.loc 1 1349 0
 23510 1430 0B4B     		ldr	r3, .L267
 23511 1432 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 23512 1434 25E0     		b	.L230
 23513              	.LVL348:
 23514              	.L249:
1354:../src/sdcard.c ****   SDIO_ClearFlag(SDIO_STATIC_FLAGS);
 23515              		.loc 1 1354 0
 23516 1436 40F2FF50 		movw	r0, #1535
 23517 143a FFF7FEFF 		bl	SDIO_ClearFlag
 23518              	.L257:
1361:../src/sdcard.c ****     errorstatus = IsCardProgramming(&cardstate);
 23519              		.loc 1 1361 0
 23520 143e 0DF11700 		add	r0, sp, #23
 23521 1442 FEF793FE 		bl	IsCardProgramming
 23522              	.LVL349:
1359:../src/sdcard.c ****   while ((errorstatus == SD_OK) && ((cardstate == SD_CARD_PROGRAMMING) || (cardstate == SD_CARD_REC
 23523              		.loc 1 1359 0
 23524 1446 2A28     		cmp	r0, #42
 23525 1448 1BD1     		bne	.L230
1359:../src/sdcard.c ****   while ((errorstatus == SD_OK) && ((cardstate == SD_CARD_PROGRAMMING) || (cardstate == SD_CARD_REC
 23526              		.loc 1 1359 0 is_stmt 0 discriminator 2
 23527 144a 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 23528              	.LVL350:
 23529 144e 063B     		subs	r3, r3, #6
 23530              	.LVL351:
 23531 1450 DBB2     		uxtb	r3, r3
 23532 1452 012B     		cmp	r3, #1
 23533 1454 F3D9     		bls	.L257
 23534 1456 14E0     		b	.L230
 23535              	.LVL352:
 23536              	.L259:
1172:../src/sdcard.c ****     return(errorstatus);
 23537              		.loc 1 1172 0 is_stmt 1
 23538 1458 0E20     		movs	r0, #14
 23539 145a 12E0     		b	.L230
 23540              	.L261:
1203:../src/sdcard.c ****     return(errorstatus);
 23541              		.loc 1 1203 0
 23542 145c 2620     		movs	r0, #38
 23543 145e 10E0     		b	.L230
 23544              	.L268:
 23545              		.align	2
 23546              	.L267:
 23547 1460 00000000 		.word	.LANCHOR1
 23548 1464 FFFF0F00 		.word	1048575
 23549 1468 00000000 		.word	SDIO_CmdInitStructure
 23550 146c 00000000 		.word	SrcBuffer
 23551 1470 00000000 		.word	SDIO_DataInitStructure
 23552 1474 00800140 		.word	1073840128
 23553 1478 00200010 		.word	268443648
 23554 147c 00000000 		.word	.LANCHOR0
 23555              	.LVL353:
 23556              	.L262:
1246:../src/sdcard.c ****     return(SD_ERROR);
 23557              		.loc 1 1246 0
 23558 1480 2920     		movs	r0, #41
 23559              	.LVL354:
 23560              	.L230:
1365:../src/sdcard.c **** }
 23561              		.loc 1 1365 0
 23562 1482 07B0     		add	sp, sp, #28
 23563 1484 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 23564              		.cfi_endproc
 23565              	.LFE39:
 23567              		.align	1
 23568              		.global	SD_WriteMultiBlocks
 23569              		.thumb
 23570              		.thumb_func
 23572              	SD_WriteMultiBlocks:
 23573              	.LFB40:
1380:../src/sdcard.c **** {
 23574              		.loc 1 1380 0
 23575              		.cfi_startproc
 23576              		@ args = 0, pretend = 0, frame = 32
 23577              		@ frame_needed = 0, uses_anonymous_args = 0
 23578              	.LVL355:
 23579 1488 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 23580              	.LCFI20:
 23581              		.cfi_def_cfa_offset 36
1382:../src/sdcard.c ****   uint8_t  power = 0, cardstate = 0;
 23582              		.loc 1 1382 0
 23583 148c 0025     		movs	r5, #0
 23584              		.cfi_offset 14, -4
 23585              		.cfi_offset 11, -8
 23586              		.cfi_offset 10, -12
 23587              		.cfi_offset 9, -16
 23588              		.cfi_offset 8, -20
 23589              		.cfi_offset 7, -24
 23590              		.cfi_offset 6, -28
 23591              		.cfi_offset 5, -32
 23592              		.cfi_offset 4, -36
1380:../src/sdcard.c **** {
 23593              		.loc 1 1380 0
 23594 148e 89B0     		sub	sp, sp, #36
 23595              	.LCFI21:
 23596              		.cfi_def_cfa_offset 72
1380:../src/sdcard.c **** {
 23597              		.loc 1 1380 0
 23598 1490 0390     		str	r0, [sp, #12]
 23599 1492 1446     		mov	r4, r2
 23600 1494 0493     		str	r3, [sp, #16]
1382:../src/sdcard.c ****   uint8_t  power = 0, cardstate = 0;
 23601              		.loc 1 1382 0
 23602 1496 8DF81F50 		strb	r5, [sp, #31]
 23603              	.LVL356:
1387:../src/sdcard.c ****   if (writebuff == NULL)
 23604              		.loc 1 1387 0
 23605 149a 0F46     		mov	r7, r1
 23606 149c 0029     		cmp	r1, #0
 23607 149e 00F0AB81 		beq	.L301
 23608              	.LVL357:
1393:../src/sdcard.c ****   TransferError = SD_OK;
 23609              		.loc 1 1393 0
 23610 14a2 B64E     		ldr	r6, .L307
 23611 14a4 2A23     		movs	r3, #42
 23612              	.LVL358:
1397:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
 23613              		.loc 1 1397 0
 23614 14a6 DFF8E892 		ldr	r9, .L307+20
1393:../src/sdcard.c ****   TransferError = SD_OK;
 23615              		.loc 1 1393 0
 23616 14aa 3371     		strb	r3, [r6, #4]
1394:../src/sdcard.c ****   TransferEnd = 0;
 23617              		.loc 1 1394 0
 23618 14ac DFF8D482 		ldr	r8, .L307+8
1397:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
 23619              		.loc 1 1397 0
 23620 14b0 B34B     		ldr	r3, .L307+4
1394:../src/sdcard.c ****   TransferEnd = 0;
 23621              		.loc 1 1394 0
 23622 14b2 C8F82850 		str	r5, [r8, #40]
1397:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
 23623              		.loc 1 1397 0
 23624 14b6 C9F80030 		str	r3, [r9, #0]
1395:../src/sdcard.c ****   TotalNumberOfBytes = 0;
 23625              		.loc 1 1395 0
 23626 14ba C8F82C50 		str	r5, [r8, #44]
1398:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataLength = 0;
 23627              		.loc 1 1398 0
 23628 14be C9F80450 		str	r5, [r9, #4]
1399:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataBlockSize = SDIO_DataBlockSize_1b;
 23629              		.loc 1 1399 0
 23630 14c2 C9F80850 		str	r5, [r9, #8]
1400:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferDir = SDIO_TransferDir_ToCard;
 23631              		.loc 1 1400 0
 23632 14c6 C9F80C50 		str	r5, [r9, #12]
1401:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferMode = SDIO_TransferMode_Block;
 23633              		.loc 1 1401 0
 23634 14ca C9F81050 		str	r5, [r9, #16]
1402:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DPSM = SDIO_DPSM_Disable;
 23635              		.loc 1 1402 0
 23636 14ce C9F81450 		str	r5, [r9, #20]
1403:../src/sdcard.c ****   SDIO_DataConfig(&SDIO_DataInitStructure);
 23637              		.loc 1 1403 0
 23638 14d2 4846     		mov	r0, r9
 23639              	.LVL359:
 23640 14d4 FFF7FEFF 		bl	SDIO_DataConfig
 23641              	.LVL360:
1404:../src/sdcard.c ****   SDIO_DMACmd(DISABLE);
 23642              		.loc 1 1404 0
 23643 14d8 2846     		mov	r0, r5
 23644 14da FFF7FEFF 		bl	SDIO_DMACmd
1406:../src/sdcard.c ****   if (SDIO_GetResponse(SDIO_RESP1) & SD_CARD_LOCKED)
 23645              		.loc 1 1406 0
 23646 14de 2846     		mov	r0, r5
 23647 14e0 FFF7FEFF 		bl	SDIO_GetResponse
 23648 14e4 10F0007F 		tst	r0, #33554432
 23649 14e8 4546     		mov	r5, r8
 23650 14ea 40F08381 		bne	.L298
1412:../src/sdcard.c ****   if (CardType == SDIO_HIGH_CAPACITY_SD_CARD)
 23651              		.loc 1 1412 0
 23652 14ee 6B68     		ldr	r3, [r5, #4]
 23653 14f0 022B     		cmp	r3, #2
 23654 14f2 04D1     		bne	.L271
 23655              	.LVL361:
1415:../src/sdcard.c ****     addr /= 512;
 23656              		.loc 1 1415 0
 23657 14f4 0399     		ldr	r1, [sp, #12]
1414:../src/sdcard.c ****     BlockSize = 512;
 23658              		.loc 1 1414 0
 23659 14f6 4FF40074 		mov	r4, #512
1415:../src/sdcard.c ****     addr /= 512;
 23660              		.loc 1 1415 0
 23661 14fa 490A     		lsrs	r1, r1, #9
 23662 14fc 0391     		str	r1, [sp, #12]
 23663              	.LVL362:
 23664              	.L271:
1419:../src/sdcard.c ****   if ((BlockSize > 0) && (BlockSize <= 2048) && ((BlockSize & (BlockSize - 1)) == 0))
 23665              		.loc 1 1419 0
 23666 14fe 04F1FF3B 		add	fp, r4, #-1
 23667 1502 1FFA8BF3 		uxth	r3, fp
 23668 1506 B3F5006F 		cmp	r3, #2048
 23669 150a 80F07581 		bcs	.L301
1419:../src/sdcard.c ****   if ((BlockSize > 0) && (BlockSize <= 2048) && ((BlockSize & (BlockSize - 1)) == 0))
 23670              		.loc 1 1419 0 is_stmt 0 discriminator 1
 23671 150e 1BEA040B 		ands	fp, fp, r4
 23672 1512 40F07181 		bne	.L301
1421:../src/sdcard.c ****     power = convert_from_bytes_to_power_of_two(BlockSize);
 23673              		.loc 1 1421 0 is_stmt 1
 23674 1516 2046     		mov	r0, r4
 23675 1518 FEF772FD 		bl	convert_from_bytes_to_power_of_two
1423:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) BlockSize;
 23676              		.loc 1 1423 0
 23677 151c DFF86882 		ldr	r8, .L307+12
1424:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SET_BLOCKLEN;
 23678              		.loc 1 1424 0
 23679 1520 1023     		movs	r3, #16
1425:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 23680              		.loc 1 1425 0
 23681 1522 4022     		movs	r2, #64
1427:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 23682              		.loc 1 1427 0
 23683 1524 4FF4806A 		mov	sl, #1024
1424:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SET_BLOCKLEN;
 23684              		.loc 1 1424 0
 23685 1528 C8F80430 		str	r3, [r8, #4]
1425:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 23686              		.loc 1 1425 0
 23687 152c C8F80820 		str	r2, [r8, #8]
1421:../src/sdcard.c ****     power = convert_from_bytes_to_power_of_two(BlockSize);
 23688              		.loc 1 1421 0
 23689 1530 0590     		str	r0, [sp, #20]
 23690              	.LVL363:
1423:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) BlockSize;
 23691              		.loc 1 1423 0
 23692 1532 C8F80040 		str	r4, [r8, #0]
1426:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 23693              		.loc 1 1426 0
 23694 1536 C8F80CB0 		str	fp, [r8, #12]
1427:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 23695              		.loc 1 1427 0
 23696 153a C8F810A0 		str	sl, [r8, #16]
1428:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
 23697              		.loc 1 1428 0
 23698 153e 4046     		mov	r0, r8
 23699 1540 0193     		str	r3, [sp, #4]
 23700 1542 FFF7FEFF 		bl	SDIO_SendCommand
1430:../src/sdcard.c ****     errorstatus = CmdResp1Error(SDIO_SET_BLOCKLEN);
 23701              		.loc 1 1430 0
 23702 1546 019B     		ldr	r3, [sp, #4]
 23703 1548 1846     		mov	r0, r3
 23704 154a FEF781FD 		bl	CmdResp1Error
 23705              	.LVL364:
1432:../src/sdcard.c ****     if (errorstatus != SD_OK)
 23706              		.loc 1 1432 0
 23707 154e 2A28     		cmp	r0, #42
 23708 1550 40F05381 		bne	.L270
1444:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) (RCA << 16);
 23709              		.loc 1 1444 0
 23710 1554 2A68     		ldr	r2, [r5, #0]
 23711 1556 8B4B     		ldr	r3, .L307+8
 23712 1558 1204     		lsls	r2, r2, #16
 23713 155a C8F80020 		str	r2, [r8, #0]
1446:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 23714              		.loc 1 1446 0
 23715 155e 4021     		movs	r1, #64
1445:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SEND_STATUS;
 23716              		.loc 1 1445 0
 23717 1560 0D22     		movs	r2, #13
 23718 1562 C8F80420 		str	r2, [r8, #4]
1446:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 23719              		.loc 1 1446 0
 23720 1566 C8F80810 		str	r1, [r8, #8]
1447:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 23721              		.loc 1 1447 0
 23722 156a C8F80CB0 		str	fp, [r8, #12]
1448:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 23723              		.loc 1 1448 0
 23724 156e C8F810A0 		str	sl, [r8, #16]
1449:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 23725              		.loc 1 1449 0
 23726 1572 4046     		mov	r0, r8
 23727              	.LVL365:
 23728 1574 0193     		str	r3, [sp, #4]
 23729 1576 0292     		str	r2, [sp, #8]
 23730 1578 FFF7FEFF 		bl	SDIO_SendCommand
1451:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_SEND_STATUS);
 23731              		.loc 1 1451 0
 23732 157c 029A     		ldr	r2, [sp, #8]
 23733 157e 1046     		mov	r0, r2
 23734 1580 FEF766FD 		bl	CmdResp1Error
 23735              	.LVL366:
1453:../src/sdcard.c ****   if (errorstatus != SD_OK)
 23736              		.loc 1 1453 0
 23737 1584 2A28     		cmp	r0, #42
 23738 1586 019B     		ldr	r3, [sp, #4]
 23739 1588 40F03781 		bne	.L270
1458:../src/sdcard.c ****   if (NumberOfBlocks > 1)
 23740              		.loc 1 1458 0
 23741 158c 049A     		ldr	r2, [sp, #16]
 23742 158e 012A     		cmp	r2, #1
 23743 1590 40F21F81 		bls	.L272
1461:../src/sdcard.c ****     if (NumberOfBlocks * BlockSize > SD_MAX_DATA_LENGTH)
 23744              		.loc 1 1461 0
 23745 1594 5443     		muls	r4, r2, r4
 23746              	.LVL367:
 23747 1596 B4F1007F 		cmp	r4, #33554432
 23748 159a 80F02D81 		bcs	.L301
1467:../src/sdcard.c ****     if ((SDIO_STD_CAPACITY_SD_CARD_V1_1 == CardType) || (SDIO_STD_CAPACITY_SD_CARD_V2_0 == CardType
 23749              		.loc 1 1467 0
 23750 159e 5A68     		ldr	r2, [r3, #4]
 23751 15a0 022A     		cmp	r2, #2
 23752 15a2 30D8     		bhi	.L273
1470:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) (RCA << 16);
 23753              		.loc 1 1470 0
 23754 15a4 1B68     		ldr	r3, [r3, #0]
1472:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 23755              		.loc 1 1472 0
 23756 15a6 4021     		movs	r1, #64
1470:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) (RCA << 16);
 23757              		.loc 1 1470 0
 23758 15a8 1B04     		lsls	r3, r3, #16
 23759 15aa C8F80030 		str	r3, [r8, #0]
1471:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_APP_CMD;
 23760              		.loc 1 1471 0
 23761 15ae 3723     		movs	r3, #55
 23762 15b0 C8F80430 		str	r3, [r8, #4]
1472:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 23763              		.loc 1 1472 0
 23764 15b4 C8F80810 		str	r1, [r8, #8]
1473:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 23765              		.loc 1 1473 0
 23766 15b8 C8F80CB0 		str	fp, [r8, #12]
1474:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 23767              		.loc 1 1474 0
 23768 15bc C8F810A0 		str	sl, [r8, #16]
1475:../src/sdcard.c ****       SDIO_SendCommand(&SDIO_CmdInitStructure);
 23769              		.loc 1 1475 0
 23770 15c0 4046     		mov	r0, r8
 23771              	.LVL368:
 23772 15c2 0193     		str	r3, [sp, #4]
 23773 15c4 FFF7FEFF 		bl	SDIO_SendCommand
1478:../src/sdcard.c ****       errorstatus = CmdResp1Error(SDIO_APP_CMD);
 23774              		.loc 1 1478 0
 23775 15c8 019B     		ldr	r3, [sp, #4]
 23776 15ca 1846     		mov	r0, r3
 23777 15cc FEF740FD 		bl	CmdResp1Error
 23778              	.LVL369:
1480:../src/sdcard.c ****       if (errorstatus != SD_OK)
 23779              		.loc 1 1480 0
 23780 15d0 2A28     		cmp	r0, #42
 23781 15d2 40F01281 		bne	.L270
1485:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Argument = (uint32_t)NumberOfBlocks;
 23782              		.loc 1 1485 0
 23783 15d6 049A     		ldr	r2, [sp, #16]
1486:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SET_BLOCK_COUNT;
 23784              		.loc 1 1486 0
 23785 15d8 1723     		movs	r3, #23
1487:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 23786              		.loc 1 1487 0
 23787 15da 4021     		movs	r1, #64
1485:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Argument = (uint32_t)NumberOfBlocks;
 23788              		.loc 1 1485 0
 23789 15dc C8F80020 		str	r2, [r8, #0]
1486:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SET_BLOCK_COUNT;
 23790              		.loc 1 1486 0
 23791 15e0 C8F80430 		str	r3, [r8, #4]
1487:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 23792              		.loc 1 1487 0
 23793 15e4 C8F80810 		str	r1, [r8, #8]
1488:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 23794              		.loc 1 1488 0
 23795 15e8 C8F80CB0 		str	fp, [r8, #12]
1489:../src/sdcard.c ****       SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 23796              		.loc 1 1489 0
 23797 15ec C8F810A0 		str	sl, [r8, #16]
1490:../src/sdcard.c ****       SDIO_SendCommand(&SDIO_CmdInitStructure);
 23798              		.loc 1 1490 0
 23799 15f0 4046     		mov	r0, r8
 23800              	.LVL370:
 23801 15f2 0193     		str	r3, [sp, #4]
 23802 15f4 FFF7FEFF 		bl	SDIO_SendCommand
1492:../src/sdcard.c ****       errorstatus = CmdResp1Error(SDIO_SET_BLOCK_COUNT);
 23803              		.loc 1 1492 0
 23804 15f8 019B     		ldr	r3, [sp, #4]
 23805 15fa 1846     		mov	r0, r3
 23806 15fc FEF728FD 		bl	CmdResp1Error
 23807              	.LVL371:
1494:../src/sdcard.c ****       if (errorstatus != SD_OK)
 23808              		.loc 1 1494 0
 23809 1600 2A28     		cmp	r0, #42
 23810 1602 40F0FA80 		bne	.L270
 23811              	.LVL372:
 23812              	.L273:
1501:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = (uint32_t)addr;
 23813              		.loc 1 1501 0
 23814 1606 039A     		ldr	r2, [sp, #12]
1503:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 23815              		.loc 1 1503 0
 23816 1608 4023     		movs	r3, #64
1502:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_WRITE_MULT_BLOCK;
 23817              		.loc 1 1502 0
 23818 160a 4FF0190A 		mov	sl, #25
1503:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 23819              		.loc 1 1503 0
 23820 160e C8F80830 		str	r3, [r8, #8]
1504:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 23821              		.loc 1 1504 0
 23822 1612 4FF0000B 		mov	fp, #0
1505:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 23823              		.loc 1 1505 0
 23824 1616 4FF48063 		mov	r3, #1024
1501:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = (uint32_t)addr;
 23825              		.loc 1 1501 0
 23826 161a C8F80020 		str	r2, [r8, #0]
1505:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 23827              		.loc 1 1505 0
 23828 161e C8F81030 		str	r3, [r8, #16]
1506:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
 23829              		.loc 1 1506 0
 23830 1622 5948     		ldr	r0, .L307+12
1502:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_WRITE_MULT_BLOCK;
 23831              		.loc 1 1502 0
 23832 1624 C8F804A0 		str	sl, [r8, #4]
1504:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 23833              		.loc 1 1504 0
 23834 1628 C8F80CB0 		str	fp, [r8, #12]
1506:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
 23835              		.loc 1 1506 0
 23836 162c FFF7FEFF 		bl	SDIO_SendCommand
1508:../src/sdcard.c ****     errorstatus = CmdResp1Error(SDIO_WRITE_MULT_BLOCK);
 23837              		.loc 1 1508 0
 23838 1630 5046     		mov	r0, sl
 23839 1632 FEF70DFD 		bl	CmdResp1Error
 23840              	.LVL373:
1510:../src/sdcard.c ****     if (SD_OK != errorstatus)
 23841              		.loc 1 1510 0
 23842 1636 2A28     		cmp	r0, #42
 23843 1638 40F0DF80 		bne	.L270
1517:../src/sdcard.c ****     SrcBuffer = writebuff;
 23844              		.loc 1 1517 0
 23845 163c 534B     		ldr	r3, .L307+16
1521:../src/sdcard.c ****     SDIO_DataInitStructure.SDIO_DataBlockSize = (uint32_t) power << 4;
 23846              		.loc 1 1521 0
 23847 163e 0599     		ldr	r1, [sp, #20]
1517:../src/sdcard.c ****     SrcBuffer = writebuff;
 23848              		.loc 1 1517 0
 23849 1640 1F60     		str	r7, [r3, #0]
1519:../src/sdcard.c ****     SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
 23850              		.loc 1 1519 0
 23851 1642 4F4B     		ldr	r3, .L307+4
1516:../src/sdcard.c ****     StopCondition = 1;
 23852              		.loc 1 1516 0
 23853 1644 AAF1180A 		sub	sl, sl, #24
1519:../src/sdcard.c ****     SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
 23854              		.loc 1 1519 0
 23855 1648 C9F80030 		str	r3, [r9, #0]
1521:../src/sdcard.c ****     SDIO_DataInitStructure.SDIO_DataBlockSize = (uint32_t) power << 4;
 23856              		.loc 1 1521 0
 23857 164c 0B01     		lsls	r3, r1, #4
1515:../src/sdcard.c ****     TotalNumberOfBytes = NumberOfBlocks * BlockSize;
 23858              		.loc 1 1515 0
 23859 164e EC62     		str	r4, [r5, #44]
1516:../src/sdcard.c ****     StopCondition = 1;
 23860              		.loc 1 1516 0
 23861 1650 C5F830A0 		str	sl, [r5, #48]
1520:../src/sdcard.c ****     SDIO_DataInitStructure.SDIO_DataLength = NumberOfBlocks * BlockSize;
 23862              		.loc 1 1520 0
 23863 1654 C9F80440 		str	r4, [r9, #4]
1521:../src/sdcard.c ****     SDIO_DataInitStructure.SDIO_DataBlockSize = (uint32_t) power << 4;
 23864              		.loc 1 1521 0
 23865 1658 C9F80830 		str	r3, [r9, #8]
1522:../src/sdcard.c ****     SDIO_DataInitStructure.SDIO_TransferDir = SDIO_TransferDir_ToCard;
 23866              		.loc 1 1522 0
 23867 165c C9F80CB0 		str	fp, [r9, #12]
1523:../src/sdcard.c ****     SDIO_DataInitStructure.SDIO_TransferMode = SDIO_TransferMode_Block;
 23868              		.loc 1 1523 0
 23869 1660 C9F810B0 		str	fp, [r9, #16]
1524:../src/sdcard.c ****     SDIO_DataInitStructure.SDIO_DPSM = SDIO_DPSM_Enable;
 23870              		.loc 1 1524 0
 23871 1664 C9F814A0 		str	sl, [r9, #20]
1525:../src/sdcard.c ****     SDIO_DataConfig(&SDIO_DataInitStructure);
 23872              		.loc 1 1525 0
 23873 1668 4948     		ldr	r0, .L307+20
 23874              	.LVL374:
 23875 166a FFF7FEFF 		bl	SDIO_DataConfig
1527:../src/sdcard.c ****     if (DeviceMode == SD_POLLING_MODE)
 23876              		.loc 1 1527 0
 23877 166e 3168     		ldr	r1, [r6, #0]
 23878 1670 0229     		cmp	r1, #2
 23879 1672 76D1     		bne	.L274
 23880 1674 26E0     		b	.L303
 23881              	.LVL375:
 23882              	.L284:
1531:../src/sdcard.c ****         if (SDIO_GetFlagStatus(SDIO_FLAG_TXFIFOHE) != RESET)
 23883              		.loc 1 1531 0
 23884 1676 4FF48040 		mov	r0, #16384
 23885 167a FFF7FEFF 		bl	SDIO_GetFlagStatus
 23886 167e 08B3     		cbz	r0, .L303
1533:../src/sdcard.c ****           if (!((TotalNumberOfBytes - bytestransferred) < SD_HALFFIFOBYTES))
 23887              		.loc 1 1533 0
 23888 1680 EB6A     		ldr	r3, [r5, #44]
 23889 1682 CBEB0303 		rsb	r3, fp, r3
 23890 1686 1F2B     		cmp	r3, #31
 23891 1688 09D9     		bls	.L277
 23892              	.L278:
1537:../src/sdcard.c ****               SDIO_WriteData(*(tempbuff + count));
 23893              		.loc 1 1537 0 discriminator 2
 23894 168a 3859     		ldr	r0, [r7, r4]
 23895 168c 0434     		adds	r4, r4, #4
 23896 168e FFF7FEFF 		bl	SDIO_WriteData
1535:../src/sdcard.c ****             for (count = 0; count < SD_HALFFIFO; count++)
 23897              		.loc 1 1535 0 discriminator 2
 23898 1692 202C     		cmp	r4, #32
 23899 1694 F9D1     		bne	.L278
1539:../src/sdcard.c ****             tempbuff += SD_HALFFIFO;
 23900              		.loc 1 1539 0
 23901 1696 2037     		adds	r7, r7, #32
 23902              	.LVL376:
1540:../src/sdcard.c ****             bytestransferred += SD_HALFFIFOBYTES;
 23903              		.loc 1 1540 0
 23904 1698 0BF1200B 		add	fp, fp, #32
 23905              	.LVL377:
 23906 169c 12E0     		b	.L303
 23907              	.L277:
1544:../src/sdcard.c ****             restwords = ((TotalNumberOfBytes - bytestransferred) % 4 == 0) ? ((TotalNumberOfBytes -
 23908              		.loc 1 1544 0
 23909 169e 13F0030F 		tst	r3, #3
 23910 16a2 4FEA9304 		lsr	r4, r3, #2
 23911 16a6 18BF     		it	ne
 23912 16a8 0134     		addne	r4, r4, #1
 23913              	.LVL378:
1547:../src/sdcard.c ****             for (count = 0; count < restwords; count++, tempbuff++, bytestransferred += 4)
 23914              		.loc 1 1547 0
 23915 16aa B946     		mov	r9, r7
 23916 16ac 0026     		movs	r6, #0
 23917 16ae 04E0     		b	.L282
 23918              	.LVL379:
 23919              	.L283:
1549:../src/sdcard.c ****               SDIO_WriteData(*tempbuff);
 23920              		.loc 1 1549 0 discriminator 2
 23921 16b0 59F8040B 		ldr	r0, [r9], #4
 23922              	.LVL380:
 23923 16b4 FFF7FEFF 		bl	SDIO_WriteData
1547:../src/sdcard.c ****             for (count = 0; count < restwords; count++, tempbuff++, bytestransferred += 4)
 23924              		.loc 1 1547 0 discriminator 2
 23925 16b8 0136     		adds	r6, r6, #1
 23926              	.LVL381:
 23927              	.L282:
1547:../src/sdcard.c ****             for (count = 0; count < restwords; count++, tempbuff++, bytestransferred += 4)
 23928              		.loc 1 1547 0 is_stmt 0 discriminator 1
 23929 16ba A642     		cmp	r6, r4
 23930 16bc F8D3     		bcc	.L283
1379:../src/sdcard.c **** SD_Error SD_WriteMultiBlocks(uint32_t addr, uint32_t *writebuff, uint16_t BlockSize, uint32_t Numbe
 23931              		.loc 1 1379 0 is_stmt 1
 23932 16be A400     		lsls	r4, r4, #2
 23933              	.LVL382:
 23934 16c0 A344     		add	fp, fp, r4
 23935 16c2 3F19     		adds	r7, r7, r4
 23936              	.LVL383:
 23937              	.L303:
1529:../src/sdcard.c ****       while (!(SDIO->STA & (SDIO_FLAG_TXUNDERR | SDIO_FLAG_DCRCFAIL | SDIO_FLAG_DATAEND | SDIO_FLAG
 23938              		.loc 1 1529 0 discriminator 1
 23939 16c4 334B     		ldr	r3, .L307+24
 23940 16c6 40F21A34 		movw	r4, #794
 23941 16ca 5B6B     		ldr	r3, [r3, #52]
 23942 16cc 03EA0404 		and	r4, r3, r4
 23943 16d0 002C     		cmp	r4, #0
 23944 16d2 D0D0     		beq	.L284
1555:../src/sdcard.c ****       if (SDIO_GetFlagStatus(SDIO_FLAG_DTIMEOUT) != RESET)
 23945              		.loc 1 1555 0
 23946 16d4 0820     		movs	r0, #8
 23947 16d6 FFF7FEFF 		bl	SDIO_GetFlagStatus
 23948 16da 20B1     		cbz	r0, .L285
1557:../src/sdcard.c ****         SDIO_ClearFlag(SDIO_FLAG_DTIMEOUT);
 23949              		.loc 1 1557 0
 23950 16dc 0820     		movs	r0, #8
 23951 16de FFF7FEFF 		bl	SDIO_ClearFlag
 23952              	.LVL384:
1559:../src/sdcard.c ****         return(errorstatus);
 23953              		.loc 1 1559 0
 23954 16e2 0420     		movs	r0, #4
 23955 16e4 89E0     		b	.L270
 23956              	.LVL385:
 23957              	.L285:
1561:../src/sdcard.c ****       else if (SDIO_GetFlagStatus(SDIO_FLAG_DCRCFAIL) != RESET)
 23958              		.loc 1 1561 0
 23959 16e6 0220     		movs	r0, #2
 23960 16e8 FFF7FEFF 		bl	SDIO_GetFlagStatus
 23961 16ec 20B1     		cbz	r0, .L286
1563:../src/sdcard.c ****         SDIO_ClearFlag(SDIO_FLAG_DCRCFAIL);
 23962              		.loc 1 1563 0
 23963 16ee 0220     		movs	r0, #2
 23964 16f0 FFF7FEFF 		bl	SDIO_ClearFlag
 23965              	.LVL386:
1565:../src/sdcard.c ****         return(errorstatus);
 23966              		.loc 1 1565 0
 23967 16f4 0220     		movs	r0, #2
 23968 16f6 80E0     		b	.L270
 23969              	.LVL387:
 23970              	.L286:
1567:../src/sdcard.c ****       else if (SDIO_GetFlagStatus(SDIO_FLAG_TXUNDERR) != RESET)
 23971              		.loc 1 1567 0
 23972 16f8 1020     		movs	r0, #16
 23973 16fa FFF7FEFF 		bl	SDIO_GetFlagStatus
 23974 16fe 20B1     		cbz	r0, .L287
1569:../src/sdcard.c ****         SDIO_ClearFlag(SDIO_FLAG_TXUNDERR);
 23975              		.loc 1 1569 0
 23976 1700 1020     		movs	r0, #16
 23977 1702 FFF7FEFF 		bl	SDIO_ClearFlag
 23978              	.LVL388:
1571:../src/sdcard.c ****         return(errorstatus);
 23979              		.loc 1 1571 0
 23980 1706 0520     		movs	r0, #5
 23981 1708 77E0     		b	.L270
 23982              	.LVL389:
 23983              	.L287:
1573:../src/sdcard.c ****       else if (SDIO_GetFlagStatus(SDIO_FLAG_STBITERR) != RESET)
 23984              		.loc 1 1573 0
 23985 170a 4FF40070 		mov	r0, #512
 23986 170e FFF7FEFF 		bl	SDIO_GetFlagStatus
 23987 1712 0446     		mov	r4, r0
 23988 1714 28B1     		cbz	r0, .L288
1575:../src/sdcard.c ****         SDIO_ClearFlag(SDIO_FLAG_STBITERR);
 23989              		.loc 1 1575 0
 23990 1716 4FF40070 		mov	r0, #512
 23991 171a FFF7FEFF 		bl	SDIO_ClearFlag
 23992              	.LVL390:
1577:../src/sdcard.c ****         return(errorstatus);
 23993              		.loc 1 1577 0
 23994 171e 0720     		movs	r0, #7
 23995 1720 6BE0     		b	.L270
 23996              	.LVL391:
 23997              	.L288:
1580:../src/sdcard.c ****       if (SDIO_GetFlagStatus(SDIO_FLAG_DATAEND) != RESET)
 23998              		.loc 1 1580 0
 23999 1722 4FF48070 		mov	r0, #256
 24000 1726 FFF7FEFF 		bl	SDIO_GetFlagStatus
 24001 172a 0028     		cmp	r0, #0
 24002 172c 51D0     		beq	.L272
1582:../src/sdcard.c ****        if ((SDIO_STD_CAPACITY_SD_CARD_V1_1 == CardType) || (SDIO_STD_CAPACITY_SD_CARD_V2_0 == CardT
 24003              		.loc 1 1582 0
 24004 172e 6B68     		ldr	r3, [r5, #4]
 24005 1730 022B     		cmp	r3, #2
 24006 1732 4ED8     		bhi	.L272
1587:../src/sdcard.c ****           SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 24007              		.loc 1 1587 0
 24008 1734 4023     		movs	r3, #64
1586:../src/sdcard.c ****           SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_STOP_TRANSMISSION;
 24009              		.loc 1 1586 0
 24010 1736 0C25     		movs	r5, #12
1587:../src/sdcard.c ****           SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 24011              		.loc 1 1587 0
 24012 1738 C8F80830 		str	r3, [r8, #8]
1589:../src/sdcard.c ****           SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 24013              		.loc 1 1589 0
 24014 173c 4FF48063 		mov	r3, #1024
 24015 1740 C8F81030 		str	r3, [r8, #16]
1590:../src/sdcard.c ****           SDIO_SendCommand(&SDIO_CmdInitStructure);
 24016              		.loc 1 1590 0
 24017 1744 1048     		ldr	r0, .L307+12
1585:../src/sdcard.c ****           SDIO_CmdInitStructure.SDIO_Argument = 0x0;
 24018              		.loc 1 1585 0
 24019 1746 C8F80040 		str	r4, [r8, #0]
1586:../src/sdcard.c ****           SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_STOP_TRANSMISSION;
 24020              		.loc 1 1586 0
 24021 174a C8F80450 		str	r5, [r8, #4]
1588:../src/sdcard.c ****           SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 24022              		.loc 1 1588 0
 24023 174e C8F80C40 		str	r4, [r8, #12]
1590:../src/sdcard.c ****           SDIO_SendCommand(&SDIO_CmdInitStructure);
 24024              		.loc 1 1590 0
 24025 1752 FFF7FEFF 		bl	SDIO_SendCommand
1593:../src/sdcard.c ****           errorstatus = CmdResp1Error(SDIO_STOP_TRANSMISSION);
 24026              		.loc 1 1593 0
 24027 1756 2846     		mov	r0, r5
 24028 1758 FEF77AFC 		bl	CmdResp1Error
 24029              	.LVL392:
1595:../src/sdcard.c ****           if (errorstatus != SD_OK)
 24030              		.loc 1 1595 0
 24031 175c 2A28     		cmp	r0, #42
 24032 175e 4CD1     		bne	.L270
 24033 1760 37E0     		b	.L272
 24034              	.LVL393:
 24035              	.L274:
1602:../src/sdcard.c ****     else if (DeviceMode == SD_INTERRUPT_MODE)
 24036              		.loc 1 1602 0
 24037 1762 0129     		cmp	r1, #1
 24038 1764 18D1     		bne	.L289
1604:../src/sdcard.c ****       SDIO_ITConfig(SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_DATAEND | SDIO_IT_TXFIFOHE | SDIO
 24039              		.loc 1 1604 0
 24040 1766 44F21A30 		movw	r0, #17178
 24041 176a FFF7FEFF 		bl	SDIO_ITConfig
 24042              	.L291:
1605:../src/sdcard.c ****       while ((TransferEnd == 0) && (TransferError == SD_OK))
 24043              		.loc 1 1605 0 discriminator 1
 24044 176e AB6A     		ldr	r3, [r5, #40]
 24045 1770 4BBB     		cbnz	r3, .L293
1605:../src/sdcard.c ****       while ((TransferEnd == 0) && (TransferError == SD_OK))
 24046              		.loc 1 1605 0 is_stmt 0 discriminator 2
 24047 1772 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 24048 1774 2A2B     		cmp	r3, #42
 24049 1776 FAD0     		beq	.L291
 24050 1778 25E0     		b	.L293
 24051              	.L308:
 24052 177a 00BF     		.align	2
 24053              	.L307:
 24054 177c 00000000 		.word	.LANCHOR1
 24055 1780 FFFF0F00 		.word	1048575
 24056 1784 00000000 		.word	.LANCHOR0
 24057 1788 00000000 		.word	SDIO_CmdInitStructure
 24058 178c 00000000 		.word	SrcBuffer
 24059 1790 00000000 		.word	SDIO_DataInitStructure
 24060 1794 00800140 		.word	1073840128
 24061              	.L289:
1612:../src/sdcard.c ****     else if (DeviceMode == SD_DMA_MODE)
 24062              		.loc 1 1612 0 is_stmt 1
 24063 1798 D9B9     		cbnz	r1, .L272
1614:../src/sdcard.c ****       SDIO_ITConfig(SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_DATAEND | SDIO_IT_TXUNDERR | SDIO
 24064              		.loc 1 1614 0
 24065 179a 5146     		mov	r1, sl
 24066 179c 40F21A30 		movw	r0, #794
 24067 17a0 FFF7FEFF 		bl	SDIO_ITConfig
1615:../src/sdcard.c ****       SDIO_DMACmd(ENABLE);
 24068              		.loc 1 1615 0
 24069 17a4 5046     		mov	r0, sl
 24070 17a6 FFF7FEFF 		bl	SDIO_DMACmd
1616:../src/sdcard.c ****       DMA_TxConfiguration(writebuff, (NumberOfBlocks * BlockSize));
 24071              		.loc 1 1616 0
 24072 17aa 3846     		mov	r0, r7
 24073 17ac 2146     		mov	r1, r4
 24074 17ae FEF7A1FD 		bl	DMA_TxConfiguration
 24075              	.L292:
1617:../src/sdcard.c ****       while (DMA_GetFlagStatus(DMA2_FLAG_TC4) == RESET)
 24076              		.loc 1 1617 0 discriminator 1
 24077 17b2 1348     		ldr	r0, .L309
 24078 17b4 FFF7FEFF 		bl	DMA_GetFlagStatus
 24079 17b8 0028     		cmp	r0, #0
 24080 17ba FAD0     		beq	.L292
 24081              	.L294:
1619:../src/sdcard.c ****       while ((TransferEnd == 0) && (TransferError == SD_OK))
 24082              		.loc 1 1619 0 discriminator 1
 24083 17bc AB6A     		ldr	r3, [r5, #40]
 24084 17be 13B9     		cbnz	r3, .L293
1619:../src/sdcard.c ****       while ((TransferEnd == 0) && (TransferError == SD_OK))
 24085              		.loc 1 1619 0 is_stmt 0 discriminator 2
 24086 17c0 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 24087 17c2 2A2B     		cmp	r3, #42
 24088 17c4 FAD0     		beq	.L294
 24089              	.L293:
1621:../src/sdcard.c ****       if (TransferError != SD_OK)
 24090              		.loc 1 1621 0 is_stmt 1
 24091 17c6 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 24092 17c8 2A2B     		cmp	r3, #42
 24093 17ca 02D0     		beq	.L272
1623:../src/sdcard.c ****         return(TransferError);
 24094              		.loc 1 1623 0
 24095 17cc 0D4B     		ldr	r3, .L309+4
 24096 17ce 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 24097 17d0 13E0     		b	.L270
 24098              	.LVL394:
 24099              	.L272:
1628:../src/sdcard.c ****   SDIO_ClearFlag(SDIO_STATIC_FLAGS);
 24100              		.loc 1 1628 0
 24101 17d2 40F2FF50 		movw	r0, #1535
 24102 17d6 FFF7FEFF 		bl	SDIO_ClearFlag
 24103              	.L296:
1635:../src/sdcard.c ****     errorstatus = IsCardProgramming(&cardstate);
 24104              		.loc 1 1635 0
 24105 17da 0DF11F00 		add	r0, sp, #31
 24106 17de FEF7C5FC 		bl	IsCardProgramming
 24107              	.LVL395:
1633:../src/sdcard.c ****   while ((errorstatus == SD_OK) && ((cardstate == SD_CARD_PROGRAMMING) || (cardstate == SD_CARD_REC
 24108              		.loc 1 1633 0
 24109 17e2 2A28     		cmp	r0, #42
 24110 17e4 09D1     		bne	.L270
1633:../src/sdcard.c ****   while ((errorstatus == SD_OK) && ((cardstate == SD_CARD_PROGRAMMING) || (cardstate == SD_CARD_REC
 24111              		.loc 1 1633 0 is_stmt 0 discriminator 2
 24112 17e6 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
 24113              	.LVL396:
 24114 17ea 063B     		subs	r3, r3, #6
 24115              	.LVL397:
 24116 17ec DBB2     		uxtb	r3, r3
 24117 17ee 012B     		cmp	r3, #1
 24118 17f0 F3D9     		bls	.L296
 24119 17f2 02E0     		b	.L270
 24120              	.LVL398:
 24121              	.L298:
1409:../src/sdcard.c ****     return(errorstatus);
 24122              		.loc 1 1409 0 is_stmt 1
 24123 17f4 0E20     		movs	r0, #14
 24124 17f6 00E0     		b	.L270
 24125              	.LVL399:
 24126              	.L301:
1464:../src/sdcard.c ****       return(errorstatus);
 24127              		.loc 1 1464 0
 24128 17f8 2620     		movs	r0, #38
 24129              	.LVL400:
 24130              	.L270:
1639:../src/sdcard.c **** }
 24131              		.loc 1 1639 0
 24132 17fa 09B0     		add	sp, sp, #36
 24133 17fc BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 24134              	.L310:
 24135              		.align	2
 24136              	.L309:
 24137 1800 00200010 		.word	268443648
 24138 1804 00000000 		.word	.LANCHOR1
 24139              		.cfi_endproc
 24140              	.LFE40:
 24142              		.align	1
 24143              		.global	SD_GetTransferState
 24144              		.thumb
 24145              		.thumb_func
 24147              	SD_GetTransferState:
 24148              	.LFB41:
1652:../src/sdcard.c **** {
 24149              		.loc 1 1652 0
 24150              		.cfi_startproc
 24151              		@ args = 0, pretend = 0, frame = 0
 24152              		@ frame_needed = 0, uses_anonymous_args = 0
 24153              		@ link register save eliminated.
1653:../src/sdcard.c ****   if (SDIO->STA & (SDIO_FLAG_TXACT | SDIO_FLAG_RXACT))
 24154              		.loc 1 1653 0
 24155 1808 034B     		ldr	r3, .L312
 24156 180a 5B6B     		ldr	r3, [r3, #52]
1655:../src/sdcard.c ****     return(SD_TRANSFER_IN_PROGRESS);
 24157              		.loc 1 1655 0
 24158 180c 13F4405F 		tst	r3, #12288
1661:../src/sdcard.c **** }
 24159              		.loc 1 1661 0
 24160 1810 0CBF     		ite	eq
 24161 1812 0020     		moveq	r0, #0
 24162 1814 0120     		movne	r0, #1
 24163 1816 7047     		bx	lr
 24164              	.L313:
 24165              		.align	2
 24166              	.L312:
 24167 1818 00800140 		.word	1073840128
 24168              		.cfi_endproc
 24169              	.LFE41:
 24171              		.align	1
 24172              		.global	SD_StopTransfer
 24173              		.thumb
 24174              		.thumb_func
 24176              	SD_StopTransfer:
 24177              	.LFB42:
1671:../src/sdcard.c **** {
 24178              		.loc 1 1671 0
 24179              		.cfi_startproc
 24180              		@ args = 0, pretend = 0, frame = 0
 24181              		@ frame_needed = 0, uses_anonymous_args = 0
 24182              	.LVL401:
1675:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = 0x0;
 24183              		.loc 1 1675 0
 24184 181c 0948     		ldr	r0, .L315
 24185 181e 0023     		movs	r3, #0
1671:../src/sdcard.c **** {
 24186              		.loc 1 1671 0
 24187 1820 10B5     		push	{r4, lr}
 24188              	.LCFI22:
 24189              		.cfi_def_cfa_offset 8
1677:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 24190              		.loc 1 1677 0
 24191 1822 4022     		movs	r2, #64
1675:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = 0x0;
 24192              		.loc 1 1675 0
 24193 1824 0360     		str	r3, [r0, #0]
1676:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_STOP_TRANSMISSION;
 24194              		.loc 1 1676 0
 24195 1826 0C24     		movs	r4, #12
 24196              		.cfi_offset 14, -4
 24197              		.cfi_offset 4, -8
1678:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 24198              		.loc 1 1678 0
 24199 1828 C360     		str	r3, [r0, #12]
1679:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 24200              		.loc 1 1679 0
 24201 182a 4FF48063 		mov	r3, #1024
1676:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_STOP_TRANSMISSION;
 24202              		.loc 1 1676 0
 24203 182e 4460     		str	r4, [r0, #4]
1677:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 24204              		.loc 1 1677 0
 24205 1830 8260     		str	r2, [r0, #8]
1679:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 24206              		.loc 1 1679 0
 24207 1832 0361     		str	r3, [r0, #16]
1680:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 24208              		.loc 1 1680 0
 24209 1834 FFF7FEFF 		bl	SDIO_SendCommand
1682:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_STOP_TRANSMISSION);
 24210              		.loc 1 1682 0
 24211 1838 2046     		mov	r0, r4
1685:../src/sdcard.c **** }
 24212              		.loc 1 1685 0
 24213 183a BDE81040 		pop	{r4, lr}
1682:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_STOP_TRANSMISSION);
 24214              		.loc 1 1682 0
 24215 183e FEF707BC 		b	CmdResp1Error
 24216              	.L316:
 24217 1842 00BF     		.align	2
 24218              	.L315:
 24219 1844 00000000 		.word	SDIO_CmdInitStructure
 24220              		.cfi_endproc
 24221              	.LFE42:
 24223              		.align	1
 24224              		.global	SD_Erase
 24225              		.thumb
 24226              		.thumb_func
 24228              	SD_Erase:
 24229              	.LFB43:
1696:../src/sdcard.c **** {
 24230              		.loc 1 1696 0
 24231              		.cfi_startproc
 24232              		@ args = 0, pretend = 0, frame = 8
 24233              		@ frame_needed = 0, uses_anonymous_args = 0
 24234              	.LVL402:
 24235 1848 2DE9F347 		push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 24236              	.LCFI23:
 24237              		.cfi_def_cfa_offset 40
1703:../src/sdcard.c ****   if (((CSD_Tab[1] >> 20) & SD_CCCC_ERASE) == 0)
 24238              		.loc 1 1703 0
 24239 184c 394D     		ldr	r5, .L328
 24240              		.cfi_offset 14, -4
 24241              		.cfi_offset 10, -8
 24242              		.cfi_offset 9, -12
 24243              		.cfi_offset 8, -16
 24244              		.cfi_offset 7, -20
 24245              		.cfi_offset 6, -24
 24246              		.cfi_offset 5, -28
 24247              		.cfi_offset 4, -32
 24248              		.cfi_offset 1, -36
 24249              		.cfi_offset 0, -40
1696:../src/sdcard.c **** {
 24250              		.loc 1 1696 0
 24251 184e 0446     		mov	r4, r0
1703:../src/sdcard.c ****   if (((CSD_Tab[1] >> 20) & SD_CCCC_ERASE) == 0)
 24252              		.loc 1 1703 0
 24253 1850 EB69     		ldr	r3, [r5, #28]
1699:../src/sdcard.c ****   __IO uint32_t maxdelay = 0;
 24254              		.loc 1 1699 0
 24255 1852 0020     		movs	r0, #0
 24256              	.LVL403:
1703:../src/sdcard.c ****   if (((CSD_Tab[1] >> 20) & SD_CCCC_ERASE) == 0)
 24257              		.loc 1 1703 0
 24258 1854 13F0007F 		tst	r3, #33554432
1696:../src/sdcard.c **** {
 24259              		.loc 1 1696 0
 24260 1858 0F46     		mov	r7, r1
1699:../src/sdcard.c ****   __IO uint32_t maxdelay = 0;
 24261              		.loc 1 1699 0
 24262 185a 0090     		str	r0, [sp, #0]
 24263              	.LVL404:
1700:../src/sdcard.c ****   uint8_t cardstate = 0;
 24264              		.loc 1 1700 0
 24265 185c 8DF80700 		strb	r0, [sp, #7]
 24266              	.LVL405:
1703:../src/sdcard.c ****   if (((CSD_Tab[1] >> 20) & SD_CCCC_ERASE) == 0)
 24267              		.loc 1 1703 0
 24268 1860 62D0     		beq	.L326
1709:../src/sdcard.c ****   maxdelay = 72000 / ((SDIO->CLKCR & 0xFF) + 2);
 24269              		.loc 1 1709 0
 24270 1862 354B     		ldr	r3, .L328+4
 24271 1864 354A     		ldr	r2, .L328+8
 24272 1866 5B68     		ldr	r3, [r3, #4]
 24273 1868 03F0FF03 		and	r3, r3, #255
 24274 186c 0233     		adds	r3, r3, #2
 24275 186e B2FBF3F3 		udiv	r3, r2, r3
 24276              	.LVL406:
 24277 1872 0093     		str	r3, [sp, #0]
 24278              	.LVL407:
1711:../src/sdcard.c ****   if (SDIO_GetResponse(SDIO_RESP1) & SD_CARD_LOCKED)
 24279              		.loc 1 1711 0
 24280 1874 FFF7FEFF 		bl	SDIO_GetResponse
 24281              	.LVL408:
 24282 1878 10F0007F 		tst	r0, #33554432
 24283 187c 56D1     		bne	.L327
1717:../src/sdcard.c ****   if (CardType == SDIO_HIGH_CAPACITY_SD_CARD)
 24284              		.loc 1 1717 0
 24285 187e 6B68     		ldr	r3, [r5, #4]
 24286 1880 2F4D     		ldr	r5, .L328+12
 24287 1882 022B     		cmp	r3, #2
 24288 1884 02D1     		bne	.L319
1719:../src/sdcard.c ****     startaddr /= 512;
 24289              		.loc 1 1719 0
 24290 1886 640A     		lsrs	r4, r4, #9
 24291              	.LVL409:
1720:../src/sdcard.c ****     endaddr /= 512;
 24292              		.loc 1 1720 0
 24293 1888 7F0A     		lsrs	r7, r7, #9
 24294              	.LVL410:
 24295 188a 00E0     		b	.L320
 24296              	.L319:
1724:../src/sdcard.c ****   if ((SDIO_STD_CAPACITY_SD_CARD_V1_1 == CardType) || (SDIO_STD_CAPACITY_SD_CARD_V2_0 == CardType) 
 24297              		.loc 1 1724 0
 24298 188c 28D8     		bhi	.L321
 24299              	.L320:
1727:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = startaddr;
 24300              		.loc 1 1727 0
 24301 188e 2C4E     		ldr	r6, .L328+12
 24302 1890 2C60     		str	r4, [r5, #0]
1729:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 24303              		.loc 1 1729 0
 24304 1892 4FF0400A 		mov	sl, #64
1728:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SD_ERASE_GRP_START;
 24305              		.loc 1 1728 0
 24306 1896 2024     		movs	r4, #32
 24307              	.LVL411:
1730:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 24308              		.loc 1 1730 0
 24309 1898 4FF00009 		mov	r9, #0
1731:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 24310              		.loc 1 1731 0
 24311 189c 4FF48068 		mov	r8, #1024
1732:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
 24312              		.loc 1 1732 0
 24313 18a0 3046     		mov	r0, r6
1728:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SD_ERASE_GRP_START;
 24314              		.loc 1 1728 0
 24315 18a2 6C60     		str	r4, [r5, #4]
1729:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 24316              		.loc 1 1729 0
 24317 18a4 C5F808A0 		str	sl, [r5, #8]
1730:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 24318              		.loc 1 1730 0
 24319 18a8 C5F80C90 		str	r9, [r5, #12]
1731:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 24320              		.loc 1 1731 0
 24321 18ac C5F81080 		str	r8, [r5, #16]
1732:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
 24322              		.loc 1 1732 0
 24323 18b0 FFF7FEFF 		bl	SDIO_SendCommand
 24324              	.LVL412:
1734:../src/sdcard.c ****     errorstatus = CmdResp1Error(SDIO_SD_ERASE_GRP_START);
 24325              		.loc 1 1734 0
 24326 18b4 2046     		mov	r0, r4
 24327 18b6 FEF7CBFB 		bl	CmdResp1Error
 24328              	.LVL413:
1735:../src/sdcard.c ****     if (errorstatus != SD_OK)
 24329              		.loc 1 1735 0
 24330 18ba 2A28     		cmp	r0, #42
 24331 18bc 37D1     		bne	.L318
1742:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SD_ERASE_GRP_END;
 24332              		.loc 1 1742 0
 24333 18be 0134     		adds	r4, r4, #1
1746:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
 24334              		.loc 1 1746 0
 24335 18c0 3046     		mov	r0, r6
 24336              	.LVL414:
1741:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Argument = endaddr;
 24337              		.loc 1 1741 0
 24338 18c2 3760     		str	r7, [r6, #0]
1742:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SD_ERASE_GRP_END;
 24339              		.loc 1 1742 0
 24340 18c4 7460     		str	r4, [r6, #4]
1743:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 24341              		.loc 1 1743 0
 24342 18c6 C6F808A0 		str	sl, [r6, #8]
1744:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 24343              		.loc 1 1744 0
 24344 18ca C6F80C90 		str	r9, [r6, #12]
1745:../src/sdcard.c ****     SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 24345              		.loc 1 1745 0
 24346 18ce C6F81080 		str	r8, [r6, #16]
1746:../src/sdcard.c ****     SDIO_SendCommand(&SDIO_CmdInitStructure);
 24347              		.loc 1 1746 0
 24348 18d2 FFF7FEFF 		bl	SDIO_SendCommand
1748:../src/sdcard.c ****     errorstatus = CmdResp1Error(SDIO_SD_ERASE_GRP_END);
 24349              		.loc 1 1748 0
 24350 18d6 2046     		mov	r0, r4
 24351 18d8 FEF7BAFB 		bl	CmdResp1Error
 24352              	.LVL415:
1749:../src/sdcard.c ****     if (errorstatus != SD_OK)
 24353              		.loc 1 1749 0
 24354 18dc 2A28     		cmp	r0, #42
 24355 18de 26D1     		bne	.L318
 24356              	.LVL416:
 24357              	.L321:
1758:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 24358              		.loc 1 1758 0
 24359 18e0 4023     		movs	r3, #64
1756:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = 0;
 24360              		.loc 1 1756 0
 24361 18e2 0024     		movs	r4, #0
1757:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_ERASE;
 24362              		.loc 1 1757 0
 24363 18e4 2626     		movs	r6, #38
1758:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 24364              		.loc 1 1758 0
 24365 18e6 AB60     		str	r3, [r5, #8]
1760:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 24366              		.loc 1 1760 0
 24367 18e8 4FF48063 		mov	r3, #1024
 24368 18ec 2B61     		str	r3, [r5, #16]
1761:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 24369              		.loc 1 1761 0
 24370 18ee 1448     		ldr	r0, .L328+12
1756:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = 0;
 24371              		.loc 1 1756 0
 24372 18f0 2C60     		str	r4, [r5, #0]
1757:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_ERASE;
 24373              		.loc 1 1757 0
 24374 18f2 6E60     		str	r6, [r5, #4]
1759:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 24375              		.loc 1 1759 0
 24376 18f4 EC60     		str	r4, [r5, #12]
1761:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 24377              		.loc 1 1761 0
 24378 18f6 FFF7FEFF 		bl	SDIO_SendCommand
1763:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_ERASE);
 24379              		.loc 1 1763 0
 24380 18fa 3046     		mov	r0, r6
 24381 18fc FEF7A8FB 		bl	CmdResp1Error
 24382              	.LVL417:
1765:../src/sdcard.c ****   if (errorstatus != SD_OK)
 24383              		.loc 1 1765 0
 24384 1900 2A28     		cmp	r0, #42
 24385 1902 14D1     		bne	.L318
 24386 1904 00E0     		b	.L322
 24387              	.LVL418:
 24388              	.L323:
1770:../src/sdcard.c ****   for (delay = 0; delay < maxdelay; delay++)
 24389              		.loc 1 1770 0 discriminator 2
 24390 1906 0134     		adds	r4, r4, #1
 24391              	.LVL419:
 24392              	.L322:
1770:../src/sdcard.c ****   for (delay = 0; delay < maxdelay; delay++)
 24393              		.loc 1 1770 0 is_stmt 0 discriminator 1
 24394 1908 009B     		ldr	r3, [sp, #0]
 24395 190a 9C42     		cmp	r4, r3
 24396 190c FBD3     		bcc	.L323
 24397              	.LVL420:
 24398              	.L325:
1778:../src/sdcard.c ****     errorstatus = IsCardProgramming(&cardstate);
 24399              		.loc 1 1778 0 is_stmt 1
 24400 190e 0DF10700 		add	r0, sp, #7
 24401 1912 FEF72BFC 		bl	IsCardProgramming
 24402              	.LVL421:
1776:../src/sdcard.c ****   while ((errorstatus == SD_OK) && ((SD_CARD_PROGRAMMING == cardstate) || (SD_CARD_RECEIVING == car
 24403              		.loc 1 1776 0
 24404 1916 2A28     		cmp	r0, #42
 24405 1918 09D1     		bne	.L318
1776:../src/sdcard.c ****   while ((errorstatus == SD_OK) && ((SD_CARD_PROGRAMMING == cardstate) || (SD_CARD_RECEIVING == car
 24406              		.loc 1 1776 0 is_stmt 0 discriminator 2
 24407 191a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 24408              	.LVL422:
 24409 191e 063B     		subs	r3, r3, #6
 24410              	.LVL423:
 24411 1920 DBB2     		uxtb	r3, r3
 24412 1922 012B     		cmp	r3, #1
 24413 1924 F3D9     		bls	.L325
 24414 1926 02E0     		b	.L318
 24415              	.LVL424:
 24416              	.L326:
1706:../src/sdcard.c ****     return(errorstatus);
 24417              		.loc 1 1706 0 is_stmt 1
 24418 1928 2520     		movs	r0, #37
 24419 192a 00E0     		b	.L318
 24420              	.LVL425:
 24421              	.L327:
1714:../src/sdcard.c ****     return(errorstatus);
 24422              		.loc 1 1714 0
 24423 192c 0E20     		movs	r0, #14
 24424              	.LVL426:
 24425              	.L318:
1782:../src/sdcard.c **** }
 24426              		.loc 1 1782 0
 24427 192e BDE8FC87 		pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
 24428              	.L329:
 24429 1932 00BF     		.align	2
 24430              	.L328:
 24431 1934 00000000 		.word	.LANCHOR0
 24432 1938 00800140 		.word	1073840128
 24433 193c 40190100 		.word	72000
 24434 1940 00000000 		.word	SDIO_CmdInitStructure
 24435              		.cfi_endproc
 24436              	.LFE43:
 24438              		.align	1
 24439              		.global	SD_SendStatus
 24440              		.thumb
 24441              		.thumb_func
 24443              	SD_SendStatus:
 24444              	.LFB44:
1793:../src/sdcard.c **** {
 24445              		.loc 1 1793 0
 24446              		.cfi_startproc
 24447              		@ args = 0, pretend = 0, frame = 0
 24448              		@ frame_needed = 0, uses_anonymous_args = 0
 24449              	.LVL427:
 24450 1944 70B5     		push	{r4, r5, r6, lr}
 24451              	.LCFI24:
 24452              		.cfi_def_cfa_offset 16
1796:../src/sdcard.c ****   if (pcardstatus == NULL)
 24453              		.loc 1 1796 0
 24454 1946 0546     		mov	r5, r0
 24455              		.cfi_offset 14, -4
 24456              		.cfi_offset 6, -8
 24457              		.cfi_offset 5, -12
 24458              		.cfi_offset 4, -16
 24459 1948 D0B1     		cbz	r0, .L332
1802:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) RCA << 16;
 24460              		.loc 1 1802 0
 24461 194a 0F4B     		ldr	r3, .L333
 24462 194c 0F48     		ldr	r0, .L333+4
 24463              	.LVL428:
 24464 194e 1B68     		ldr	r3, [r3, #0]
1803:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SEND_STATUS;
 24465              		.loc 1 1803 0
 24466 1950 0D24     		movs	r4, #13
1802:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) RCA << 16;
 24467              		.loc 1 1802 0
 24468 1952 1B04     		lsls	r3, r3, #16
 24469 1954 0360     		str	r3, [r0, #0]
1804:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 24470              		.loc 1 1804 0
 24471 1956 4023     		movs	r3, #64
 24472 1958 8360     		str	r3, [r0, #8]
1805:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 24473              		.loc 1 1805 0
 24474 195a 0026     		movs	r6, #0
1806:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 24475              		.loc 1 1806 0
 24476 195c 4FF48063 		mov	r3, #1024
1803:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SEND_STATUS;
 24477              		.loc 1 1803 0
 24478 1960 4460     		str	r4, [r0, #4]
1806:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 24479              		.loc 1 1806 0
 24480 1962 0361     		str	r3, [r0, #16]
1805:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 24481              		.loc 1 1805 0
 24482 1964 C660     		str	r6, [r0, #12]
1807:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 24483              		.loc 1 1807 0
 24484 1966 FFF7FEFF 		bl	SDIO_SendCommand
1810:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_SEND_STATUS);
 24485              		.loc 1 1810 0
 24486 196a 2046     		mov	r0, r4
 24487 196c FEF770FB 		bl	CmdResp1Error
1812:../src/sdcard.c ****   if (errorstatus != SD_OK)
 24488              		.loc 1 1812 0
 24489 1970 2A28     		cmp	r0, #42
1810:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_SEND_STATUS);
 24490              		.loc 1 1810 0
 24491 1972 0446     		mov	r4, r0
 24492              	.LVL429:
1812:../src/sdcard.c ****   if (errorstatus != SD_OK)
 24493              		.loc 1 1812 0
 24494 1974 05D1     		bne	.L331
1817:../src/sdcard.c ****   *pcardstatus = SDIO_GetResponse(SDIO_RESP1);
 24495              		.loc 1 1817 0
 24496 1976 3046     		mov	r0, r6
 24497              	.LVL430:
 24498 1978 FFF7FEFF 		bl	SDIO_GetResponse
 24499 197c 2860     		str	r0, [r5, #0]
1819:../src/sdcard.c ****   return(errorstatus);
 24500              		.loc 1 1819 0
 24501 197e 00E0     		b	.L331
 24502              	.LVL431:
 24503              	.L332:
1799:../src/sdcard.c ****     return(errorstatus);
 24504              		.loc 1 1799 0
 24505 1980 2624     		movs	r4, #38
 24506              	.LVL432:
 24507              	.L331:
1820:../src/sdcard.c **** }
 24508              		.loc 1 1820 0
 24509 1982 2046     		mov	r0, r4
 24510 1984 70BD     		pop	{r4, r5, r6, pc}
 24511              	.L334:
 24512 1986 00BF     		.align	2
 24513              	.L333:
 24514 1988 00000000 		.word	.LANCHOR0
 24515 198c 00000000 		.word	SDIO_CmdInitStructure
 24516              		.cfi_endproc
 24517              	.LFE44:
 24519              		.align	1
 24520              		.global	SD_SendSDStatus
 24521              		.thumb
 24522              		.thumb_func
 24524              	SD_SendSDStatus:
 24525              	.LFB45:
1831:../src/sdcard.c **** {
 24526              		.loc 1 1831 0
 24527              		.cfi_startproc
 24528              		@ args = 0, pretend = 0, frame = 0
 24529              		@ frame_needed = 0, uses_anonymous_args = 0
 24530              	.LVL433:
 24531 1990 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 24532              	.LCFI25:
 24533              		.cfi_def_cfa_offset 32
1831:../src/sdcard.c **** {
 24534              		.loc 1 1831 0
 24535 1994 0646     		mov	r6, r0
 24536              		.cfi_offset 14, -4
 24537              		.cfi_offset 9, -8
 24538              		.cfi_offset 8, -12
 24539              		.cfi_offset 7, -16
 24540              		.cfi_offset 6, -20
 24541              		.cfi_offset 5, -24
 24542              		.cfi_offset 4, -28
 24543              		.cfi_offset 3, -32
1835:../src/sdcard.c ****   if (SDIO_GetResponse(SDIO_RESP1) & SD_CARD_LOCKED)
 24544              		.loc 1 1835 0
 24545 1996 0020     		movs	r0, #0
 24546              	.LVL434:
 24547 1998 FFF7FEFF 		bl	SDIO_GetResponse
 24548 199c 10F00077 		ands	r7, r0, #33554432
 24549 19a0 40F09D80 		bne	.L348
1842:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = 64;
 24550              		.loc 1 1842 0
 24551 19a4 504C     		ldr	r4, .L351
1843:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SET_BLOCKLEN;
 24552              		.loc 1 1843 0
 24553 19a6 1025     		movs	r5, #16
1842:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = 64;
 24554              		.loc 1 1842 0
 24555 19a8 4FF04008 		mov	r8, #64
1846:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 24556              		.loc 1 1846 0
 24557 19ac 4FF48069 		mov	r9, #1024
1843:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SET_BLOCKLEN;
 24558              		.loc 1 1843 0
 24559 19b0 6560     		str	r5, [r4, #4]
1847:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 24560              		.loc 1 1847 0
 24561 19b2 2046     		mov	r0, r4
1842:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = 64;
 24562              		.loc 1 1842 0
 24563 19b4 C4F80080 		str	r8, [r4, #0]
1844:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 24564              		.loc 1 1844 0
 24565 19b8 C4F80880 		str	r8, [r4, #8]
1845:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 24566              		.loc 1 1845 0
 24567 19bc E760     		str	r7, [r4, #12]
1846:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 24568              		.loc 1 1846 0
 24569 19be C4F81090 		str	r9, [r4, #16]
1847:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 24570              		.loc 1 1847 0
 24571 19c2 FFF7FEFF 		bl	SDIO_SendCommand
1849:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_SET_BLOCKLEN);
 24572              		.loc 1 1849 0
 24573 19c6 2846     		mov	r0, r5
 24574 19c8 FEF742FB 		bl	CmdResp1Error
1851:../src/sdcard.c ****   if (errorstatus != SD_OK)
 24575              		.loc 1 1851 0
 24576 19cc 2A28     		cmp	r0, #42
1849:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_SET_BLOCKLEN);
 24577              		.loc 1 1849 0
 24578 19ce 0546     		mov	r5, r0
 24579              	.LVL435:
1851:../src/sdcard.c ****   if (errorstatus != SD_OK)
 24580              		.loc 1 1851 0
 24581 19d0 40F08680 		bne	.L336
1857:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) RCA << 16;
 24582              		.loc 1 1857 0
 24583 19d4 454B     		ldr	r3, .L351+4
1858:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_APP_CMD;
 24584              		.loc 1 1858 0
 24585 19d6 0D35     		adds	r5, r5, #13
1857:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) RCA << 16;
 24586              		.loc 1 1857 0
 24587 19d8 1B68     		ldr	r3, [r3, #0]
1858:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_APP_CMD;
 24588              		.loc 1 1858 0
 24589 19da 6560     		str	r5, [r4, #4]
1857:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = (uint32_t) RCA << 16;
 24590              		.loc 1 1857 0
 24591 19dc 1B04     		lsls	r3, r3, #16
 24592 19de 2360     		str	r3, [r4, #0]
1862:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 24593              		.loc 1 1862 0
 24594 19e0 2046     		mov	r0, r4
 24595              	.LVL436:
1859:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 24596              		.loc 1 1859 0
 24597 19e2 C4F80880 		str	r8, [r4, #8]
1860:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 24598              		.loc 1 1860 0
 24599 19e6 E760     		str	r7, [r4, #12]
1861:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 24600              		.loc 1 1861 0
 24601 19e8 C4F81090 		str	r9, [r4, #16]
1862:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 24602              		.loc 1 1862 0
 24603 19ec FFF7FEFF 		bl	SDIO_SendCommand
1863:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_APP_CMD);
 24604              		.loc 1 1863 0
 24605 19f0 2846     		mov	r0, r5
 24606 19f2 FEF72DFB 		bl	CmdResp1Error
1865:../src/sdcard.c ****   if (errorstatus != SD_OK)
 24607              		.loc 1 1865 0
 24608 19f6 2A28     		cmp	r0, #42
1863:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_APP_CMD);
 24609              		.loc 1 1863 0
 24610 19f8 0546     		mov	r5, r0
 24611              	.LVL437:
1865:../src/sdcard.c ****   if (errorstatus != SD_OK)
 24612              		.loc 1 1865 0
 24613 19fa 71D1     		bne	.L336
1870:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
 24614              		.loc 1 1870 0
 24615 19fc 3C48     		ldr	r0, .L351+8
 24616              	.LVL438:
 24617 19fe 3D4B     		ldr	r3, .L351+12
1881:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SD_APP_STAUS;
 24618              		.loc 1 1881 0
 24619 1a00 1D3D     		subs	r5, r5, #29
 24620              	.LVL439:
1870:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataTimeOut = SD_DATATIMEOUT;
 24621              		.loc 1 1870 0
 24622 1a02 0360     		str	r3, [r0, #0]
1872:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataBlockSize = SDIO_DataBlockSize_64b;
 24623              		.loc 1 1872 0
 24624 1a04 6023     		movs	r3, #96
 24625 1a06 8360     		str	r3, [r0, #8]
1873:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferDir = SDIO_TransferDir_ToSDIO;
 24626              		.loc 1 1873 0
 24627 1a08 5E3B     		subs	r3, r3, #94
 24628 1a0a C360     		str	r3, [r0, #12]
1875:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DPSM = SDIO_DPSM_Enable;
 24629              		.loc 1 1875 0
 24630 1a0c 013B     		subs	r3, r3, #1
 24631 1a0e 4361     		str	r3, [r0, #20]
1871:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_DataLength = 64;
 24632              		.loc 1 1871 0
 24633 1a10 C0F80480 		str	r8, [r0, #4]
1874:../src/sdcard.c ****   SDIO_DataInitStructure.SDIO_TransferMode = SDIO_TransferMode_Block;
 24634              		.loc 1 1874 0
 24635 1a14 0761     		str	r7, [r0, #16]
1876:../src/sdcard.c ****   SDIO_DataConfig(&SDIO_DataInitStructure);
 24636              		.loc 1 1876 0
 24637 1a16 FFF7FEFF 		bl	SDIO_DataConfig
1881:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CmdIndex = SDIO_SD_APP_STAUS;
 24638              		.loc 1 1881 0
 24639 1a1a 6560     		str	r5, [r4, #4]
1885:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 24640              		.loc 1 1885 0
 24641 1a1c 2046     		mov	r0, r4
1880:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Argument = 0;
 24642              		.loc 1 1880 0
 24643 1a1e 2760     		str	r7, [r4, #0]
1882:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Response = SDIO_Response_Short;
 24644              		.loc 1 1882 0
 24645 1a20 C4F80880 		str	r8, [r4, #8]
1883:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_Wait = SDIO_Wait_No;
 24646              		.loc 1 1883 0
 24647 1a24 E760     		str	r7, [r4, #12]
1884:../src/sdcard.c ****   SDIO_CmdInitStructure.SDIO_CPSM = SDIO_CPSM_Enable;
 24648              		.loc 1 1884 0
 24649 1a26 C4F81090 		str	r9, [r4, #16]
1885:../src/sdcard.c ****   SDIO_SendCommand(&SDIO_CmdInitStructure);
 24650              		.loc 1 1885 0
 24651 1a2a FFF7FEFF 		bl	SDIO_SendCommand
1886:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_SD_APP_STAUS);
 24652              		.loc 1 1886 0
 24653 1a2e 2846     		mov	r0, r5
 24654 1a30 FEF70EFB 		bl	CmdResp1Error
1888:../src/sdcard.c ****   if (errorstatus != SD_OK)
 24655              		.loc 1 1888 0
 24656 1a34 2A28     		cmp	r0, #42
1886:../src/sdcard.c ****   errorstatus = CmdResp1Error(SDIO_SD_APP_STAUS);
 24657              		.loc 1 1886 0
 24658 1a36 0546     		mov	r5, r0
 24659              	.LVL440:
1888:../src/sdcard.c ****   if (errorstatus != SD_OK)
 24660              		.loc 1 1888 0
 24661 1a38 52D1     		bne	.L336
 24662 1a3a 0BE0     		b	.L350
 24663              	.LVL441:
 24664              	.L340:
1895:../src/sdcard.c ****     if (SDIO_GetFlagStatus(SDIO_FLAG_RXFIFOHF) != RESET)
 24665              		.loc 1 1895 0
 24666 1a3c 4FF40040 		mov	r0, #32768
 24667 1a40 FFF7FEFF 		bl	SDIO_GetFlagStatus
 24668 1a44 30B1     		cbz	r0, .L350
 24669              	.L339:
1899:../src/sdcard.c ****         *(psdstatus + count) = SDIO_ReadData();
 24670              		.loc 1 1899 0 discriminator 2
 24671 1a46 FFF7FEFF 		bl	SDIO_ReadData
 24672 1a4a 3051     		str	r0, [r6, r4]
 24673 1a4c 0434     		adds	r4, r4, #4
1897:../src/sdcard.c ****       for (count = 0; count < 8; count++)
 24674              		.loc 1 1897 0 discriminator 2
 24675 1a4e 202C     		cmp	r4, #32
 24676 1a50 F9D1     		bne	.L339
1901:../src/sdcard.c ****       psdstatus += 8;
 24677              		.loc 1 1901 0
 24678 1a52 2036     		adds	r6, r6, #32
 24679              	.LVL442:
 24680              	.L350:
1893:../src/sdcard.c ****   while (!(SDIO->STA &(SDIO_FLAG_RXOVERR | SDIO_FLAG_DCRCFAIL | SDIO_FLAG_DTIMEOUT | SDIO_FLAG_DBCK
 24681              		.loc 1 1893 0 discriminator 1
 24682 1a54 284B     		ldr	r3, .L351+16
 24683 1a56 40F22A64 		movw	r4, #1578
 24684 1a5a 5B6B     		ldr	r3, [r3, #52]
 24685 1a5c 03EA0404 		and	r4, r3, r4
 24686 1a60 002C     		cmp	r4, #0
 24687 1a62 EBD0     		beq	.L340
1905:../src/sdcard.c ****   if (SDIO_GetFlagStatus(SDIO_FLAG_DTIMEOUT) != RESET)
 24688              		.loc 1 1905 0
 24689 1a64 0820     		movs	r0, #8
 24690 1a66 FFF7FEFF 		bl	SDIO_GetFlagStatus
 24691 1a6a 20B1     		cbz	r0, .L341
1907:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_DTIMEOUT);
 24692              		.loc 1 1907 0
 24693 1a6c 0820     		movs	r0, #8
 24694 1a6e FFF7FEFF 		bl	SDIO_ClearFlag
 24695              	.LVL443:
1909:../src/sdcard.c ****     return(errorstatus);
 24696              		.loc 1 1909 0
 24697 1a72 0425     		movs	r5, #4
 24698 1a74 34E0     		b	.L336
 24699              	.LVL444:
 24700              	.L341:
1911:../src/sdcard.c ****   else if (SDIO_GetFlagStatus(SDIO_FLAG_DCRCFAIL) != RESET)
 24701              		.loc 1 1911 0
 24702 1a76 0220     		movs	r0, #2
 24703 1a78 FFF7FEFF 		bl	SDIO_GetFlagStatus
 24704 1a7c 20B1     		cbz	r0, .L342
1913:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_DCRCFAIL);
 24705              		.loc 1 1913 0
 24706 1a7e 0220     		movs	r0, #2
 24707 1a80 FFF7FEFF 		bl	SDIO_ClearFlag
 24708              	.LVL445:
1915:../src/sdcard.c ****     return(errorstatus);
 24709              		.loc 1 1915 0
 24710 1a84 0225     		movs	r5, #2
 24711 1a86 2BE0     		b	.L336
 24712              	.LVL446:
 24713              	.L342:
1917:../src/sdcard.c ****   else if (SDIO_GetFlagStatus(SDIO_FLAG_RXOVERR) != RESET)
 24714              		.loc 1 1917 0
 24715 1a88 2020     		movs	r0, #32
 24716 1a8a FFF7FEFF 		bl	SDIO_GetFlagStatus
 24717 1a8e 20B1     		cbz	r0, .L343
1919:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_RXOVERR);
 24718              		.loc 1 1919 0
 24719 1a90 2020     		movs	r0, #32
 24720 1a92 FFF7FEFF 		bl	SDIO_ClearFlag
 24721              	.LVL447:
1921:../src/sdcard.c ****     return(errorstatus);
 24722              		.loc 1 1921 0
 24723 1a96 0625     		movs	r5, #6
 24724 1a98 22E0     		b	.L336
 24725              	.LVL448:
 24726              	.L343:
1923:../src/sdcard.c ****   else if (SDIO_GetFlagStatus(SDIO_FLAG_STBITERR) != RESET)
 24727              		.loc 1 1923 0
 24728 1a9a 4FF40070 		mov	r0, #512
 24729 1a9e FFF7FEFF 		bl	SDIO_GetFlagStatus
 24730 1aa2 48B1     		cbz	r0, .L345
1925:../src/sdcard.c ****     SDIO_ClearFlag(SDIO_FLAG_STBITERR);
 24731              		.loc 1 1925 0
 24732 1aa4 4FF40070 		mov	r0, #512
 24733 1aa8 FFF7FEFF 		bl	SDIO_ClearFlag
 24734              	.LVL449:
1927:../src/sdcard.c ****     return(errorstatus);
 24735              		.loc 1 1927 0
 24736 1aac 0725     		movs	r5, #7
 24737 1aae 17E0     		b	.L336
 24738              	.LVL450:
 24739              	.L346:
1932:../src/sdcard.c ****     *psdstatus = SDIO_ReadData();
 24740              		.loc 1 1932 0
 24741 1ab0 FFF7FEFF 		bl	SDIO_ReadData
 24742 1ab4 46F8040B 		str	r0, [r6], #4
 24743              	.LVL451:
 24744              	.L345:
1930:../src/sdcard.c ****   while (SDIO_GetFlagStatus(SDIO_FLAG_RXDAVL) != RESET)
 24745              		.loc 1 1930 0 discriminator 1
 24746 1ab8 4FF40010 		mov	r0, #2097152
 24747 1abc FFF7FEFF 		bl	SDIO_GetFlagStatus
 24748 1ac0 0028     		cmp	r0, #0
 24749 1ac2 F5D1     		bne	.L346
1937:../src/sdcard.c ****   SDIO_ClearFlag(SDIO_STATIC_FLAGS);
 24750              		.loc 1 1937 0
 24751 1ac4 40F2FF50 		movw	r0, #1535
 24752 1ac8 FFF7FEFF 		bl	SDIO_ClearFlag
 24753              	.LVL452:
1938:../src/sdcard.c ****   psdstatus -= 16;
 24754              		.loc 1 1938 0
 24755 1acc A6F14003 		sub	r3, r6, #64
 24756              	.LVL453:
 24757              	.L347:
1941:../src/sdcard.c ****     psdstatus[count] = ((psdstatus[count] & SD_0TO7BITS) << 24) |((psdstatus[count] & SD_8TO15BITS)
 24758              		.loc 1 1941 0 discriminator 2
 24759 1ad0 1A68     		ldr	r2, [r3, #0]
 24760 1ad2 12BA     		rev	r2, r2
 24761 1ad4 43F8042B 		str	r2, [r3], #4
1939:../src/sdcard.c ****   for (count = 0; count < 16; count++)
 24762              		.loc 1 1939 0 discriminator 2
 24763 1ad8 B342     		cmp	r3, r6
 24764 1ada F9D1     		bne	.L347
 24765 1adc 00E0     		b	.L336
 24766              	.LVL454:
 24767              	.L348:
1838:../src/sdcard.c ****     return(errorstatus);
 24768              		.loc 1 1838 0
 24769 1ade 0E25     		movs	r5, #14
 24770              	.LVL455:
 24771              	.L336:
1945:../src/sdcard.c **** }
 24772              		.loc 1 1945 0
 24773 1ae0 2846     		mov	r0, r5
 24774 1ae2 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 24775              	.L352:
 24776 1ae6 00BF     		.align	2
 24777              	.L351:
 24778 1ae8 00000000 		.word	SDIO_CmdInitStructure
 24779 1aec 00000000 		.word	.LANCHOR0
 24780 1af0 00000000 		.word	SDIO_DataInitStructure
 24781 1af4 FFFF0F00 		.word	1048575
 24782 1af8 00800140 		.word	1073840128
 24783              		.cfi_endproc
 24784              	.LFE45:
 24786              		.align	1
 24787              		.global	SD_ProcessIRQSrc
 24788              		.thumb
 24789              		.thumb_func
 24791              	SD_ProcessIRQSrc:
 24792              	.LFB46:
1955:../src/sdcard.c **** {
 24793              		.loc 1 1955 0
 24794              		.cfi_startproc
 24795              		@ args = 0, pretend = 0, frame = 0
 24796              		@ frame_needed = 0, uses_anonymous_args = 0
 24797              	.LVL456:
 24798 1afc 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 24799              	.LCFI26:
 24800              		.cfi_def_cfa_offset 24
1958:../src/sdcard.c ****   if (DeviceMode == SD_INTERRUPT_MODE)
 24801              		.loc 1 1958 0
 24802 1b00 734C     		ldr	r4, .L376
 24803              		.cfi_offset 14, -4
 24804              		.cfi_offset 8, -8
 24805              		.cfi_offset 7, -12
 24806              		.cfi_offset 6, -16
 24807              		.cfi_offset 5, -20
 24808              		.cfi_offset 4, -24
 24809 1b02 2368     		ldr	r3, [r4, #0]
 24810 1b04 012B     		cmp	r3, #1
 24811 1b06 4DD1     		bne	.L354
1960:../src/sdcard.c ****     if (SDIO_GetITStatus(SDIO_IT_RXFIFOHF) != RESET)
 24812              		.loc 1 1960 0
 24813 1b08 4FF40040 		mov	r0, #32768
 24814 1b0c FFF7FEFF 		bl	SDIO_GetITStatus
 24815 1b10 0646     		mov	r6, r0
 24816 1b12 80B1     		cbz	r0, .L355
1960:../src/sdcard.c ****     if (SDIO_GetITStatus(SDIO_IT_RXFIFOHF) != RESET)
 24817              		.loc 1 1960 0 is_stmt 0 discriminator 2
 24818 1b14 0025     		movs	r5, #0
 24819              	.LVL457:
 24820              	.L356:
1964:../src/sdcard.c ****         *(DestBuffer + count) = SDIO_ReadData();
 24821              		.loc 1 1964 0 is_stmt 1 discriminator 2
 24822 1b16 6F4E     		ldr	r6, .L376+4
 24823 1b18 3768     		ldr	r7, [r6, #0]
 24824 1b1a FFF7FEFF 		bl	SDIO_ReadData
 24825 1b1e 7851     		str	r0, [r7, r5]
 24826 1b20 0435     		adds	r5, r5, #4
1962:../src/sdcard.c ****       for (count = 0; count < SD_HALFFIFO; count++)
 24827              		.loc 1 1962 0 discriminator 2
 24828 1b22 202D     		cmp	r5, #32
 24829 1b24 F7D1     		bne	.L356
1966:../src/sdcard.c ****       DestBuffer += SD_HALFFIFO;
 24830              		.loc 1 1966 0
 24831 1b26 3368     		ldr	r3, [r6, #0]
 24832 1b28 2033     		adds	r3, r3, #32
 24833 1b2a 3360     		str	r3, [r6, #0]
1967:../src/sdcard.c ****       NumberOfBytes += SD_HALFFIFOBYTES;
 24834              		.loc 1 1967 0
 24835 1b2c 6A4B     		ldr	r3, .L376+8
 24836 1b2e 5A6B     		ldr	r2, [r3, #52]
 24837 1b30 2032     		adds	r2, r2, #32
 24838 1b32 5A63     		str	r2, [r3, #52]
 24839 1b34 36E0     		b	.L354
 24840              	.LVL458:
 24841              	.L355:
1969:../src/sdcard.c ****     else if (SDIO_GetITStatus(SDIO_IT_TXFIFOHE) != RESET)
 24842              		.loc 1 1969 0
 24843 1b36 4FF48040 		mov	r0, #16384
 24844 1b3a FFF7FEFF 		bl	SDIO_GetITStatus
 24845 1b3e 0028     		cmp	r0, #0
 24846 1b40 30D0     		beq	.L354
1971:../src/sdcard.c ****       if ((TotalNumberOfBytes - NumberOfBytes) < SD_HALFFIFOBYTES)
 24847              		.loc 1 1971 0
 24848 1b42 654D     		ldr	r5, .L376+8
 24849 1b44 EB6A     		ldr	r3, [r5, #44]
 24850 1b46 6A6B     		ldr	r2, [r5, #52]
 24851 1b48 9A1A     		subs	r2, r3, r2
 24852 1b4a 1F2A     		cmp	r2, #31
 24853 1b4c 1CD8     		bhi	.L362
1973:../src/sdcard.c ****         restwords = ((TotalNumberOfBytes - NumberOfBytes) %  4 == 0) ?
 24854              		.loc 1 1973 0
 24855 1b4e 6A6B     		ldr	r2, [r5, #52]
 24856 1b50 9A1A     		subs	r2, r3, r2
1974:../src/sdcard.c ****                     ((TotalNumberOfBytes - NumberOfBytes) / 4) :
 24857              		.loc 1 1974 0
 24858 1b52 12F0030F 		tst	r2, #3
 24859 1b56 6A6B     		ldr	r2, [r5, #52]
 24860 1b58 C2EB0308 		rsb	r8, r2, r3
 24861 1b5c 4FEA9808 		lsr	r8, r8, #2
 24862 1b60 18BF     		it	ne
 24863 1b62 08F10108 		addne	r8, r8, #1
 24864              	.LVL459:
1977:../src/sdcard.c ****         for (count = 0; count < restwords;  count++, SrcBuffer++, NumberOfBytes += 4)
 24865              		.loc 1 1977 0
 24866 1b66 0026     		movs	r6, #0
 24867 1b68 0BE0     		b	.L360
 24868              	.LVL460:
 24869              	.L361:
1979:../src/sdcard.c ****           SDIO_WriteData(*SrcBuffer);
 24870              		.loc 1 1979 0 discriminator 2
 24871 1b6a 5C4F     		ldr	r7, .L376+12
1977:../src/sdcard.c ****         for (count = 0; count < restwords;  count++, SrcBuffer++, NumberOfBytes += 4)
 24872              		.loc 1 1977 0 discriminator 2
 24873 1b6c 0136     		adds	r6, r6, #1
 24874              	.LVL461:
1979:../src/sdcard.c ****           SDIO_WriteData(*SrcBuffer);
 24875              		.loc 1 1979 0 discriminator 2
 24876 1b6e 3B68     		ldr	r3, [r7, #0]
 24877 1b70 1868     		ldr	r0, [r3, #0]
 24878 1b72 FFF7FEFF 		bl	SDIO_WriteData
 24879              	.LVL462:
1977:../src/sdcard.c ****         for (count = 0; count < restwords;  count++, SrcBuffer++, NumberOfBytes += 4)
 24880              		.loc 1 1977 0 discriminator 2
 24881 1b76 3B68     		ldr	r3, [r7, #0]
 24882 1b78 0433     		adds	r3, r3, #4
 24883 1b7a 3B60     		str	r3, [r7, #0]
 24884 1b7c 6B6B     		ldr	r3, [r5, #52]
 24885 1b7e 0433     		adds	r3, r3, #4
 24886 1b80 6B63     		str	r3, [r5, #52]
 24887              	.LVL463:
 24888              	.L360:
1977:../src/sdcard.c ****         for (count = 0; count < restwords;  count++, SrcBuffer++, NumberOfBytes += 4)
 24889              		.loc 1 1977 0 is_stmt 0 discriminator 1
 24890 1b82 4645     		cmp	r6, r8
 24891 1b84 F1D3     		bcc	.L361
 24892 1b86 0DE0     		b	.L354
 24893              	.LVL464:
 24894              	.L362:
1986:../src/sdcard.c ****           SDIO_WriteData(*(SrcBuffer + count));
 24895              		.loc 1 1986 0 is_stmt 1 discriminator 2
 24896 1b88 544F     		ldr	r7, .L376+12
 24897 1b8a 3B68     		ldr	r3, [r7, #0]
 24898 1b8c 9859     		ldr	r0, [r3, r6]
 24899 1b8e 0436     		adds	r6, r6, #4
 24900 1b90 FFF7FEFF 		bl	SDIO_WriteData
1984:../src/sdcard.c ****         for (count = 0; count < SD_HALFFIFO; count++)
 24901              		.loc 1 1984 0 discriminator 2
 24902 1b94 202E     		cmp	r6, #32
 24903 1b96 F7D1     		bne	.L362
1989:../src/sdcard.c ****         SrcBuffer += SD_HALFFIFO;
 24904              		.loc 1 1989 0
 24905 1b98 3B68     		ldr	r3, [r7, #0]
 24906 1b9a 2033     		adds	r3, r3, #32
 24907 1b9c 3B60     		str	r3, [r7, #0]
1990:../src/sdcard.c ****         NumberOfBytes += SD_HALFFIFOBYTES;
 24908              		.loc 1 1990 0
 24909 1b9e 6B6B     		ldr	r3, [r5, #52]
 24910 1ba0 2033     		adds	r3, r3, #32
 24911 1ba2 6B63     		str	r3, [r5, #52]
 24912              	.LVL465:
 24913              	.L354:
1995:../src/sdcard.c ****   if (SDIO_GetITStatus(SDIO_IT_DATAEND) != RESET)
 24914              		.loc 1 1995 0
 24915 1ba4 4FF48070 		mov	r0, #256
 24916 1ba8 FFF7FEFF 		bl	SDIO_GetITStatus
 24917 1bac 0546     		mov	r5, r0
 24918 1bae 0028     		cmp	r0, #0
 24919 1bb0 33D0     		beq	.L363
1997:../src/sdcard.c ****     if (DeviceMode != SD_DMA_MODE)
 24920              		.loc 1 1997 0
 24921 1bb2 2368     		ldr	r3, [r4, #0]
 24922 1bb4 484D     		ldr	r5, .L376+8
 24923 1bb6 6BB9     		cbnz	r3, .L364
 24924 1bb8 16E0     		b	.L365
 24925              	.L366:
2001:../src/sdcard.c ****         *DestBuffer = SDIO_ReadData();
 24926              		.loc 1 2001 0
 24927 1bba 464E     		ldr	r6, .L376+4
 24928 1bbc D6F80080 		ldr	r8, [r6, #0]
 24929 1bc0 FFF7FEFF 		bl	SDIO_ReadData
2002:../src/sdcard.c ****         DestBuffer++;
 24930              		.loc 1 2002 0
 24931 1bc4 3368     		ldr	r3, [r6, #0]
2001:../src/sdcard.c ****         *DestBuffer = SDIO_ReadData();
 24932              		.loc 1 2001 0
 24933 1bc6 C8F80000 		str	r0, [r8, #0]
2002:../src/sdcard.c ****         DestBuffer++;
 24934              		.loc 1 2002 0
 24935 1bca 0433     		adds	r3, r3, #4
 24936 1bcc 3360     		str	r3, [r6, #0]
2003:../src/sdcard.c ****         NumberOfBytes += 4;
 24937              		.loc 1 2003 0
 24938 1bce 7B6B     		ldr	r3, [r7, #52]
 24939 1bd0 0433     		adds	r3, r3, #4
 24940 1bd2 7B63     		str	r3, [r7, #52]
 24941              	.L364:
1999:../src/sdcard.c ****       while ((SDIO_GetFlagStatus(SDIO_FLAG_RXDAVL) != RESET)  &&  (NumberOfBytes < TotalNumberOfByt
 24942              		.loc 1 1999 0 discriminator 1
 24943 1bd4 4FF40010 		mov	r0, #2097152
 24944 1bd8 FFF7FEFF 		bl	SDIO_GetFlagStatus
 24945 1bdc 20B1     		cbz	r0, .L365
1999:../src/sdcard.c ****       while ((SDIO_GetFlagStatus(SDIO_FLAG_RXDAVL) != RESET)  &&  (NumberOfBytes < TotalNumberOfByt
 24946              		.loc 1 1999 0 is_stmt 0 discriminator 2
 24947 1bde 6A6B     		ldr	r2, [r5, #52]
 24948 1be0 EB6A     		ldr	r3, [r5, #44]
 24949 1be2 3D4F     		ldr	r7, .L376+8
 24950 1be4 9A42     		cmp	r2, r3
 24951 1be6 E8D3     		bcc	.L366
 24952              	.L365:
2007:../src/sdcard.c ****     if (StopCondition == 1)
 24953              		.loc 1 2007 0 is_stmt 1
 24954 1be8 2B6B     		ldr	r3, [r5, #48]
 24955 1bea 012B     		cmp	r3, #1
 24956 1bec 03D1     		bne	.L367
2009:../src/sdcard.c ****       TransferError = SD_StopTransfer();
 24957              		.loc 1 2009 0
 24958 1bee FFF7FEFF 		bl	SD_StopTransfer
 24959 1bf2 2071     		strb	r0, [r4, #4]
 24960 1bf4 01E0     		b	.L368
 24961              	.L367:
2013:../src/sdcard.c ****       TransferError = SD_OK;
 24962              		.loc 1 2013 0
 24963 1bf6 2A23     		movs	r3, #42
 24964 1bf8 2371     		strb	r3, [r4, #4]
 24965              	.L368:
2015:../src/sdcard.c ****     SDIO_ClearITPendingBit(SDIO_IT_DATAEND);
 24966              		.loc 1 2015 0
 24967 1bfa 4FF48070 		mov	r0, #256
 24968 1bfe FFF7FEFF 		bl	SDIO_ClearITPendingBit
2016:../src/sdcard.c ****     SDIO_ITConfig(SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_DATAEND |
 24969              		.loc 1 2016 0
 24970 1c02 4CF23A30 		movw	r0, #49978
 24971 1c06 0021     		movs	r1, #0
 24972 1c08 FFF7FEFF 		bl	SDIO_ITConfig
2019:../src/sdcard.c ****     TransferEnd = 1;
 24973              		.loc 1 2019 0
 24974 1c0c 0123     		movs	r3, #1
 24975 1c0e AB62     		str	r3, [r5, #40]
2020:../src/sdcard.c ****     NumberOfBytes = 0;
 24976              		.loc 1 2020 0
 24977 1c10 013B     		subs	r3, r3, #1
 24978 1c12 6B63     		str	r3, [r5, #52]
2021:../src/sdcard.c ****     return(TransferError);
 24979              		.loc 1 2021 0
 24980 1c14 2079     		ldrb	r0, [r4, #4]	@ zero_extendqisi2
 24981 1c16 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 24982              	.L363:
2024:../src/sdcard.c ****   if (SDIO_GetITStatus(SDIO_IT_DCRCFAIL) != RESET)
 24983              		.loc 1 2024 0
 24984 1c1a 0220     		movs	r0, #2
 24985 1c1c FFF7FEFF 		bl	SDIO_GetITStatus
 24986 1c20 0646     		mov	r6, r0
 24987 1c22 58B1     		cbz	r0, .L370
2026:../src/sdcard.c ****     SDIO_ClearITPendingBit(SDIO_IT_DCRCFAIL);
 24988              		.loc 1 2026 0
 24989 1c24 0220     		movs	r0, #2
 24990 1c26 FFF7FEFF 		bl	SDIO_ClearITPendingBit
2027:../src/sdcard.c ****     SDIO_ITConfig(SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_DATAEND |
 24991              		.loc 1 2027 0
 24992 1c2a 4CF23A30 		movw	r0, #49978
 24993 1c2e 2946     		mov	r1, r5
 24994 1c30 FFF7FEFF 		bl	SDIO_ITConfig
2030:../src/sdcard.c ****     NumberOfBytes = 0;
 24995              		.loc 1 2030 0
 24996 1c34 284B     		ldr	r3, .L376+8
2031:../src/sdcard.c ****     TransferError = SD_DATA_CRC_FAIL;
 24997              		.loc 1 2031 0
 24998 1c36 0220     		movs	r0, #2
2030:../src/sdcard.c ****     NumberOfBytes = 0;
 24999              		.loc 1 2030 0
 25000 1c38 5D63     		str	r5, [r3, #52]
 25001 1c3a 43E0     		b	.L375
 25002              	.L370:
2035:../src/sdcard.c ****   if (SDIO_GetITStatus(SDIO_IT_DTIMEOUT) != RESET)
 25003              		.loc 1 2035 0
 25004 1c3c 0820     		movs	r0, #8
 25005 1c3e FFF7FEFF 		bl	SDIO_GetITStatus
 25006 1c42 0546     		mov	r5, r0
 25007 1c44 58B1     		cbz	r0, .L371
2037:../src/sdcard.c ****     SDIO_ClearITPendingBit(SDIO_IT_DTIMEOUT);
 25008              		.loc 1 2037 0
 25009 1c46 0820     		movs	r0, #8
 25010 1c48 FFF7FEFF 		bl	SDIO_ClearITPendingBit
2038:../src/sdcard.c ****     SDIO_ITConfig(SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_DATAEND |
 25011              		.loc 1 2038 0
 25012 1c4c 4CF23A30 		movw	r0, #49978
 25013 1c50 3146     		mov	r1, r6
 25014 1c52 FFF7FEFF 		bl	SDIO_ITConfig
2041:../src/sdcard.c ****     NumberOfBytes = 0;
 25015              		.loc 1 2041 0
 25016 1c56 204B     		ldr	r3, .L376+8
2042:../src/sdcard.c ****     TransferError = SD_DATA_TIMEOUT;
 25017              		.loc 1 2042 0
 25018 1c58 0420     		movs	r0, #4
2041:../src/sdcard.c ****     NumberOfBytes = 0;
 25019              		.loc 1 2041 0
 25020 1c5a 5E63     		str	r6, [r3, #52]
 25021 1c5c 32E0     		b	.L375
 25022              	.L371:
2046:../src/sdcard.c ****   if (SDIO_GetITStatus(SDIO_IT_RXOVERR) != RESET)
 25023              		.loc 1 2046 0
 25024 1c5e 2020     		movs	r0, #32
 25025 1c60 FFF7FEFF 		bl	SDIO_GetITStatus
 25026 1c64 0646     		mov	r6, r0
 25027 1c66 58B1     		cbz	r0, .L372
2048:../src/sdcard.c ****     SDIO_ClearITPendingBit(SDIO_IT_RXOVERR);
 25028              		.loc 1 2048 0
 25029 1c68 2020     		movs	r0, #32
 25030 1c6a FFF7FEFF 		bl	SDIO_ClearITPendingBit
2049:../src/sdcard.c ****     SDIO_ITConfig(SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_DATAEND |
 25031              		.loc 1 2049 0
 25032 1c6e 4CF23A30 		movw	r0, #49978
 25033 1c72 2946     		mov	r1, r5
 25034 1c74 FFF7FEFF 		bl	SDIO_ITConfig
2052:../src/sdcard.c ****     NumberOfBytes = 0;
 25035              		.loc 1 2052 0
 25036 1c78 174B     		ldr	r3, .L376+8
2053:../src/sdcard.c ****     TransferError = SD_RX_OVERRUN;
 25037              		.loc 1 2053 0
 25038 1c7a 0620     		movs	r0, #6
2052:../src/sdcard.c ****     NumberOfBytes = 0;
 25039              		.loc 1 2052 0
 25040 1c7c 5D63     		str	r5, [r3, #52]
 25041 1c7e 21E0     		b	.L375
 25042              	.L372:
2057:../src/sdcard.c ****   if (SDIO_GetITStatus(SDIO_IT_TXUNDERR) != RESET)
 25043              		.loc 1 2057 0
 25044 1c80 1020     		movs	r0, #16
 25045 1c82 FFF7FEFF 		bl	SDIO_GetITStatus
 25046 1c86 0546     		mov	r5, r0
 25047 1c88 58B1     		cbz	r0, .L373
2059:../src/sdcard.c ****     SDIO_ClearITPendingBit(SDIO_IT_TXUNDERR);
 25048              		.loc 1 2059 0
 25049 1c8a 1020     		movs	r0, #16
 25050 1c8c FFF7FEFF 		bl	SDIO_ClearITPendingBit
2060:../src/sdcard.c ****     SDIO_ITConfig(SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_DATAEND |
 25051              		.loc 1 2060 0
 25052 1c90 4CF23A30 		movw	r0, #49978
 25053 1c94 3146     		mov	r1, r6
 25054 1c96 FFF7FEFF 		bl	SDIO_ITConfig
2063:../src/sdcard.c ****     NumberOfBytes = 0;
 25055              		.loc 1 2063 0
 25056 1c9a 0F4B     		ldr	r3, .L376+8
2064:../src/sdcard.c ****     TransferError = SD_TX_UNDERRUN;
 25057              		.loc 1 2064 0
 25058 1c9c 0520     		movs	r0, #5
2063:../src/sdcard.c ****     NumberOfBytes = 0;
 25059              		.loc 1 2063 0
 25060 1c9e 5E63     		str	r6, [r3, #52]
 25061 1ca0 10E0     		b	.L375
 25062              	.L373:
2068:../src/sdcard.c ****   if (SDIO_GetITStatus(SDIO_IT_STBITERR) != RESET)
 25063              		.loc 1 2068 0
 25064 1ca2 4FF40070 		mov	r0, #512
 25065 1ca6 FFF7FEFF 		bl	SDIO_GetITStatus
 25066 1caa 70B1     		cbz	r0, .L374
2070:../src/sdcard.c ****     SDIO_ClearITPendingBit(SDIO_IT_STBITERR);
 25067              		.loc 1 2070 0
 25068 1cac 4FF40070 		mov	r0, #512
 25069 1cb0 FFF7FEFF 		bl	SDIO_ClearITPendingBit
2071:../src/sdcard.c ****     SDIO_ITConfig(SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_DATAEND |
 25070              		.loc 1 2071 0
 25071 1cb4 4CF23A30 		movw	r0, #49978
 25072 1cb8 2946     		mov	r1, r5
 25073 1cba FFF7FEFF 		bl	SDIO_ITConfig
2074:../src/sdcard.c ****     NumberOfBytes = 0;
 25074              		.loc 1 2074 0
 25075 1cbe 064B     		ldr	r3, .L376+8
2075:../src/sdcard.c ****     TransferError = SD_START_BIT_ERR;
 25076              		.loc 1 2075 0
 25077 1cc0 0720     		movs	r0, #7
2074:../src/sdcard.c ****     NumberOfBytes = 0;
 25078              		.loc 1 2074 0
 25079 1cc2 5D63     		str	r5, [r3, #52]
 25080              	.L375:
2075:../src/sdcard.c ****     TransferError = SD_START_BIT_ERR;
 25081              		.loc 1 2075 0
 25082 1cc4 2071     		strb	r0, [r4, #4]
2076:../src/sdcard.c ****     return(SD_START_BIT_ERR);
 25083              		.loc 1 2076 0
 25084 1cc6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 25085              	.L374:
2079:../src/sdcard.c ****   return(SD_OK);
 25086              		.loc 1 2079 0
 25087 1cca 2A20     		movs	r0, #42
2080:../src/sdcard.c **** }
 25088              		.loc 1 2080 0
 25089 1ccc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 25090              	.L377:
 25091              		.align	2
 25092              	.L376:
 25093 1cd0 00000000 		.word	.LANCHOR1
 25094 1cd4 00000000 		.word	DestBuffer
 25095 1cd8 00000000 		.word	.LANCHOR0
 25096 1cdc 00000000 		.word	SrcBuffer
 25097              		.cfi_endproc
 25098              	.LFE46:
 25100              		.global	TransferError
 25101              		.global	TransferEnd
 25102              		.global	NumberOfBytes
 25103              		.comm	SrcBuffer,4,4
 25104              		.comm	DestBuffer,4,4
 25105              		.comm	SDIO_InitStructure,24,4
 25106              		.comm	SDIO_CmdInitStructure,20,4
 25107              		.comm	SDIO_DataInitStructure,24,4
 25108              		.data
 25109              		.align	2
 25110              		.set	.LANCHOR1,. + 0
 25113              	DeviceMode:
 25114 0000 02000000 		.word	2
 25117              	TransferError:
 25118 0004 2A       		.byte	42
 25119 0005 000000   		.bss
 25120              		.align	2
 25121              		.set	.LANCHOR0,. + 0
 25124              	RCA:
 25125 0000 00000000 		.space	4
 25128              	CardType:
 25129 0004 00000000 		.space	4
 25132              	CID_Tab:
 25133 0008 00000000 		.space	16
 25133      00000000 
 25133      00000000 
 25133      00000000 
 25136              	CSD_Tab:
 25137 0018 00000000 		.space	16
 25137      00000000 
 25137      00000000 
 25137      00000000 
 25140              	TransferEnd:
 25141 0028 00000000 		.space	4
 25144              	TotalNumberOfBytes:
 25145 002c 00000000 		.space	4
 25148              	StopCondition:
 25149 0030 00000000 		.space	4
 25152              	NumberOfBytes:
 25153 0034 00000000 		.space	4
 25154              		.text
 25155              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 sdcard.c
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:19535  .text:00000000 $t
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:19539  .text:00000000 convert_from_bytes_to_power_of_two
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:19578  .text:00000012 CmdResp2Error
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:19634  .text:0000004c $d
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:19638  .text:00000050 $t
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:19642  .text:00000050 CmdResp1Error
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:19888  .text:00000164 $d
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:19893  .text:0000016c $t
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:19897  .text:0000016c IsCardProgramming
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:20173  .text:000002e4 $d
                            *COM*:00000014 SDIO_CmdInitStructure
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:20180  .text:000002f4 $t
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:20184  .text:000002f4 DMA_TxConfiguration
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:20268  .text:0000034c $d
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:20274  .text:00000358 $t
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:20278  .text:00000358 DMA_RxConfiguration
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:20358  .text:000003ac $d
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:20364  .text:000003b8 $t
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:20368  .text:000003b8 SDEnWideBus
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:20712  .text:00000590 $d
                            *COM*:00000018 SDIO_DataInitStructure
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:20720  .text:000005a4 $t
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:20725  .text:000005a4 SD_PowerON
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:21098  .text:0000075c $d
                            *COM*:00000018 SDIO_InitStructure
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:21105  .text:0000076c $t
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:21110  .text:0000076c SD_PowerOFF
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:21138  .text:00000778 SD_InitializeCards
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:21402  .text:000008c0 $d
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:21408  .text:000008cc $t
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:21413  .text:000008cc SD_Init
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:21515  .text:00000944 $d
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:21521  .text:00000950 $t
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:21526  .text:00000950 SD_GetCardInfo
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:21983  .text:00000bd0 $d
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:21987  .text:00000bd4 $t
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:21992  .text:00000bd4 SD_EnableWideBusOperation
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:22098  .text:00000c3c $d
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:22103  .text:00000c44 $t
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:22108  .text:00000c44 SD_SetDeviceMode
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:22136  .text:00000c54 $d
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:22140  .text:00000c58 $t
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:22145  .text:00000c58 SD_SelectDeselect
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:22193  .text:00000c80 $d
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:22197  .text:00000c84 $t
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:22202  .text:00000c84 SD_ReadBlock
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:22568  .text:00000ea0 $d
                            *COM*:00000004 DestBuffer
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:22579  .text:00000ec0 $t
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:22584  .text:00000ec0 SD_ReadMultiBlocks
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:23026  .text:00001144 $d
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:23037  .text:00001164 $t
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:23042  .text:00001164 SD_WriteBlock
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:23547  .text:00001460 $d
                            *COM*:00000004 SrcBuffer
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:23558  .text:00001480 $t
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:23572  .text:00001488 SD_WriteMultiBlocks
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:24054  .text:0000177c $d
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:24063  .text:00001798 $t
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:24137  .text:00001800 $d
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:24142  .text:00001808 $t
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:24147  .text:00001808 SD_GetTransferState
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:24167  .text:00001818 $d
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:24171  .text:0000181c $t
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:24176  .text:0000181c SD_StopTransfer
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:24219  .text:00001844 $d
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:24223  .text:00001848 $t
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:24228  .text:00001848 SD_Erase
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:24431  .text:00001934 $d
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:24438  .text:00001944 $t
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:24443  .text:00001944 SD_SendStatus
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:24514  .text:00001988 $d
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:24519  .text:00001990 $t
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:24524  .text:00001990 SD_SendSDStatus
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:24778  .text:00001ae8 $d
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:24786  .text:00001afc $t
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:24791  .text:00001afc SD_ProcessIRQSrc
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:25093  .text:00001cd0 $d
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:25117  .data:00000004 TransferError
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:25140  .bss:00000028 TransferEnd
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:25152  .bss:00000034 NumberOfBytes
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:25109  .data:00000000 $d
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:25113  .data:00000000 DeviceMode
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:25120  .bss:00000000 $d
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:25124  .bss:00000000 RCA
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:25128  .bss:00000004 CardType
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:25132  .bss:00000008 CID_Tab
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:25136  .bss:00000018 CSD_Tab
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:25144  .bss:0000002c TotalNumberOfBytes
C:\DOCUME~1\Przemek\USTAWI~1\Temp\ccmYFFP0.s:25148  .bss:00000030 StopCondition
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
SDIO_ClearFlag
SDIO_GetCommandResponse
SDIO_GetResponse
SDIO_SendCommand
DMA_ClearFlag
DMA_Cmd
DMA_Init
SDIO_DataConfig
SDIO_GetFlagStatus
SDIO_ReadData
SDIO_Init
SDIO_SetPowerState
SDIO_ClockCmd
SDIO_GetPowerState
RCC_APB2PeriphClockCmd
GPIO_Init
RCC_AHBPeriphClockCmd
SDIO_DeInit
SDIO_DMACmd
SDIO_ITConfig
DMA_GetFlagStatus
SDIO_WriteData
SDIO_GetITStatus
SDIO_ClearITPendingBit
